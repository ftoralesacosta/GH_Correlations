
;; Function virtual const char* TApplicationImp::ApplicationName() const (_ZNK15TApplicationImp15ApplicationNameEv, funcdef_no=7139, decl_uid=112468, cgraph_uid=3387)


********** Local #1: **********

          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 24:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=613,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=613,losers=1 -- reject
          alt=1,overall=9,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 2 in insn 37:  (0) qm  (1) qn {*testqi_1_maybe_si}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) rem {*movdi_internal_rex64}
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 24
changing reg in insn 17
changing reg in insn 31
changing reg in insn 2
changing reg in insn 37
changing reg in insn 24
changing reg in insn 17
changing reg in insn 7


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


virtual const char* TApplicationImp::ApplicationName() const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 5[di] 17[flags]
;;  ref usage 	r0={4d,3u} r1={1d} r2={1d} r4={1d} r5={2d,5u} r7={1d,4u} r17={2d,1u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 35{22d,13u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 5 [di] 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/f:DI 5 di [orig:64 this ] [64])
        (reg:DI 5 di [ this ])) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:41 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 7 3 8 2 (var_location:DI D#12 (plus:DI (reg/f:DI 5 di [orig:64 this ] [64])
        (const_int 8 [0x8]))) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:41 -1
     (nil))
(debug_insn 8 7 9 2 (var_location:DI this (debug_expr:DI D#12)) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:41 -1
     (nil))
(debug_insn 9 8 10 2 (var_location:DI this (debug_expr:DI D#12)) -1
     (nil))
(debug_insn 10 9 11 2 (var_location:DI this (debug_expr:DI D#12)) -1
     (nil))
(note 11 10 12 2 NOTE_INSN_DELETED)
(note 12 11 24 2 NOTE_INSN_DELETED)
(insn 24 12 37 2 (parallel [
            (set (reg/f:DI 0 ax [orig:62 iftmp.4 ] [62])
                (plus:DI (reg/f:DI 5 di [orig:64 this ] [64])
                    (const_int 17 [0x11])))
            (clobber (reg:CC 17 flags))
        ]) /usr/common/usg/software/ROOT/6.08.00/include/root/TString.h:237 274 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 37 24 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:QI (mem/j:QI (plus:DI (reg/f:DI 5 di [orig:64 this ] [64])
                        (const_int 16 [0x10])) [0 MEM[(const struct TString *)this_1(D) + 8B].fRep.D.77406.fShort.fSize+0 S1 A64])
                (const_int 1 [0x1]))
            (const_int 0 [0]))) /usr/common/usg/software/ROOT/6.08.00/include/root/TString.h:237 391 {*testqi_1_maybe_si}
     (nil))
(jump_insn 14 37 15 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 25)
            (pc))) /usr/common/usg/software/ROOT/6.08.00/include/root/TString.h:237 621 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 6100 [0x17d4])
            (nil)))
 -> 25)
;;  succ:       3 [39.0%]  (FALLTHRU)
;;              4 [61.0%] 
;; lr  out 	 0 [ax] 5 [di] 7 [sp]

;; basic block 3, loop depth 0, count 0, freq 3900, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [39.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax]
(note 15 14 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(debug_insn 16 15 17 3 (var_location:DI this (debug_expr:DI D#12)) -1
     (nil))
(insn 17 16 25 3 (set (reg/f:DI 0 ax [orig:62 iftmp.4 ] [62])
        (mem/f/j:DI (plus:DI (reg/f:DI 5 di [orig:64 this ] [64])
                (const_int 24 [0x18])) [0 MEM[(const struct TString *)this_1(D) + 8B].fRep.D.77406.fLong.fData+0 S8 A64])) /usr/common/usg/software/ROOT/6.08.00/include/root/TString.h:233 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:64 this ] [64])
        (nil)))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%]  (FALLTHRU)
;;              2 [61.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax]
(code_label 25 17 26 4 3 "" [1 uses])
(note 26 25 31 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 31 26 34 4 (set (reg/i:DI 0 ax)
        (reg/f:DI 0 ax [orig:62 iftmp.4 ] [62])) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:41 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:62 iftmp.4 ] [62])
        (nil)))
(insn 34 31 0 4 (use (reg/i:DI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:41 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]


;; Function virtual void TApplicationImp::Show() (_ZN15TApplicationImp4ShowEv, funcdef_no=7140, decl_uid=112470, cgraph_uid=3388)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TApplicationImp::Show()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TApplicationImp::Hide() (_ZN15TApplicationImp4HideEv, funcdef_no=7141, decl_uid=112472, cgraph_uid=3389)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TApplicationImp::Hide()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TApplicationImp::Iconify() (_ZN15TApplicationImp7IconifyEv, funcdef_no=7142, decl_uid=112474, cgraph_uid=3390)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TApplicationImp::Iconify()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual Bool_t TApplicationImp::IsCmdThread() (_ZN15TApplicationImp11IsCmdThreadEv, funcdef_no=7143, decl_uid=112476, cgraph_uid=3391)


********** Local #1: **********

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) q  (1) qn {*movqi_internal}
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual Bool_t TApplicationImp::IsCmdThread()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 21{17d,4u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 3 13 2 (set (reg/i:QI 0 ax)
        (const_int 1 [0x1])) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:45 91 {*movqi_internal}
     (nil))
(insn 13 10 0 2 (use (reg/i:QI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:45 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]


;; Function virtual void TApplicationImp::Init() (_ZN15TApplicationImp4InitEv, funcdef_no=7144, decl_uid=112478, cgraph_uid=3392)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TApplicationImp::Init()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TApplicationImp::Open() (_ZN15TApplicationImp4OpenEv, funcdef_no=7145, decl_uid=112480, cgraph_uid=3393)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TApplicationImp::Open()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TApplicationImp::Raise() (_ZN15TApplicationImp5RaiseEv, funcdef_no=7146, decl_uid=112482, cgraph_uid=3394)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TApplicationImp::Raise()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TApplicationImp::Lower() (_ZN15TApplicationImp5LowerEv, funcdef_no=7147, decl_uid=112484, cgraph_uid=3395)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TApplicationImp::Lower()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual Int_t TApplicationImp::ExecCommand(TGWin32Command*, Bool_t) (_ZN15TApplicationImp11ExecCommandEP14TGWin32Commandb, funcdef_no=7157, decl_uid=112488, cgraph_uid=3405)


********** Local #1: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual Int_t TApplicationImp::ExecCommand(TGWin32Command*, Bool_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 21{17d,4u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
(note 7 1 6 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 6 7 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 6 16 2 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:57 89 {*movsi_internal}
     (nil))
(insn 16 13 0 2 (use (reg/i:SI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:57 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]


;; Function virtual void TCanvasImp::Lock() (_ZN10TCanvasImp4LockEv, funcdef_no=7412, decl_uid=117322, cgraph_uid=3734)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TCanvasImp::Lock()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TCanvasImp::Unlock() (_ZN10TCanvasImp6UnlockEv, funcdef_no=7413, decl_uid=117324, cgraph_uid=3735)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TCanvasImp::Unlock()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual Bool_t TCanvasImp::IsLocked() (_ZN10TCanvasImp8IsLockedEv, funcdef_no=7414, decl_uid=117326, cgraph_uid=3736)


********** Local #1: **********

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) q  (1) qn {*movqi_internal}
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual Bool_t TCanvasImp::IsLocked()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 21{17d,4u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 3 13 2 (set (reg/i:QI 0 ax)
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:45 91 {*movqi_internal}
     (nil))
(insn 13 10 0 2 (use (reg/i:QI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:45 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]


;; Function TCanvasImp::~TCanvasImp() (_ZN10TCanvasImpD2Ev, funcdef_no=7419, decl_uid=117483, cgraph_uid=3741)


********** Local #1: **********

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 6:  (0) m  (1) re {*movdi_internal_rex64}
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 2
changing reg in insn 6


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


TCanvasImp::~TCanvasImp()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 5[di]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={2d,2u} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 21{17d,4u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 5 [di]
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 5 di [orig:59 this ] [59])
        (reg:DI 5 di [ this ])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:51 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/f/j:DI (reg/f:DI 5 di [orig:59 this ] [59]) [0 this_2(D)->_vptr.TCanvasImp+0 S8 A64])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV10TCanvasImp")  <var_decl 0x2b94caccb1c8 _ZTV10TCanvasImp>)
                (const_int 16 [0x10])))) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:51 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:59 this ] [59])
        (nil)))
(debug_insn 7 6 0 2 (var_location <L0> (clobber (const_int 0 [0]))) -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TCanvasImp::Close() (_ZN10TCanvasImp5CloseEv, funcdef_no=7423, decl_uid=117350, cgraph_uid=3745)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TCanvasImp::Close()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TCanvasImp::ForceUpdate() (_ZN10TCanvasImp11ForceUpdateEv, funcdef_no=7424, decl_uid=117352, cgraph_uid=3746)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TCanvasImp::ForceUpdate()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TCanvasImp::Iconify() (_ZN10TCanvasImp7IconifyEv, funcdef_no=7425, decl_uid=117360, cgraph_uid=3747)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TCanvasImp::Iconify()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual Int_t TCanvasImp::InitWindow() (_ZN10TCanvasImp10InitWindowEv, funcdef_no=7426, decl_uid=117362, cgraph_uid=3748)


********** Local #1: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual Int_t TCanvasImp::InitWindow()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 21{17d,4u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 3 13 2 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:58 89 {*movsi_internal}
     (nil))
(insn 13 10 0 2 (use (reg/i:SI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:58 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]


;; Function virtual void TCanvasImp::Show() (_ZN10TCanvasImp4ShowEv, funcdef_no=7427, decl_uid=117383, cgraph_uid=3749)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TCanvasImp::Show()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual Bool_t TCanvasImp::HasEditor() const (_ZNK10TCanvasImp9HasEditorEv, funcdef_no=7428, decl_uid=117404, cgraph_uid=3750)


********** Local #1: **********

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) q  (1) qn {*movqi_internal}
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual Bool_t TCanvasImp::HasEditor() const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 21{17d,4u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 3 13 2 (set (reg/i:QI 0 ax)
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:74 91 {*movqi_internal}
     (nil))
(insn 13 10 0 2 (use (reg/i:QI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:74 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]


;; Function virtual Bool_t TCanvasImp::HasMenuBar() const (_ZNK10TCanvasImp10HasMenuBarEv, funcdef_no=7429, decl_uid=117406, cgraph_uid=3751)


********** Local #1: **********

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) q  (1) qn {*movqi_internal}
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual Bool_t TCanvasImp::HasMenuBar() const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 21{17d,4u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 3 13 2 (set (reg/i:QI 0 ax)
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:75 91 {*movqi_internal}
     (nil))
(insn 13 10 0 2 (use (reg/i:QI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:75 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]


;; Function virtual Bool_t TCanvasImp::HasStatusBar() const (_ZNK10TCanvasImp12HasStatusBarEv, funcdef_no=7430, decl_uid=117408, cgraph_uid=3752)


********** Local #1: **********

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) q  (1) qn {*movqi_internal}
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual Bool_t TCanvasImp::HasStatusBar() const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 21{17d,4u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 3 13 2 (set (reg/i:QI 0 ax)
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:76 91 {*movqi_internal}
     (nil))
(insn 13 10 0 2 (use (reg/i:QI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:76 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]


;; Function virtual Bool_t TCanvasImp::HasToolBar() const (_ZNK10TCanvasImp10HasToolBarEv, funcdef_no=7431, decl_uid=117410, cgraph_uid=3753)


********** Local #1: **********

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) q  (1) qn {*movqi_internal}
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual Bool_t TCanvasImp::HasToolBar() const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 21{17d,4u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 3 13 2 (set (reg/i:QI 0 ax)
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:77 91 {*movqi_internal}
     (nil))
(insn 13 10 0 2 (use (reg/i:QI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:77 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]


;; Function virtual Bool_t TCanvasImp::HasToolTips() const (_ZNK10TCanvasImp11HasToolTipsEv, funcdef_no=7432, decl_uid=117412, cgraph_uid=3754)


********** Local #1: **********

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) q  (1) qn {*movqi_internal}
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual Bool_t TCanvasImp::HasToolTips() const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 21{17d,4u,0e} in 2{2 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax]
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 3 13 2 (set (reg/i:QI 0 ax)
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:78 91 {*movqi_internal}
     (nil))
(insn 13 10 0 2 (use (reg/i:QI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:78 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]


;; Function virtual UInt_t TCanvasImp::GetWindowGeometry(Int_t&, Int_t&, UInt_t&, UInt_t&) (_ZN10TCanvasImp17GetWindowGeometryERiS0_RjS1_, funcdef_no=7445, decl_uid=117358, cgraph_uid=3767)


********** Local #1: **********

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 3
changing reg in insn 11
changing reg in insn 4
changing reg in insn 10
changing reg in insn 5
changing reg in insn 13


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual UInt_t TCanvasImp::GetWindowGeometry(Int_t&, Int_t&, UInt_t&, UInt_t&)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 37[r8]
;;  ref usage 	r0={2d,2u} r1={2d,2u} r2={2d,2u} r4={2d,2u} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d,1u} r38={1d} 
;;    total ref usage 31{20d,11u,0e} in 9{9 regular + 0 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 7 [sp] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si]
(note 8 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 3 8 4 2 (set (reg/v/f:DI 4 si [orig:61 x ] [61])
        (reg:DI 4 si [ x ])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:86 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ x ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 1 dx [orig:62 y ] [62])
        (reg:DI 1 dx [ y ])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:86 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ y ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 2 cx [orig:63 w ] [63])
        (reg:DI 2 cx [ w ])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:86 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ w ])
        (nil)))
(note 6 5 7 2 NOTE_INSN_DELETED)
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (mem:SI (reg/v/f:DI 1 dx [orig:62 y ] [62]) [0 *y_2(D)+0 S4 A32])
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:86 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 1 dx [orig:62 y ] [62])
        (nil)))
(insn 11 10 12 2 (set (mem:SI (reg/v/f:DI 4 si [orig:61 x ] [61]) [0 *x_4(D)+0 S4 A32])
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:86 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 4 si [orig:61 x ] [61])
        (nil)))
(insn 12 11 13 2 (set (mem:SI (reg:DI 37 r8 [ h ]) [0 *h_6(D)+0 S4 A32])
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:86 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ h ])
        (nil)))
(insn 13 12 18 2 (set (mem:SI (reg/v/f:DI 2 cx [orig:63 w ] [63]) [0 *w_8(D)+0 S4 A32])
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:86 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v/f:DI 2 cx [orig:63 w ] [63])
        (nil)))
(insn 18 13 21 2 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:86 89 {*movsi_internal}
     (nil))
(insn 21 18 0 2 (use (reg/i:SI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:86 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]


;; Function virtual void TCanvasImp::SetStatusText(const char*, Int_t) (_ZN10TCanvasImp13SetStatusTextEPKci, funcdef_no=7446, decl_uid=117366, cgraph_uid=3768)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TCanvasImp::SetStatusText(const char*, Int_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 5 6 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TCanvasImp::SetWindowPosition(Int_t, Int_t) (_ZN10TCanvasImp17SetWindowPositionEii, funcdef_no=7447, decl_uid=117370, cgraph_uid=3769)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TCanvasImp::SetWindowPosition(Int_t, Int_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 5 6 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TCanvasImp::SetWindowSize(UInt_t, UInt_t) (_ZN10TCanvasImp13SetWindowSizeEjj, funcdef_no=7448, decl_uid=117374, cgraph_uid=3770)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TCanvasImp::SetWindowSize(UInt_t, UInt_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 5 6 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TCanvasImp::SetWindowTitle(const char*) (_ZN10TCanvasImp14SetWindowTitleEPKc, funcdef_no=7449, decl_uid=117377, cgraph_uid=3771)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TCanvasImp::SetWindowTitle(const char*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 5 1 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 4 5 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TCanvasImp::SetCanvasSize(UInt_t, UInt_t) (_ZN10TCanvasImp13SetCanvasSizeEjj, funcdef_no=7450, decl_uid=117381, cgraph_uid=3772)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TCanvasImp::SetCanvasSize(UInt_t, UInt_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 5 6 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TCanvasImp::ShowMenuBar(Bool_t) (_ZN10TCanvasImp11ShowMenuBarEb, funcdef_no=7451, decl_uid=117386, cgraph_uid=3773)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TCanvasImp::ShowMenuBar(Bool_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 5 6 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TCanvasImp::ShowStatusBar(Bool_t) (_ZN10TCanvasImp13ShowStatusBarEb, funcdef_no=7452, decl_uid=117389, cgraph_uid=3774)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TCanvasImp::ShowStatusBar(Bool_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 5 6 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TCanvasImp::RaiseWindow() (_ZN10TCanvasImp11RaiseWindowEv, funcdef_no=7453, decl_uid=117391, cgraph_uid=3775)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TCanvasImp::RaiseWindow()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TCanvasImp::ReallyDelete() (_ZN10TCanvasImp12ReallyDeleteEv, funcdef_no=7454, decl_uid=117393, cgraph_uid=3776)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TCanvasImp::ReallyDelete()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TCanvasImp::ShowEditor(Bool_t) (_ZN10TCanvasImp10ShowEditorEb, funcdef_no=7455, decl_uid=117396, cgraph_uid=3777)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TCanvasImp::ShowEditor(Bool_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 5 6 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TCanvasImp::ShowToolBar(Bool_t) (_ZN10TCanvasImp11ShowToolBarEb, funcdef_no=7456, decl_uid=117399, cgraph_uid=3778)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TCanvasImp::ShowToolBar(Bool_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 5 6 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual void TCanvasImp::ShowToolTips(Bool_t) (_ZN10TCanvasImp12ShowToolTipsEb, funcdef_no=7457, decl_uid=117402, cgraph_uid=3779)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=8, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TCanvasImp::ShowToolTips(Bool_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d} r7={1d,2u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} 
;;    total ref usage 18{16d,2u,0e} in 0{0 regular + 0 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	
(note 6 1 5 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 5 6 0 2 NOTE_INSN_FUNCTION_BEG)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual TCanvasImp::~TCanvasImp() (_ZN10TCanvasImpD0Ev, funcdef_no=7421, decl_uid=117477, cgraph_uid=3743)


********** Local #1: **********

          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
changing reg in insn 2
changing reg in insn 10
changing reg in insn 7
changing reg in insn 6


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual TCanvasImp::~TCanvasImp()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 5[di] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={4d,5u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 70{62d,8u,0e} in 7{6 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 5 [di] 7 [sp]
;; lr  use 	 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (reg/f:DI 5 di [orig:59 this ] [59])
        (reg:DI 5 di [ this ])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:51 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(debug_insn 6 3 7 2 (var_location:DI this (reg/f:DI 5 di [orig:59 this ] [59])) -1
     (nil))
(insn 7 6 8 2 (set (mem/f/j:DI (reg/f:DI 5 di [orig:59 this ] [59]) [0 this_2(D)->_vptr.TCanvasImp+0 S8 A64])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV10TCanvasImp")  <var_decl 0x2b94caccb1c8 _ZTV10TCanvasImp>)
                (const_int 16 [0x10])))) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:51 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 8 7 9 2 (var_location <L0> (clobber (const_int 0 [0]))) -1
     (nil))
(debug_insn 9 8 10 2 (var_location <L0> (clobber (const_int 0 [0]))) -1
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/f:DI 5 di [orig:59 this ] [59])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:51 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:59 this ] [59])
        (nil)))
(call_insn 11 10 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x2b94c3b33a00 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:51 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual TClass* TApplicationImp::IsA() const (_ZNK15TApplicationImp3IsAEv, funcdef_no=7149, decl_uid=112495, cgraph_uid=3397)


********** Local #1: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (1) rzw {*call_value}
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
changing reg in insn 7
changing reg in insn 12


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual TClass* TApplicationImp::IsA() const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 7[sp]
;;  ref usage 	r0={4d,4u} r1={2d} r2={2d} r4={2d} r5={2d} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 69{62d,7u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN15TApplicationImp5ClassEv") [flags 0x41]  <function_decl 0x2b94ca918600 Class>) [0 Class S1 A8])
            (const_int 0 [0]))) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:52 672 {*call_value}
     (nil)
    (nil))
(insn 7 6 12 2 (set (reg/f:DI 0 ax [orig:59 D.158372 ] [59])
        (reg:DI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:52 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 7 15 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 0 ax [orig:59 D.158372 ] [59])) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:52 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.158372 ] [59])
        (nil)))
(insn 15 12 0 2 (use (reg/i:DI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:52 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]


;; Function virtual void TApplicationImp::ShowMembers(TMemberInspector&) const (_ZNK15TApplicationImp11ShowMembersER16TMemberInspector, funcdef_no=7150, decl_uid=112498, cgraph_uid=3398)


********** Local #1: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=-24, prev_offset=0)
changing reg in insn 8
changing reg in insn 11
changing reg in insn 2
changing reg in insn 10
changing reg in insn 3
changing reg in insn 9


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TApplicationImp::ShowMembers(TMemberInspector&) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={4d,2u} r1={4d,1u} r2={3d} r3={1d,1u} r4={4d,2u} r5={4d,2u} r6={1d,1u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={2d} r18={2d} r19={2d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 123{110d,13u,0e} in 8{6 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/f:DI 3 bx [orig:60 this ] [60])
        (reg:DI 5 di [ this ])) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:52 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 6 bp [orig:61 insp ] [61])
        (reg:DI 4 si [ insp ])) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:52 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ insp ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 7 4 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN15TApplicationImp5ClassEv") [flags 0x41]  <function_decl 0x2b94ca918600 Class>) [0 Class S1 A8])
            (const_int 0 [0]))) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:52 672 {*call_value}
     (nil)
    (nil))
(insn 8 7 9 2 (set (reg/f:DI 0 ax [orig:59 D.158374 ] [59])
        (reg:DI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:52 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 6 bp [orig:61 insp ] [61])) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:52 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:61 insp ] [61])
        (nil)))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [orig:60 this ] [60])) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:52 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:60 this ] [60])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:59 D.158374 ] [59])) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:52 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.158374 ] [59])
        (nil)))
(call_insn 12 11 0 2 (call (mem:QI (symbol_ref:DI ("_ZN4ROOT17Class_ShowMembersEP6TClassPKvR16TMemberInspector") [flags 0x41]  <function_decl 0x2b94c656f800 Class_ShowMembers>) [0 Class_ShowMembers S1 A8])
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TApplicationImp.h:52 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function virtual TClass* TCanvasImp::IsA() const (_ZNK10TCanvasImp3IsAEv, funcdef_no=7434, decl_uid=117419, cgraph_uid=3756)


********** Local #1: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (1) rzw {*call_value}
New elimination table:
Can eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=-8, prev_offset=0)
changing reg in insn 7
changing reg in insn 12


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual TClass* TCanvasImp::IsA() const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 7[sp]
;;  ref usage 	r0={4d,4u} r1={2d} r2={2d} r4={2d} r5={2d} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={1d} r18={1d} r19={1d} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} 
;;    total ref usage 69{62d,7u,0e} in 4{3 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 4 1 3 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 3 4 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN10TCanvasImp5ClassEv") [flags 0x41]  <function_decl 0x2b94cacc4000 Class>) [0 Class S1 A8])
            (const_int 0 [0]))) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:80 672 {*call_value}
     (nil)
    (nil))
(insn 7 6 12 2 (set (reg/f:DI 0 ax [orig:59 D.158376 ] [59])
        (reg:DI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:80 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 7 15 2 (set (reg/i:DI 0 ax)
        (reg/f:DI 0 ax [orig:59 D.158376 ] [59])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:80 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.158376 ] [59])
        (nil)))
(insn 15 12 0 2 (use (reg/i:DI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:80 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]


;; Function virtual void TCanvasImp::ShowMembers(TMemberInspector&) const (_ZNK10TCanvasImp11ShowMembersER16TMemberInspector, funcdef_no=7435, decl_uid=117422, cgraph_uid=3757)


********** Local #1: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) rzw {*call}
New elimination table:
Can eliminate 16 to 7 (offset=32, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=-24, prev_offset=0)
changing reg in insn 8
changing reg in insn 11
changing reg in insn 2
changing reg in insn 10
changing reg in insn 3
changing reg in insn 9


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 7.
verify found no changes in insn with uid = 12.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)


virtual void TCanvasImp::ShowMembers(TMemberInspector&) const

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 3[bx] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={4d,2u} r1={4d,1u} r2={3d} r3={1d,1u} r4={4d,2u} r5={4d,2u} r6={1d,1u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r17={2d} r18={2d} r19={2d} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} 
;;    total ref usage 123{110d,13u,0e} in 8{6 regular + 2 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 7 [sp]
;; lr  use 	 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg/f:DI 3 bx [orig:60 this ] [60])
        (reg:DI 5 di [ this ])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:80 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 6 bp [orig:61 insp ] [61])
        (reg:DI 4 si [ insp ])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:80 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ insp ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 7 4 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN10TCanvasImp5ClassEv") [flags 0x41]  <function_decl 0x2b94cacc4000 Class>) [0 Class S1 A8])
            (const_int 0 [0]))) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:80 672 {*call_value}
     (nil)
    (nil))
(insn 8 7 9 2 (set (reg/f:DI 0 ax [orig:59 D.158378 ] [59])
        (reg:DI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:80 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (reg/v/f:DI 6 bp [orig:61 insp ] [61])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:80 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:61 insp ] [61])
        (nil)))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg/f:DI 3 bx [orig:60 this ] [60])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:80 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:60 this ] [60])
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:59 D.158378 ] [59])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:80 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:59 D.158378 ] [59])
        (nil)))
(call_insn 12 11 0 2 (call (mem:QI (symbol_ref:DI ("_ZN4ROOT17Class_ShowMembersEP6TClassPKvR16TMemberInspector") [flags 0x41]  <function_decl 0x2b94c656f800 Class_ShowMembers>) [0 Class_ShowMembers S1 A8])
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TCanvasImp.h:80 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 7 [sp]


;; Function <built-in> (main._omp_fn.0, funcdef_no=9031, decl_uid=151930, cgraph_uid=5849)


********** Local #1: **********

          alt=1,overall=7,losers=1,rld_nregs=1
          alt=3,overall=10,losers=1 -- reject
          alt=4,overall=8,losers=1 -- reject
          alt=5,overall=11,losers=1 -- reject
          alt=6,overall=14,losers=1 -- reject
          alt=7,overall=13,losers=1 -- reject
          alt=9,overall=8,losers=1 -- reject
          alt=10,overall=11,losers=1 -- reject
          alt=11,overall=8,losers=1 -- reject
          alt=12,overall=8,losers=1 -- reject
          alt=13,overall=13,losers=1 -- reject
          alt=15,overall=14,losers=1 -- reject
	 Choosing alt 1 in insn 12:  (0) r  (1) rem {*movdi_internal_rex64}
      Creating newreg=527 from oldreg=64, assigning class GENERAL_REGS to r527
   12: r527:DI=[r292:DI+0x100]
    Inserting insn reload after:
  759: r64:DI=r527:DI

          alt=1,overall=8,losers=1,rld_nregs=1
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 759:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=3,overall=10,losers=1 -- reject
          alt=4,overall=8,losers=1 -- reject
          alt=5,overall=11,losers=1 -- reject
          alt=6,overall=14,losers=1 -- reject
          alt=7,overall=13,losers=1 -- reject
          alt=9,overall=8,losers=1 -- reject
          alt=10,overall=11,losers=1 -- reject
          alt=11,overall=8,losers=1 -- reject
          alt=12,overall=8,losers=1 -- reject
          alt=13,overall=13,losers=1 -- reject
          alt=15,overall=14,losers=1 -- reject
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
      Creating newreg=528 from oldreg=66, assigning class GENERAL_REGS to r528
   15: r528:DI=[r292:DI+0xf0]
    Inserting insn reload after:
  760: r66:DI=r528:DI

          alt=1,overall=8,losers=1,rld_nregs=1
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 760:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=3,overall=10,losers=1 -- reject
          alt=4,overall=8,losers=1 -- reject
          alt=5,overall=11,losers=1 -- reject
          alt=6,overall=14,losers=1 -- reject
          alt=7,overall=13,losers=1 -- reject
          alt=9,overall=8,losers=1 -- reject
          alt=10,overall=11,losers=1 -- reject
          alt=11,overall=8,losers=1 -- reject
          alt=12,overall=8,losers=1 -- reject
          alt=13,overall=13,losers=1 -- reject
          alt=15,overall=14,losers=1 -- reject
	 Choosing alt 1 in insn 18:  (0) r  (1) rem {*movdi_internal_rex64}
      Creating newreg=529 from oldreg=68, assigning class GENERAL_REGS to r529
   18: r529:DI=[r292:DI+0xe0]
    Inserting insn reload after:
  761: r68:DI=r529:DI

          alt=1,overall=8,losers=1,rld_nregs=1
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 761:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=3,overall=10,losers=1 -- reject
          alt=4,overall=8,losers=1 -- reject
          alt=5,overall=11,losers=1 -- reject
          alt=6,overall=14,losers=1 -- reject
          alt=7,overall=13,losers=1 -- reject
          alt=9,overall=8,losers=1 -- reject
          alt=10,overall=11,losers=1 -- reject
          alt=11,overall=8,losers=1 -- reject
          alt=12,overall=8,losers=1 -- reject
          alt=13,overall=13,losers=1 -- reject
          alt=15,overall=14,losers=1 -- reject
	 Choosing alt 1 in insn 20:  (0) r  (1) rem {*movdi_internal_rex64}
      Creating newreg=530 from oldreg=69, assigning class GENERAL_REGS to r530
   20: r530:DI=[r292:DI+0xd8]
    Inserting insn reload after:
  762: r69:DI=r530:DI

          alt=1,overall=8,losers=1,rld_nregs=1
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 762:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (1) rzw {*call_value}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (1) rzw {*call_value}
          alt=0,overall=14,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) rm {*extendsidi2_rex64}
      Removing equiv init insn 28 (freq=146)
   28: r294:DI=[r292:DI+0x8]
      REG_EQUIV [r292:DI+0x8]
deleting insn with uid = 28.
Changing pseudo 294 in operand 1 of insn 29 on equiv [r292:DI+0x8]
          alt=0,overall=11,losers=1,rld_nregs=1
          alt=1,overall=11,losers=1,rld_nregs=1
          alt=2,overall=20,losers=2 -- reject
          alt=3,overall=9,losers=1,rld_nregs=1
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=20,losers=2 -- reject
          alt=3,overall=18,losers=2 -- reject
	 Choosing alt 3 in insn 29:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=531, assigning class GENERAL_REGS to r531
   29: {r293:DI=r531:DI+0x1;clobber flags:CC;}
      REG_DEAD r294:DI
      REG_UNUSED flags:CC
      REG_EQUAL [r292:DI+0x8]+0x1
    Inserting insn reload before:
  763: r531:DI=[r292:DI+0x8]

          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 763:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmoddi4}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) rm  (1) re {*cmpdi_1}
          alt=2,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
  Commutative operand exchange in insn 38
	 Choosing alt 2 in insn 38:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=532 from oldreg=299, assigning class GENERAL_REGS to r532
   38: {r532:DI=r532:DI*r61:DI;clobber flags:CC;}
      REG_DEAD r79:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  764: r532:DI=r79:DI
    Inserting insn reload after:
  765: r299:DI=r532:DI

          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 40
	 Choosing alt 0 in insn 40:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=6,losers=1 -- reject
          alt=1,overall=6,losers=1 -- reject
          alt=2,overall=8,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 44:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=7,losers=1,rld_nregs=2
          alt=1,overall=13,losers=2 -- reject
          alt=2,overall=7,losers=1,rld_nregs=2
          alt=3,overall=7,losers=1,rld_nregs=1
          alt=0,overall=7,losers=1,rld_nregs=2
          alt=1,overall=13,losers=2 -- reject
          alt=2,overall=7,losers=1,rld_nregs=2
          alt=3,overall=7,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 46:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=533 from oldreg=84, assigning class GENERAL_REGS to r533
   46: {r533:DI=r71:DI+r83:DI;clobber flags:CC;}
      REG_DEAD r83:DI
      REG_DEAD r71:DI
      REG_UNUSED flags:CC
    Inserting insn reload after:
  766: r84:DI=r533:DI

          alt=1,overall=8,losers=1,rld_nregs=1
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 766:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=13,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 47:  (0) =rm  (1) 0  (2) cJ {*lshrdi3_1}
      Creating newreg=534 from oldreg=244, assigning class GENERAL_REGS to r534
   47: {r534:DI=r534:DI 0>>0x3;clobber flags:CC;}
      REG_DEAD r67:DI
      REG_UNUSED flags:CC
      REG_EQUAL r67:DI 0>>0x3
    Inserting insn reload before:
  767: r534:DI=r67:DI
    Inserting insn reload after:
  768: r244:DI=r534:DI

          alt=1,overall=8,losers=1,rld_nregs=1
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 768:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=13,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 48:  (0) =rm  (1) 0  (2) cJ {*lshrdi3_1}
      Creating newreg=535 from oldreg=257, assigning class GENERAL_REGS to r535
   48: {r535:DI=r535:DI 0>>0x3;clobber flags:CC;}
      REG_DEAD r65:DI
      REG_UNUSED flags:CC
      REG_EQUAL r65:DI 0>>0x3
    Inserting insn reload before:
  769: r535:DI=r65:DI
    Inserting insn reload after:
  770: r257:DI=r535:DI

          alt=1,overall=8,losers=1,rld_nregs=1
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 770:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=13,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 49:  (0) =rm  (1) 0  (2) cJ {*lshrdi3_1}
      Creating newreg=536 from oldreg=270, assigning class GENERAL_REGS to r536
   49: {r536:DI=r536:DI 0>>0x3;clobber flags:CC;}
      REG_DEAD r69:DI
      REG_UNUSED flags:CC
      REG_EQUAL r69:DI 0>>0x3
    Inserting insn reload before:
  771: r536:DI=r69:DI
    Inserting insn reload after:
  772: r270:DI=r536:DI

          alt=1,overall=8,losers=1,rld_nregs=1
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 772:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 771:  (0) r  (1) rem {*movdi_internal_rex64}
      Removing equiv init insn 269 (freq=89)
  269: r501:V2DF=[`*.LC0']
      REG_EQUIV [`*.LC0']
deleting insn with uid = 269.
      Removing equiv init insn 278 (freq=89)
  278: r502:V4SF=[`*.LC2']
      REG_EQUIV [`*.LC2']
deleting insn with uid = 278.
      Removing equiv init insn 357 (freq=89)
  357: r503:V4SF=[`*.LC2']
      REG_EQUIV [`*.LC2']
deleting insn with uid = 357.
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 53:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 55:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 63:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) rm  (1) re {*cmpdi_1}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 75:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=7,losers=1,rld_nregs=1
          alt=3,overall=614,losers=1 -- reject
          alt=5,overall=14,losers=1 -- reject
	 Choosing alt 0 in insn 86:  (0) =r  (1) rmWz {*zero_extendsidi2_rex64}
      Creating newreg=537 from oldreg=302, assigning class GENERAL_REGS to r537
   86: r537:DI=zero_extend([r510:DI+0x118])
    Inserting insn reload after:
  773: r302:DI=r537:DI

          alt=1,overall=8,losers=1,rld_nregs=1
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 773:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =r  (1) rmWz {*zero_extendsidi2_rex64}
          alt=2,overall=8,losers=1,rld_nregs=1
          alt=2,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 105
	 Choosing alt 2 in insn 105:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r  (1) p {*leadi}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 111:  (0) rm  (1) 0  (2) re {*anddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 117:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =r  (1) rmWz {*zero_extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =r  (1) rmWz {*zero_extendsidi2_rex64}
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 143
	 Choosing alt 2 in insn 143:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) p {*leadi}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 149:  (0) rm  (1) 0  (2) re {*anddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 154:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=3,overall=7,losers=1,rld_nregs=1
          alt=4,overall=8,losers=1 -- reject
          alt=5,overall=8,losers=1 -- reject
          alt=6,overall=14,losers=1 -- reject
          alt=7,overall=13,losers=1 -- reject
          alt=9,overall=8,losers=1 -- reject
          alt=10,overall=8,losers=1 -- reject
          alt=11,overall=8,losers=1 -- reject
          alt=12,overall=8,losers=1 -- reject
          alt=13,overall=13,losers=1 -- reject
          alt=15,overall=14,losers=1 -- reject
	 Choosing alt 3 in insn 155:  (0) m  (1) re {*movdi_internal_rex64}
      Creating newreg=538 from oldreg=336, assigning class GENERAL_REGS to r538
  155: r115:DI=r538:DI
    Inserting insn reload before:
  774: r538:DI=r336:DI

          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 774:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) rmWz {*zero_extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) p {*leadi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =rm  (1) 0  (2) cJ {*lshrdi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=10,losers=1,rld_nregs=1
          alt=1,overall=10,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 175:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =rm  (1) 0  (2) cJ {*lshrdi3_1}
          alt=0,overall=15,losers=2,rld_nregs=2
          alt=1,overall=7,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 177:  (0) r  (1) l  (2) M {*ashldi3_1}
      Creating newreg=539 from oldreg=350, assigning class GENERAL_REGS to r539
  177: {r539:DI=r349:DI<<0x2;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload after:
  775: r350:DI=r539:DI

          alt=1,overall=8,losers=1,rld_nregs=1
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 775:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 180:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 184:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 185:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 186:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 187:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 188:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 197:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 198:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 200:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 206:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 207:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 208:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 209:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 210:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 215:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 219:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 220:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 222:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 224:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 225:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 227:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 228:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 229:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 230:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 231:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 232:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 234:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 237:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 239:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 241:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 242:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 243:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 244:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 246:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 247:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 249:  (0) rzw {*call}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 250:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 252:  (0) rzw {*call}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 254:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (0) x  (1) xm {*cmpiusf_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 259:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) x  (1) xm {*cmpiusf_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 265:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 266:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 267:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 268:  (0) =x  (1) 0  (2) xm {*fop_df_1_sse}
Changing pseudo 501 in operand 2 of insn 270 on equiv [`*.LC0']
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 270:  (0) =x  (1) 0  (2) xm {*absnegdf2_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 272:  (0) x  (1) xm {*cmpiudf_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 276:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 277:  (0) =x  (1) 0  (2) xm {*fop_sf_1_sse}
Changing pseudo 502 in operand 2 of insn 279 on equiv [`*.LC2']
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 279:  (0) =x  (1) 0  (2) xm {*absnegsf2_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 280:  (0) x  (1) xm {*cmpiusf_sse}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 283:  (0) ?mq {*cmpqi_ccno_1}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 291:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=2,overall=8,losers=1,rld_nregs=1
          alt=2,overall=8,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 297:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=540 from oldreg=382, assigning class GENERAL_REGS to r540
  297: {r540:DI=r540:DI*r514:DI;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  776: r540:DI=r513:DI
    Inserting insn reload after:
  777: r382:DI=r540:DI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 299:  (0) =r  (1) p {*leadi}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 300:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 302:  (0) x  (1) xm {*cmpiusf_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 305:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 309:  (0) =r  (1) rmWz {*zero_extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 310:  (0) rm  (1) re {*cmpdi_1}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 733:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 318:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=0,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 321:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
      Creating newreg=541 from oldreg=385, assigning class SSE_REGS to r541
  321: r541:DF=r541:DF+[`*.LC4']
    Inserting insn reload before:
  778: r541:DF=r166:DF
    Inserting insn reload after:
  779: r385:DF=r541:DF

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 322:  (0) =r  (1) x {fix_truncdfsi_sse}
          alt=2,overall=9,losers=1,rld_nregs=1
          alt=0,overall=613,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 324
	 Choosing alt 2 in insn 324:  (0) rm  (1) re {*testsi_1}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 327:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 328:  (0) x  (1) xm {*cmpiusf_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 331:  (0) x  (1) xm {*cmpiusf_sse}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 335:  (0) r  (1) m {fix_truncsfsi_sse}
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=8,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 336:  (0) rm  (1) 0 {ashrsi3_cvt}
      Creating newreg=542 from oldreg=392, assigning class GENERAL_REGS to r542
  336: {r542:SI=r542:SI>>0x1f;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  780: r542:SI=r390:SI
    Inserting insn reload after:
  781: r392:SI=r542:SI

          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 337
	 Choosing alt 0 in insn 337:  (0) =r  (1) %0  (2) rme {*xorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 338:  (0) =rm  (1) 0  (2) re {*subsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 339:  (0) =x  (1) r {*floatsidf2_sse_interunit}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 341:  (0) x  (1) xm {*cmpiudf_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 344:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 345:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 346:  (0) x  (1) xm {*cmpiusf_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 349:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 350:  (0) =x  (1) 0  (2) xm {*fop_sf_1_sse}
      Creating newreg=543 from oldreg=398, assigning class SSE_REGS to r543
  350: r543:SF=r543:SF/r175:SF
      REG_DEAD r399:SF
      REG_DEAD r175:SF
    Inserting insn reload before:
  782: r543:SF=r399:SF
    Inserting insn reload after:
  783: r398:SF=r543:SF

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 351:  (0) x  (1) xm {*cmpiusf_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 356:  (0) x  (1) m {*movsf_internal}
Changing pseudo 503 in operand 2 of insn 358 on equiv [`*.LC2']
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 358:  (0) =x  (1) 0  (2) xm {*absnegsf2_sse}
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 359:  (0) =x  (1) xm {*extendsfdf2_sse}
      Creating newreg=544 from oldreg=179, assigning class SSE_REGS to r544
  359: r544:DF=float_extend(r400:SF)
      REG_DEAD r400:SF
    Inserting insn reload after:
  784: r179:DF=r544:DF

          alt=0,overall=1221,losers=3,rld_nregs=2
          alt=1,overall=614,losers=2,rld_nregs=1
          alt=3,overall=1225,losers=3 -- reject
          alt=4,overall=619,losers=2 -- reject
          alt=8,overall=8,losers=1,rld_nregs=1
          alt=9,overall=15,losers=2 -- reject
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 784:  (0) m  (1) x {*movdf_internal_rex64}
          alt=0,overall=616,losers=2,rld_nregs=1
          alt=1,overall=621,losers=2 -- reject
          alt=3,overall=621,losers=2 -- reject
          alt=4,overall=626,losers=2 -- reject
          alt=5,overall=621,losers=2 -- reject
          alt=6,overall=621,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 363:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 365:  (1) rzw {*call_value}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 369:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 370:  (0) =x  (1) 0  (2) xm {*fop_df_1_sse}
      Creating newreg=545 from oldreg=406, assigning class SSE_REGS to r545
  370: r545:DF=r545:DF/r404:DF
      REG_DEAD r407:DF
      REG_DEAD r404:DF
    Inserting insn reload before:
  785: r545:DF=r407:DF
    Inserting insn reload after:
  786: r406:DF=r545:DF

          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
	 Choosing alt 0 in insn 372:  (0) =x  (1) %0  (2) xm {*fop_df_comm_sse}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 373:  (0) x  (1) xm {*cmpiudf_sse}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 382:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=608,losers=1,rld_nregs=1
          alt=1,overall=611,losers=1 -- reject
          alt=3,overall=613,losers=1 -- reject
          alt=4,overall=616,losers=1 -- reject
          alt=6,overall=16,losers=2,rld_nregs=2
          alt=7,overall=7,losers=1,rld_nregs=1
          alt=8,overall=10,losers=1 -- reject
          alt=9,overall=1208,losers=1 -- reject
          alt=10,overall=1211,losers=1 -- reject
          alt=11,overall=1208,losers=1 -- reject
          alt=13,overall=613,losers=1 -- reject
          alt=15,overall=1207,losers=1 -- reject
	 Choosing alt 7 in insn 385:  (0) x  (1) m {*movsf_internal}
      Creating newreg=546 from oldreg=197, assigning class SSE_REGS to r546
  385: r546:SF=[r152:DI+0x4]
    Inserting insn reload after:
  787: r197:SF=r546:SF

          alt=0,overall=1221,losers=3,rld_nregs=2
          alt=1,overall=614,losers=2,rld_nregs=1
          alt=3,overall=1225,losers=3 -- reject
          alt=4,overall=619,losers=2 -- reject
          alt=6,overall=8,losers=1,rld_nregs=1
          alt=7,overall=15,losers=2 -- reject
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 787:  (0) m  (1) x {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 386:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 387:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=608,losers=1,rld_nregs=1
          alt=1,overall=611,losers=1 -- reject
          alt=3,overall=613,losers=1 -- reject
          alt=4,overall=616,losers=1 -- reject
          alt=6,overall=16,losers=2,rld_nregs=2
          alt=7,overall=7,losers=1,rld_nregs=1
          alt=8,overall=10,losers=1 -- reject
          alt=9,overall=1208,losers=1 -- reject
          alt=10,overall=1211,losers=1 -- reject
          alt=11,overall=1208,losers=1 -- reject
          alt=13,overall=613,losers=1 -- reject
          alt=15,overall=1207,losers=1 -- reject
	 Choosing alt 7 in insn 388:  (0) x  (1) m {*movsf_internal}
      Creating newreg=547 from oldreg=200, assigning class SSE_REGS to r547
  388: r547:SF=[r199:DI*0x4+r410:DI]
      REG_DEAD r410:DI
    Inserting insn reload after:
  788: r200:SF=r547:SF

          alt=0,overall=1221,losers=3,rld_nregs=2
          alt=1,overall=614,losers=2,rld_nregs=1
          alt=3,overall=1225,losers=3 -- reject
          alt=4,overall=619,losers=2 -- reject
          alt=6,overall=8,losers=1,rld_nregs=1
          alt=7,overall=15,losers=2 -- reject
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 788:  (0) m  (1) x {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 391:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 392:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 393:  (0) =x  (1) 0  (2) xm {*fop_sf_1_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 394:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 396:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 400:  (0) x  (1) xm {*movv2df_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 401:  (0) =x  (1) 0  (2) xm {*absnegdf2_sse}
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 402:  (0) =x  (1) xm {*truncdfsf_fast_sse}
      Creating newreg=548 from oldreg=209, assigning class SSE_REGS to r548
  402: r548:SF=float_trunc(r415:DF)
      REG_DEAD r415:DF
    Inserting insn reload after:
  789: r209:SF=r548:SF

          alt=0,overall=1221,losers=3,rld_nregs=2
          alt=1,overall=614,losers=2,rld_nregs=1
          alt=3,overall=1225,losers=3 -- reject
          alt=4,overall=619,losers=2 -- reject
          alt=6,overall=8,losers=1,rld_nregs=1
          alt=7,overall=15,losers=2 -- reject
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 789:  (0) m  (1) x {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 404:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 405:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 406:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=7,losers=1,rld_nregs=2
	 Choosing alt 0 in insn 407:  (0) =x  (1) 0  (2) xm {*fop_sf_1_sse}
      Creating newreg=549 from oldreg=214, assigning class SSE_REGS to r549
  407: r549:SF=r549:SF-[r152:DI+0x8]
      REG_DEAD r419:SF
      REG_DEAD r152:DI
    Inserting insn reload before:
  790: r549:SF=r419:SF
    Inserting insn reload after:
  791: r214:SF=r549:SF

          alt=0,overall=1221,losers=3,rld_nregs=2
          alt=1,overall=614,losers=2,rld_nregs=1
          alt=3,overall=1225,losers=3 -- reject
          alt=4,overall=619,losers=2 -- reject
          alt=6,overall=8,losers=1,rld_nregs=1
          alt=7,overall=15,losers=2 -- reject
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 791:  (0) m  (1) x {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 411:  (0) x  (1) xm {*movv4sf_internal}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=1213,losers=2 -- reject
	 Choosing alt 1 in insn 412:  (0) x  (1) x  (2) 0 {*absnegsf2_sse}
      Creating newreg=550 from oldreg=209, assigning class SSE_REGS to r550
  412: {r420:SF=abs(r550:SF);use r421:V4SF;clobber flags:CC;}
      REG_DEAD r421:V4SF
      REG_UNUSED flags:CC
    Inserting insn reload before:
  792: r550:SF=r209:SF

          alt=0,overall=615,losers=2,rld_nregs=1
          alt=1,overall=616,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=621,losers=2 -- reject
          alt=6,overall=7,losers=1,rld_nregs=1
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 792:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 413:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 414:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 415:  (0) x  (1) xm {*cmpiudf_sse}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 419:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 422:  (0) =x  (1) 0  (2) xm {*fop_sf_1_sse}
      Creating newreg=551 from oldreg=424, assigning class SSE_REGS to r551
  422: r551:SF=r551:SF/r200:SF
      REG_DEAD r200:SF
      REG_DEAD r197:SF
    Inserting insn reload before:
  793: r551:SF=r197:SF
    Inserting insn reload after:
  794: r424:SF=r551:SF

          alt=0,overall=615,losers=2,rld_nregs=1
          alt=1,overall=616,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=621,losers=2 -- reject
          alt=6,overall=7,losers=1,rld_nregs=1
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 793:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=7,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 423:  (0) =x  (1) xm {*extendsfdf2_sse}
      Creating newreg=552 from oldreg=202, assigning class SSE_REGS to r552
  423: r552:DF=float_extend(r424:SF)
      REG_DEAD r424:SF
    Inserting insn reload after:
  795: r202:DF=r552:DF

          alt=0,overall=1221,losers=3,rld_nregs=2
          alt=1,overall=614,losers=2,rld_nregs=1
          alt=3,overall=1225,losers=3 -- reject
          alt=4,overall=619,losers=2 -- reject
          alt=8,overall=8,losers=1,rld_nregs=1
          alt=9,overall=15,losers=2 -- reject
          alt=10,overall=2,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 795:  (0) m  (1) x {*movdf_internal_rex64}
          alt=0,overall=7,losers=1,rld_nregs=1
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 735:  (0) m  (1) re {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 737:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 426:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 427:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 428:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=12,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 429:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 430:  (0) r  (1) l  (2) M {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 431:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 432:  (0) x  (1) xm {*cmpiusf_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 435:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 438:  (0) rm  (1) re {*cmpsi_1}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 740:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 447:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 448:  (0) x  (1) xm {*cmpiusf_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 455:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 456:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=12,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 461:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 462:  (0) r  (1) l  (2) M {*ashldi3_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 463:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 464:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 465:  (0) x  (1) xm {*cmpiudf_sse}
      Creating newreg=553 from oldreg=202, assigning class SSE_REGS to r553
  465: flags:CCFPU=cmp(r553:DF,r430:DF)
      REG_DEAD r430:DF
    Inserting insn reload before:
  796: r553:DF=r202:DF

          alt=0,overall=615,losers=2,rld_nregs=1
          alt=1,overall=616,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=621,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=7,losers=1,rld_nregs=1
          alt=9,overall=2,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 796:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 0 in insn 468:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 471:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 472:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 481:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 482:  (0) x  (1) xm {*cmpiudf_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 488:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 489:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 490:  (0) x  (1) xm {*cmpiudf_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 493:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 494:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 495:  (0) x  (1) xm {*cmpiudf_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 498:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 499:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 500:  (0) x  (1) xm {*cmpiudf_sse}
          alt=2,overall=8,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
	 Choosing alt 2 in insn 506:  (0) r  (1) 0  (2) mr {*mulsi3_1}
      Creating newreg=554 from oldreg=438, assigning class GENERAL_REGS to r554
  506: {r554:SI=r554:SI*[r526:DI+0x10c];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  797: r554:SI=r524:SI
    Inserting insn reload after:
  798: r438:SI=r554:SI

          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 507:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 508:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=6,losers=1 -- reject
          alt=3,overall=6,losers=1 -- reject
	 Choosing alt 0 in insn 510:  (0) =r  (1) %0  (2) rme {*adddi_1}
      Creating newreg=555 from oldreg=68, assigning class GENERAL_REGS to address r555
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 511:  (0) r  (1) rem {*movdi_internal_rex64}
  511: r274:DI=[r442:DI*0x8+r555:DI]
      REG_DEAD r442:DI
    Inserting insn reload before:
  799: r555:DI=r68:DI

          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 799:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 513:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 515:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 517:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 520:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 526:  (0) ?mq {*cmpqi_ccno_1}
          alt=2,overall=8,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
	 Choosing alt 2 in insn 529:  (0) r  (1) 0  (2) mr {*mulsi3_1}
      Creating newreg=556 from oldreg=447, assigning class GENERAL_REGS to r556
  529: {r556:SI=r556:SI*[r526:DI+0x10c];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  800: r556:SI=r524:SI
    Inserting insn reload after:
  801: r447:SI=r556:SI

          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 530:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 531:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=6,losers=1 -- reject
          alt=3,overall=6,losers=1 -- reject
	 Choosing alt 0 in insn 533:  (0) =r  (1) %0  (2) rme {*adddi_1}
      Creating newreg=557 from oldreg=64, assigning class GENERAL_REGS to address r557
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 534:  (0) r  (1) rem {*movdi_internal_rex64}
  534: r261:DI=[r451:DI*0x8+r557:DI]
      REG_DEAD r451:DI
    Inserting insn reload before:
  802: r557:DI=r64:DI

          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 802:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 536:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 538:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 540:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 543:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 549:  (0) ?mq {*cmpqi_ccno_1}
          alt=2,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
  Commutative operand exchange in insn 552
	 Choosing alt 2 in insn 552:  (0) r  (1) 0  (2) mr {*mulsi3_1}
      Creating newreg=558 from oldreg=456, assigning class GENERAL_REGS to r558
  552: {r558:SI=r558:SI*r524:SI;clobber flags:CC;}
      REG_DEAD r522:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  803: r558:SI=r522:SI
    Inserting insn reload after:
  804: r456:SI=r558:SI

          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 553:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 554:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
          alt=0,overall=8,losers=1 -- reject
          alt=1,overall=8,losers=1 -- reject
          alt=2,overall=6,losers=1 -- reject
          alt=3,overall=6,losers=1 -- reject
	 Choosing alt 0 in insn 556:  (0) =r  (1) %0  (2) rme {*adddi_1}
      Creating newreg=559 from oldreg=66, assigning class GENERAL_REGS to address r559
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 557:  (0) r  (1) rem {*movdi_internal_rex64}
  557: r247:DI=[r460:DI*0x8+r559:DI]
      REG_DEAD r460:DI
    Inserting insn reload before:
  805: r559:DI=r66:DI

          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 805:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 559:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 561:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 563:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 566:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 574:  (0) x  (1) xm {*movv4sf_internal}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=1213,losers=2 -- reject
	 Choosing alt 1 in insn 575:  (0) x  (1) x  (2) 0 {*absnegsf2_sse}
      Creating newreg=560 from oldreg=214, assigning class SSE_REGS to r560
  575: {r465:SF=abs(r560:SF);use r466:V4SF;clobber flags:CC;}
      REG_DEAD r466:V4SF
      REG_UNUSED flags:CC
    Inserting insn reload before:
  806: r560:SF=r214:SF

          alt=0,overall=615,losers=2,rld_nregs=1
          alt=1,overall=616,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=621,losers=2 -- reject
          alt=6,overall=7,losers=1,rld_nregs=1
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 806:  (0) x  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 576:  (0) =x  (1) xm {*extendsfdf2_sse}
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=5,overall=619,losers=2 -- reject
          alt=6,overall=619,losers=2 -- reject
          alt=8,overall=9,losers=1,rld_nregs=1
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 577:  (0) x  (1) m {*movdf_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 578:  (0) x  (1) xm {*cmpiudf_sse}
      Creating newreg=561 from oldreg=115, assigning class GENERAL_REGS to address r561
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 586:  (0) x  (1) m {*movsf_internal}
  586: r186:SF=[r561:DI]
      REG_EQUIV [r115:DI]
    Inserting insn reload before:
  807: r561:DI=r115:DI

          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 807:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 589:  (0) x  (1) xm {*cmpiusf_sse}
      Creating newreg=562 from oldreg=115, assigning class GENERAL_REGS to address r562
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 594:  (0) x  (1) m {*movsf_internal}
  594: r470:SF=[r562:DI+0x8]
      REG_EQUIV [r115:DI+0x8]
    Inserting insn reload before:
  808: r562:DI=r115:DI

          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 808:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 595:  (0) =x  (1) 0  (2) xm {*fop_sf_1_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 596:  (0) x  (1) xm {*movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 597:  (0) =x  (1) 0  (2) xm {*absnegsf2_sse}
      Creating newreg=563 from oldreg=115, assigning class GENERAL_REGS to address r563
          alt=0,overall=614,losers=2,rld_nregs=1
          alt=1,overall=619,losers=2 -- reject
          alt=3,overall=619,losers=2 -- reject
          alt=4,overall=624,losers=2 -- reject
          alt=6,overall=9,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 601:  (0) x  (1) m {*movsf_internal}
  601: r473:SF=[r563:DI+0xc]
      REG_EQUIV [r115:DI+0xc]
    Inserting insn reload before:
  809: r563:DI=r115:DI

          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 809:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 602:  (0) =x  (1) 0  (2) xm {*fop_sf_1_sse}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 604:  (0) x  (1) x  (2) 0 {*absnegsf2_sse}
          alt=0,overall=8,losers=1,rld_nregs=1
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 606:  (0) =x  (1) %0  (2) xm {*fop_sf_comm_sse}
      Creating newreg=564 from oldreg=476, assigning class SSE_REGS to r564
  606: r564:SF=r564:SF*r290:SF
    Inserting insn reload before:
  810: r564:SF=r290:SF
    Inserting insn reload after:
  811: r476:SF=r564:SF

          alt=0,overall=8,losers=1,rld_nregs=1
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 607:  (0) =x  (1) %0  (2) xm {*fop_sf_comm_sse}
      Creating newreg=565 from oldreg=477, assigning class SSE_REGS to r565
  607: r565:SF=r565:SF*r291:SF
    Inserting insn reload before:
  812: r565:SF=r291:SF
    Inserting insn reload after:
  813: r477:SF=r565:SF

          alt=0,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 608
	 Choosing alt 0 in insn 608:  (0) =x  (1) %0  (2) xm {*fop_sf_comm_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 609:  (0) =x  (1) xm {*sqrtsf2_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 610:  (0) x  (1) xm {*cmpiusf_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 615:  (0) =x  (1) %0  (2) xm {*fop_sf_comm_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 616:  (0) =x  (1) %0  (2) xm {*fop_sf_comm_sse}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 617
	 Choosing alt 0 in insn 617:  (0) =x  (1) %0  (2) xm {*fop_sf_comm_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 619:  (1) rzw {*call_value}
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=0,overall=9,losers=1 -- reject
          alt=1,overall=17,losers=2 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 1 in insn 627:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=6,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 631:  (0) ?mr {*cmpsi_ccno_1}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 635:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=2,overall=16,losers=2,rld_nregs=2
          alt=2,overall=15,losers=2,rld_nregs=2
  Commutative operand exchange in insn 555
	 Choosing alt 2 in insn 555:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=566 from oldreg=498, assigning class GENERAL_REGS to r566
  555: {r566:DI=r566:DI*r509:DI;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  814: r566:DI=r244:DI
    Inserting insn reload after:
  815: r498:DI=r566:DI

          alt=1,overall=8,losers=1,rld_nregs=1
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 815:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 814:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=2,overall=16,losers=2,rld_nregs=2
          alt=2,overall=15,losers=2,rld_nregs=2
  Commutative operand exchange in insn 532
	 Choosing alt 2 in insn 532:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=567 from oldreg=499, assigning class GENERAL_REGS to r567
  532: {r567:DI=r567:DI*r509:DI;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  816: r567:DI=r257:DI
    Inserting insn reload after:
  817: r499:DI=r567:DI

          alt=1,overall=8,losers=1,rld_nregs=1
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 817:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 816:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=2,overall=16,losers=2,rld_nregs=2
          alt=2,overall=15,losers=2,rld_nregs=2
  Commutative operand exchange in insn 509
	 Choosing alt 2 in insn 509:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=568 from oldreg=500, assigning class GENERAL_REGS to r568
  509: {r568:DI=r568:DI*r509:DI;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  818: r568:DI=r270:DI
    Inserting insn reload after:
  819: r500:DI=r568:DI

          alt=1,overall=8,losers=1,rld_nregs=1
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 819:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 818:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 754:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 755:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=11,losers=1 -- reject
          alt=3,overall=0,losers=0,rld_nregs=0
          alt=0,overall=11,losers=1 -- reject
          alt=1,overall=11,losers=1 -- reject
          alt=2,overall=9,losers=1 -- reject
          alt=3,overall=9,losers=1 -- reject
	 Choosing alt 3 in insn 648:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) Z {*movdi_internal_rex64}

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5
EBB 6
EBB 7
EBB 8
EBB 9
EBB 10 11 12
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=569 from oldreg=350, assigning class GENERAL_REGS to inheritance r569
    Original reg change 350->569 (bb10):
  775: r569:DI=r539:DI
    Add original<-inheritance after:
  820: r350:DI=r569:DI

    Inheritance reuse change 350->569 (bb10):
  179: debug event_data_out_private.66 => r569:DI
    Inheritance reuse change 350->569 (bb10):
  247: si:DI=r569:DI
      REG_DEAD r569:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=570 from oldreg=336, assigning class GENERAL_REGS to inheritance r570
    Original reg change 336->570 (bb10):
  774: r538:DI=r570:DI
    Add inheritance<-original before:
  821: r570:DI=r336:DI

    Inheritance reuse change 336->570 (bb10):
  156: debug cluster_data_out_private.65 => r570:DI
    Inheritance reuse change 336->570 (bb10):
  225: si:DI=r570:DI
      REG_DEAD r570:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=571 from oldreg=336, assigning class GENERAL_REGS to inheritance r571
    Original reg change 336->571 (bb10):
  154: r571:DI=sp:DI
    Add original<-inheritance after:
  822: r336:DI=r571:DI

    Inheritance reuse change 336->571 (bb10):
  821: r570:DI=r571:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=572 from oldreg=302, assigning class GENERAL_REGS to inheritance r572
    Original reg change 302->572 (bb10):
  773: r572:DI=r537:DI
    Add original<-inheritance after:
  823: r302:DI=r572:DI

    Inheritance reuse change 302->572 (bb10):
  105: {r307:DI=r304:DI*r572:DI;clobber flags:CC;}
      REG_DEAD r304:DI
      REG_UNUSED flags:CC
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   820: r350:DI=r569:DI
deleting insn with uid = 820.
	    Removing dead insn:
   822: r336:DI=r571:DI
deleting insn with uid = 822.
EBB 13
EBB 14
EBB 15
EBB 16
EBB 17
EBB 18
EBB 19
EBB 20
EBB 21
EBB 22
EBB 23
EBB 24
EBB 25
EBB 26
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=573 from oldreg=179, assigning class SSE_REGS to inheritance r573
    Original reg change 179->573 (bb26):
  784: r573:DF=r544:DF
    Add original<-inheritance after:
  824: r179:DF=r573:DF

    Inheritance reuse change 179->573 (bb26):
  373: flags:CCFPU=cmp(r408:DF,r573:DF)
      REG_DEAD r408:DF
      REG_DEAD r573:DF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   824: r179:DF=r573:DF
deleting insn with uid = 824.
EBB 27
EBB 28
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=574 from oldreg=209, assigning class SSE_REGS to inheritance r574
    Original reg change 209->574 (bb28):
  789: r574:SF=r548:SF
    Add original<-inheritance after:
  825: r209:SF=r574:SF

    Inheritance reuse change 209->574 (bb28):
  403: debug DeltaPhi => r574:SF
    Inheritance reuse change 209->574 (bb28):
  409: debug d => r574:SF
    Inheritance reuse change 209->574 (bb28):
  410: debug __x => r574:SF
    Inheritance reuse change 209->574 (bb28):
  792: r550:SF=r574:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 29 30
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=575 from oldreg=281, assigning class GENERAL_REGS to inheritance r575
    Original reg change 281->575 (bb30):
    8: r575:SI=0
      REG_EQUAL 0
    Add original<-inheritance after:
  826: r281:SI=r575:SI

    Inheritance reuse change 281->575 (bb30):
  737: r518:SI=r575:SI
      REG_DEAD r575:SI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   826: r281:SI=r575:SI
deleting insn with uid = 826.
EBB 31
EBB 32
EBB 33
EBB 34
EBB 35 36
EBB 37
EBB 38
EBB 39
EBB 40
EBB 41
EBB 42
EBB 43
EBB 44
EBB 45
EBB 46
EBB 47
EBB 48
EBB 49
EBB 50
EBB 51 52
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=576 from oldreg=115, assigning class GENERAL_REGS to inheritance r576
    Original reg change 115->576 (bb52):
  808: r562:DI=r576:DI
    Add inheritance<-original before:
  827: r576:DI=r115:DI

    Inheritance reuse change 115->576 (bb52):
  599: debug d => [r576:DI+0xc]-[r152:DI+0x18]
    Inheritance reuse change 115->576 (bb52):
  600: debug __x => [r576:DI+0xc]-[r152:DI+0x18]
    Inheritance reuse change 115->576 (bb52):
  809: r563:DI=r576:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=577 from oldreg=115, assigning class GENERAL_REGS to inheritance r577
    Original reg change 115->577 (bb51):
  807: r561:DI=r577:DI
    Add inheritance<-original before:
  828: r577:DI=r115:DI

    Inheritance reuse change 115->577 (bb52):
  592: debug d => [r577:DI+0x8]-[r152:DI+0x14]
    Inheritance reuse change 115->577 (bb52):
  593: debug __x => [r577:DI+0x8]-[r152:DI+0x14]
    Inheritance reuse change 115->577 (bb52):
  827: r576:DI=r577:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 53
EBB 54
EBB 55 56
EBB 57
EBB 58

********** Pseudo live ranges #1: **********

  BB 58
  BB 8
   Insn 695: point = 0
  BB 7
   Insn 66: point = 0
   Insn 65: point = 0
   Insn 63: point = 0
  BB 16
   Insn 702: point = 1
   Insn 291: point = 1
   Insn 290: point = 2
   Insn 289: point = 2
  BB 19
   Insn 705: point = 3
   Insn 734: point = 3
   Insn 733: point = 5
  BB 18
   Insn 311: point = 8
   Insn 310: point = 8
   Insn 309: point = 9
   Insn 305: point = 10
  BB 33
   Insn 708: point = 11
   Insn 743: point = 11
   Insn 742: point = 13
   Insn 741: point = 15
   Insn 740: point = 17
  BB 32
   Insn 439: point = 20
   Insn 438: point = 20
   Insn 435: point = 20
  BB 39
   Insn 711: point = 21
   Insn 753: point = 21
   Insn 752: point = 23
   Insn 751: point = 25
   Insn 750: point = 27
  BB 38
   Insn 473: point = 30
   Insn 472: point = 30
   Insn 471: point = 30
   Insn 468: point = 31
  BB 44
   Insn 713: point = 32
   Insn 520: point = 32
   Insn 519: point = 33
   Insn 518: point = 34
   Insn 728: point = 35
   Insn 517: point = 37
   Insn 515: point = 37
   Insn 513: point = 38
   Insn 511: point = 39
   Insn 799: point = 41
   Insn 510: point = 42
   Insn 508: point = 44
   Insn 507: point = 46
   Insn 798: point = 48
	Hard reg 0 is preferable by r554 with profit 3
   Insn 506: point = 50
   Insn 797: point = 50
  BB 43
   Insn 501: point = 52
   Insn 500: point = 52
   Insn 499: point = 53
   Insn 498: point = 54
  BB 46
   Insn 715: point = 56
   Insn 543: point = 56
   Insn 542: point = 57
   Insn 541: point = 58
   Insn 729: point = 59
   Insn 540: point = 61
   Insn 538: point = 61
   Insn 536: point = 62
   Insn 534: point = 63
   Insn 802: point = 65
   Insn 533: point = 66
   Insn 531: point = 68
   Insn 530: point = 70
   Insn 801: point = 72
	Hard reg 0 is preferable by r556 with profit 1
   Insn 529: point = 74
   Insn 800: point = 74
  BB 45
   Insn 527: point = 76
   Insn 526: point = 76
  BB 42
   Insn 496: point = 77
   Insn 495: point = 77
   Insn 494: point = 78
   Insn 493: point = 79
  BB 48
   Insn 717: point = 81
   Insn 566: point = 81
   Insn 565: point = 82
   Insn 564: point = 83
   Insn 730: point = 84
   Insn 563: point = 86
   Insn 561: point = 86
   Insn 559: point = 87
   Insn 557: point = 88
   Insn 805: point = 90
   Insn 556: point = 91
   Insn 554: point = 93
   Insn 553: point = 95
   Insn 804: point = 97
	Hard reg 0 is preferable by r558 with profit 1
   Insn 552: point = 99
   Insn 803: point = 99
	Hard reg 0 is preferable by r558 with profit 1
	Hard reg 2 is preferable by r558 with profit 1
  BB 47
   Insn 550: point = 102
   Insn 549: point = 102
  BB 41
   Insn 491: point = 103
   Insn 490: point = 103
   Insn 489: point = 104
   Insn 488: point = 105
  BB 40
   Insn 483: point = 107
   Insn 482: point = 107
   Insn 481: point = 108
  BB 37
   Insn 466: point = 111
   Insn 465: point = 111
   Insn 796: point = 112
   Insn 464: point = 113
   Insn 463: point = 115
   Insn 462: point = 116
   Insn 461: point = 117
  BB 36
   Insn 749: point = 119
   Insn 748: point = 121
   Insn 747: point = 123
   Insn 746: point = 125
   Insn 745: point = 127
   Insn 744: point = 129
   Insn 9: point = 131
  BB 35
   Insn 457: point = 133
   Insn 456: point = 133
   Insn 455: point = 133
  BB 34
   Insn 449: point = 135
   Insn 448: point = 135
   Insn 447: point = 136
  BB 31
   Insn 433: point = 139
   Insn 432: point = 139
   Insn 431: point = 140
   Insn 430: point = 141
   Insn 429: point = 142
   Insn 428: point = 143
   Insn 427: point = 145
   Insn 426: point = 146
  BB 30
   Insn 739: point = 148
   Insn 738: point = 150
   Insn 737: point = 152
	Hard reg 42 is preferable by r575 with profit 1
   Insn 736: point = 154
   Insn 735: point = 156
   Insn 8: point = 158
   Insn 795: point = 159
   Insn 423: point = 161
   Insn 794: point = 163
	Hard reg 21 is preferable by r551 with profit 1
   Insn 422: point = 165
   Insn 793: point = 166
  BB 29
   Insn 420: point = 169
   Insn 419: point = 169
  BB 50
   Insn 720: point = 170
  BB 49
   Insn 579: point = 171
   Insn 578: point = 171
   Insn 577: point = 172
   Insn 576: point = 173
   Insn 575: point = 175
   Insn 806: point = 177
   Insn 574: point = 178
  BB 28
   Insn 416: point = 180
   Insn 415: point = 180
   Insn 414: point = 181
   Insn 413: point = 182
   Insn 412: point = 184
   Insn 792: point = 186
	   Creating copy r550<-r574@3
   Insn 411: point = 188
   Insn 791: point = 189
   Insn 407: point = 191
   Insn 790: point = 192
	Hard reg 21 is preferable by r549 with profit 3
   Insn 406: point = 194
   Insn 405: point = 196
   Insn 404: point = 197
   Insn 825: point = 198
   Insn 789: point = 199
	   Creating copy r548->r574@3
   Insn 402: point = 201
   Insn 401: point = 203
   Insn 400: point = 205
   Insn 397: point = 206
   Insn 396: point = 207
   Insn 395: point = 207
   Insn 394: point = 208
   Insn 393: point = 210
   Insn 392: point = 212
   Insn 391: point = 214
   Insn 788: point = 215
   Insn 388: point = 217
   Insn 387: point = 219
   Insn 386: point = 220
   Insn 787: point = 221
   Insn 385: point = 223
  BB 53
   Insn 722: point = 225
   Insn 619: point = 225
   Insn 618: point = 225
   Insn 617: point = 226
   Insn 616: point = 228
   Insn 615: point = 230
  BB 52
   Insn 611: point = 233
   Insn 610: point = 233
   Insn 609: point = 234
   Insn 608: point = 236
   Insn 813: point = 238
	Hard reg 23 is preferable by r565 with profit 1
   Insn 607: point = 240
   Insn 812: point = 240
   Insn 811: point = 241
	Hard reg 24 is preferable by r564 with profit 1
   Insn 606: point = 243
   Insn 810: point = 243
   Insn 604: point = 244
   Insn 602: point = 246
   Insn 601: point = 248
   Insn 809: point = 250
	   Creating copy r563<-r576@1
   Insn 597: point = 252
   Insn 596: point = 254
   Insn 595: point = 255
   Insn 594: point = 257
   Insn 808: point = 259
	   Creating copy r562<-r576@1
   Insn 827: point = 260
	   Creating copy r576<-r577@1
  BB 51
   Insn 590: point = 263
   Insn 589: point = 263
   Insn 586: point = 264
   Insn 807: point = 266
	   Creating copy r561<-r577@1
   Insn 828: point = 267
  BB 27
   Insn 383: point = 269
   Insn 382: point = 269
  BB 26
   Insn 374: point = 270
   Insn 373: point = 270
   Insn 372: point = 271
   Insn 786: point = 273
	Hard reg 21 is preferable by r545 with profit 7
   Insn 370: point = 275
   Insn 785: point = 276
	Hard reg 21 is preferable by r545 with profit 7
	Hard reg 22 is preferable by r545 with profit 7
   Insn 369: point = 278
   Insn 366: point = 279
   Insn 365: point = 280
   Insn 364: point = 280
   Insn 363: point = 281
   Insn 784: point = 281
	   Creating copy r544->r573@7
   Insn 359: point = 283
   Insn 358: point = 285
   Insn 356: point = 287
  BB 25
   Insn 352: point = 289
   Insn 351: point = 289
   Insn 783: point = 290
	Hard reg 22 is preferable by r543 with profit 25
   Insn 350: point = 292
   Insn 782: point = 293
	Hard reg 22 is preferable by r543 with profit 25
	Hard reg 23 is preferable by r543 with profit 25
   Insn 349: point = 295
  BB 24
   Insn 347: point = 297
   Insn 346: point = 297
   Insn 345: point = 298
   Insn 344: point = 299
  BB 23
   Insn 342: point = 301
   Insn 341: point = 301
   Insn 339: point = 302
   Insn 338: point = 304
   Insn 337: point = 306
   Insn 781: point = 308
	Hard reg 0 is preferable by r542 with profit 102
   Insn 336: point = 310
   Insn 780: point = 310
   Insn 335: point = 311
  BB 22
   Insn 332: point = 313
   Insn 331: point = 313
  BB 21
   Insn 329: point = 315
   Insn 328: point = 315
   Insn 327: point = 316
  BB 20
   Insn 325: point = 318
   Insn 324: point = 318
   Insn 322: point = 319
   Insn 779: point = 321
	Hard reg 23 is preferable by r541 with profit 819
   Insn 321: point = 323
   Insn 778: point = 323
   Insn 318: point = 324
  BB 17
   Insn 303: point = 326
   Insn 302: point = 326
   Insn 300: point = 326
   Insn 299: point = 327
   Insn 777: point = 329
	Hard reg 0 is preferable by r540 with profit 910
   Insn 297: point = 331
   Insn 776: point = 331
  BB 56
   Insn 724: point = 333
   Insn 758: point = 333
   Insn 757: point = 335
   Insn 756: point = 337
   Insn 755: point = 339
   Insn 754: point = 341
   Insn 819: point = 343
   Insn 509: point = 345
   Insn 818: point = 345
   Insn 817: point = 346
   Insn 532: point = 348
   Insn 816: point = 348
   Insn 815: point = 349
   Insn 555: point = 351
   Insn 814: point = 351
   Insn 7: point = 352
   Insn 635: point = 353
  BB 55
   Insn 632: point = 356
   Insn 631: point = 356
  BB 15
   Insn 700: point = 357
  BB 54
   Insn 627: point = 358
  BB 14
   Insn 284: point = 359
   Insn 283: point = 359
  BB 9
   Insn 697: point = 360
   Insn 75: point = 360
   Insn 74: point = 361
   Insn 73: point = 361
  BB 13
   Insn 281: point = 362
   Insn 280: point = 362
   Insn 279: point = 363
   Insn 277: point = 365
   Insn 276: point = 367
  BB 12
   Insn 273: point = 369
   Insn 272: point = 369
   Insn 270: point = 370
   Insn 268: point = 372
   Insn 267: point = 374
   Insn 266: point = 376
   Insn 265: point = 378
  BB 11
   Insn 262: point = 380
   Insn 261: point = 380
   Insn 259: point = 380
  BB 10
   Insn 257: point = 383
   Insn 256: point = 383
   Insn 254: point = 383
   Insn 252: point = 384
   Insn 251: point = 384
   Insn 250: point = 385
   Insn 249: point = 386
   Insn 248: point = 386
   Insn 247: point = 387
	Hard reg 4 is preferable by r569 with profit 444
   Insn 246: point = 388
   Insn 245: point = 388
   Insn 244: point = 389
   Insn 243: point = 389
   Insn 242: point = 389
   Insn 241: point = 390
   Insn 239: point = 391
   Insn 238: point = 391
   Insn 237: point = 392
   Insn 236: point = 392
   Insn 235: point = 393
   Insn 234: point = 394
   Insn 233: point = 394
   Insn 232: point = 394
   Insn 231: point = 395
   Insn 230: point = 396
   Insn 229: point = 397
   Insn 228: point = 398
   Insn 227: point = 399
   Insn 226: point = 399
   Insn 225: point = 400
	Hard reg 4 is preferable by r570 with profit 444
   Insn 224: point = 401
   Insn 223: point = 401
   Insn 222: point = 402
   Insn 221: point = 402
   Insn 220: point = 402
   Insn 219: point = 403
   Insn 217: point = 404
   Insn 216: point = 404
   Insn 215: point = 405
   Insn 214: point = 405
   Insn 213: point = 406
   Insn 212: point = 407
   Insn 211: point = 407
   Insn 210: point = 407
   Insn 209: point = 408
   Insn 208: point = 409
   Insn 207: point = 410
   Insn 206: point = 411
   Insn 205: point = 412
   Insn 204: point = 412
   Insn 203: point = 413
   Insn 202: point = 414
   Insn 201: point = 414
   Insn 200: point = 415
   Insn 199: point = 415
   Insn 198: point = 415
   Insn 197: point = 416
   Insn 195: point = 417
   Insn 194: point = 417
   Insn 193: point = 418
   Insn 192: point = 418
   Insn 191: point = 419
   Insn 190: point = 420
   Insn 189: point = 420
   Insn 188: point = 420
   Insn 187: point = 421
   Insn 186: point = 422
   Insn 185: point = 423
   Insn 184: point = 424
   Insn 182: point = 425
   Insn 181: point = 425
   Insn 180: point = 426
   Insn 775: point = 427
	   Creating copy r539->r569@444
   Insn 177: point = 429
   Insn 176: point = 430
   Insn 175: point = 432
   Insn 173: point = 433
   Insn 172: point = 434
   Insn 171: point = 436
   Insn 170: point = 438
   Insn 164: point = 440
   Insn 155: point = 441
   Insn 774: point = 443
	   Creating copy r538<-r570@444
   Insn 821: point = 444
	   Creating copy r570<-r571@444
   Insn 154: point = 446
	Hard reg 7 is preferable by r571 with profit 444
   Insn 150: point = 447
   Insn 149: point = 448
   Insn 147: point = 450
   Insn 143: point = 452
   Insn 140: point = 454
   Insn 124: point = 455
   Insn 117: point = 456
   Insn 116: point = 457
   Insn 112: point = 458
   Insn 111: point = 459
   Insn 109: point = 461
   Insn 105: point = 463
   Insn 102: point = 465
   Insn 823: point = 466
   Insn 773: point = 467
	   Creating copy r537->r572@444
   Insn 86: point = 469
  BB 6
   Insn 692: point = 471
  BB 5
   Insn 58: point = 472
   Insn 57: point = 472
   Insn 55: point = 472
   Insn 54: point = 474
   Insn 53: point = 475
  BB 4
   Insn 732: point = 477
   Insn 731: point = 479
   Insn 772: point = 481
   Insn 49: point = 483
   Insn 771: point = 483
   Insn 770: point = 485
   Insn 48: point = 487
   Insn 769: point = 487
	Hard reg 44 is preferable by r535 with profit 8
   Insn 768: point = 489
   Insn 47: point = 491
   Insn 767: point = 491
	Hard reg 42 is preferable by r534 with profit 8
   Insn 766: point = 493
   Insn 46: point = 495
   Insn 44: point = 497
  BB 3
   Insn 42: point = 500
   Insn 41: point = 500
   Insn 40: point = 500
   Insn 39: point = 502
   Insn 765: point = 504
	Hard reg 0 is preferable by r532 with profit 14
   Insn 38: point = 506
   Insn 764: point = 506
	Hard reg 0 is preferable by r532 with profit 14
	Hard reg 4 is preferable by r532 with profit 14
  BB 57
   Insn 726: point = 509
   Insn 6: point = 509
   Insn 648: point = 510
  BB 2
   Insn 36: point = 513
   Insn 35: point = 513
   Insn 34: point = 514
   Insn 32: point = 515
   Insn 31: point = 516
   Insn 30: point = 518
   Insn 29: point = 520
   Insn 763: point = 522
   Insn 27: point = 523
   Insn 26: point = 525
   Insn 25: point = 526
   Insn 24: point = 526
   Insn 23: point = 528
   Insn 22: point = 529
   Insn 21: point = 529
   Insn 762: point = 530
   Insn 20: point = 532
   Insn 761: point = 533
   Insn 18: point = 535
   Insn 17: point = 536
   Insn 760: point = 537
   Insn 15: point = 539
   Insn 14: point = 540
   Insn 759: point = 541
   Insn 12: point = 543
   Insn 4: point = 544
 r61: [513..515] [501..510]
 r62: [513..514] [503..509]
 r63: [480..497]
 r64: [0..541]
 r65: [488..540]
 r66: [0..537]
 r67: [492..536]
 r68: [0..533]
 r69: [484..530]
 r71: [496..529]
 r76: [527..528]
 r77: [517..526]
 r78: [524..525]
 r79: [507..523]
 r80: [517..518]
 r82: [498..502]
 r83: [496..500]
 r84: [0..493]
 r85: [1..475]
 r87: [397..472]
 r101: [362..456] [340..359]
 r115: [362..441] [8..359]
 r125: [423..424]
 r132: [410..411]
 r139: [397..398]
 r148: [377..383]
 r149: [366..380]
 r152: [191..327]
 r163: [338..353]
 r164: [313..326]
 r166: [280..324]
 r175: [292..299]
 r186: [263..264]
 r197: [167..221]
 r199: [213..220]
 r200: [165..215]
 r202: [20..159]
 r208: [204..206]
 r209: [20..198]
 r214: [20..189]
 r220: [135..143]
 r222: [137..141]
 r223: [137..140]
 r229: [128..133]
 r231: [109..116]
 r232: [109..115]
 r244: [0..489]
 r247: [82..88]
 r257: [0..485]
 r261: [57..63]
 r270: [0..481]
 r274: [33..39]
 r280: [126..131]
 r282: [336..352]
 r290: [231..252]
 r291: [229..244]
 r292: [478..544]
 r293: [519..520]
 r295: [511..516]
 r296: [513..517]
 r299: [503..504]
 r301: [473..474]
 r302: [362..466] [354..359]
 r304: [464..465]
 r307: [462..463]
 r311: [460..461]
 r315: [458..459]
 r319: [413..457]
 r320: [453..455]
 r322: [453..454]
 r325: [451..452]
 r328: [449..450]
 r332: [447..448]
 r337: [439..440]
 r342: [437..438]
 r344: [435..436]
 r346: [433..434]
 r348: [431..432]
 r349: [381..430]
 r351: [425..426]
 r352: [419..422]
 r353: [418..421]
 r354: [417..420]
 r356: [414..416]
 r357: [412..415]
 r358: [406..409]
 r359: [405..408]
 r360: [404..407]
 r362: [401..403]
 r363: [399..402]
 r364: [393..396]
 r365: [392..395]
 r366: [391..394]
 r368: [388..390]
 r369: [386..389]
 r370: [384..385]
 r371: [375..378]
 r372: [373..376]
 r373: [371..372]
 r374: [373..374]
 r375: [369..370]
 r378: [364..365]
 r379: [366..367]
 r380: [362..363]
 r382: [328..329]
 r384: [8..9]
 r385: [320..321]
 r387: [318..319]
 r389: [315..316]
 r390: [307..311]
 r392: [305..308]
 r393: [305..306]
 r394: [303..304]
 r395: [301..302]
 r397: [297..298]
 r398: [289..290]
 r399: [294..295]
 r400: [284..285]
 r401: [286..287]
 r404: [275..279]
 r406: [272..273]
 r407: [277..278]
 r408: [270..271]
 r410: [218..219]
 r411: [213..214]
 r412: [209..210]
 r413: [211..212]
 r414: [207..208]
 r415: [202..203]
 r416: [204..205]
 r417: [195..197]
 r418: [195..196]
 r419: [193..194]
 r420: [183..184]
 r421: [185..188]
 r422: [180..182]
 r423: [180..181]
 r424: [162..163]
 r425: [144..146]
 r426: [144..145]
 r427: [139..142]
 r428: [135..136]
 r429: [114..117]
 r430: [111..113]
 r431: [107..108]
 r432: [103..105]
 r433: [103..104]
 r434: [77..79]
 r435: [77..78]
 r436: [52..54]
 r437: [52..53]
 r438: [47..48]
 r439: [45..46]
 r440: [43..44]
 r442: [40..42]
 r443: [32..38]
 r445: [34..35]
 r447: [71..72]
 r448: [69..70]
 r449: [67..68]
 r451: [64..66]
 r452: [56..62]
 r454: [58..59]
 r456: [96..97]
 r457: [94..95]
 r458: [92..93]
 r460: [89..91]
 r461: [81..87]
 r463: [83..84]
 r465: [174..175]
 r466: [176..178]
 r467: [171..173]
 r468: [171..172]
 r469: [253..255]
 r470: [256..257]
 r471: [245..254]
 r472: [245..246]
 r473: [247..248]
 r475: [233..234]
 r476: [237..241]
 r477: [237..238]
 r478: [235..236]
 r479: [227..230]
 r480: [227..228]
 r481: [225..226]
 r498: [8..349]
 r499: [8..346]
 r500: [8..343]
 r501: [0..499]
 r502: [0..499]
 r503: [0..499]
 r506: [36..37]
 r507: [60..61]
 r508: [85..86]
 r509: [342..479] [0..5]
 r510: [334..477] [0..3]
 r511: [6..341]
 r512: [157..339] [8..17]
 r513: [155..337] [8..15]
 r514: [151..335] [8..13]
 r515: [149..333] [4..11]
 r516: [18..156]
 r517: [130..154] [16..27]
 r518: [124..152] [20..25]
 r519: [122..150] [14..23]
 r520: [120..148] [12..21]
 r521: [28..129]
 r522: [100..127] [30..30]
 r523: [30..125]
 r524: [26..123]
 r525: [24..121]
 r526: [22..119]
 r527: [542..543]
 r528: [538..539]
 r529: [534..535]
 r530: [531..532]
 r531: [521..522]
 r532: [505..506]
 r533: [494..495]
 r534: [490..491]
 r535: [486..487]
 r536: [482..483]
 r537: [468..469]
 r538: [442..443]
 r539: [428..429]
 r540: [330..331]
 r541: [322..323]
 r542: [309..310]
 r543: [291..293]
 r544: [282..283]
 r545: [274..276]
 r546: [222..223]
 r547: [216..217]
 r548: [200..201]
 r549: [190..192]
 r550: [185..186]
 r551: [164..166]
 r552: [160..161]
 r553: [111..112]
 r554: [49..50]
 r555: [40..41]
 r556: [73..74]
 r557: [64..65]
 r558: [98..99]
 r559: [89..90]
 r560: [176..177]
 r561: [265..266]
 r562: [258..259]
 r563: [249..250]
 r564: [242..243]
 r565: [239..240]
 r566: [350..351]
 r567: [347..348]
 r568: [344..345]
 r569: [387..427]
 r570: [400..444]
 r571: [445..446]
 r572: [464..467]
 r573: [270..281]
 r574: [187..199]
 r575: [153..158]
 r576: [251..260]
 r577: [261..267]
Compressing live ranges: from 545 to 374 - 68%
Ranges after the compression:
 r61: [346..355]
 r62: [348..355]
 r63: [326..343]
 r64: [0..371]
 r65: [334..371]
 r66: [0..369]
 r67: [338..369]
 r68: [0..367]
 r69: [330..365]
 r71: [342..365]
 r76: [364..365]
 r77: [356..363]
 r78: [362..363]
 r79: [352..361]
 r80: [356..357]
 r82: [344..347]
 r83: [342..345]
 r84: [0..339]
 r85: [0..323]
 r87: [272..321]
 r101: [236..311]
 r115: [4..299]
 r125: [284..285]
 r132: [278..279]
 r139: [272..273]
 r148: [262..265]
 r149: [252..263]
 r152: [124..225]
 r163: [234..245]
 r164: [218..225]
 r166: [192..225]
 r175: [202..207]
 r186: [180..181]
 r197: [110..147]
 r199: [142..147]
 r200: [108..143]
 r202: [12..103]
 r208: [134..135]
 r209: [12..129]
 r214: [12..123]
 r220: [88..91]
 r222: [90..91]
 r223: [90..91]
 r229: [84..87]
 r231: [72..75]
 r232: [72..75]
 r244: [0..335]
 r247: [54..57]
 r257: [0..331]
 r261: [38..41]
 r270: [0..327]
 r274: [22..25]
 r280: [82..87]
 r282: [232..245]
 r290: [156..173]
 r291: [154..165]
 r292: [324..373]
 r293: [358..359]
 r295: [354..355]
 r296: [354..356]
 r299: [348..349]
 r301: [322..323]
 r302: [246..319]
 r304: [318..319]
 r307: [316..317]
 r311: [314..315]
 r315: [312..313]
 r319: [280..311]
 r320: [310..311]
 r322: [310..311]
 r325: [308..309]
 r328: [306..307]
 r332: [304..305]
 r337: [298..299]
 r342: [296..297]
 r344: [294..295]
 r346: [292..293]
 r348: [290..291]
 r349: [264..289]
 r351: [286..287]
 r352: [282..283]
 r353: [282..283]
 r354: [282..283]
 r356: [280..281]
 r357: [280..281]
 r358: [276..277]
 r359: [276..277]
 r360: [276..277]
 r362: [274..275]
 r363: [274..275]
 r364: [270..271]
 r365: [270..271]
 r366: [270..271]
 r368: [268..269]
 r369: [268..269]
 r370: [266..267]
 r371: [260..263]
 r372: [258..261]
 r373: [256..257]
 r374: [258..259]
 r375: [254..255]
 r378: [250..251]
 r379: [252..253]
 r380: [248..249]
 r382: [226..227]
 r384: [4..5]
 r385: [222..223]
 r387: [220..221]
 r389: [218..219]
 r390: [214..217]
 r392: [212..215]
 r393: [212..213]
 r394: [210..211]
 r395: [208..209]
 r397: [206..207]
 r398: [200..201]
 r399: [204..205]
 r400: [196..197]
 r401: [198..199]
 r404: [188..191]
 r406: [186..187]
 r407: [190..191]
 r408: [184..185]
 r410: [146..147]
 r411: [142..143]
 r412: [138..139]
 r413: [140..141]
 r414: [136..137]
 r415: [132..133]
 r416: [134..135]
 r417: [128..129]
 r418: [128..129]
 r419: [126..127]
 r420: [118..119]
 r421: [120..123]
 r422: [116..117]
 r423: [116..117]
 r424: [106..107]
 r425: [92..93]
 r426: [92..93]
 r427: [90..91]
 r428: [88..89]
 r429: [74..75]
 r430: [72..73]
 r431: [70..71]
 r432: [68..69]
 r433: [68..69]
 r434: [52..53]
 r435: [52..53]
 r436: [36..37]
 r437: [36..37]
 r438: [32..33]
 r439: [30..31]
 r440: [28..29]
 r442: [26..27]
 r443: [22..25]
 r445: [22..23]
 r447: [48..49]
 r448: [46..47]
 r449: [44..45]
 r451: [42..43]
 r452: [38..41]
 r454: [38..39]
 r456: [64..65]
 r457: [62..63]
 r458: [60..61]
 r460: [58..59]
 r461: [54..57]
 r463: [54..55]
 r465: [112..113]
 r466: [114..115]
 r467: [110..111]
 r468: [110..111]
 r469: [174..175]
 r470: [176..177]
 r471: [166..175]
 r472: [166..167]
 r473: [168..169]
 r475: [156..157]
 r476: [160..163]
 r477: [160..161]
 r478: [158..159]
 r479: [152..155]
 r480: [152..153]
 r481: [150..151]
 r498: [4..243]
 r499: [4..241]
 r500: [4..239]
 r501: [0..345]
 r502: [0..345]
 r503: [0..345]
 r506: [24..25]
 r507: [40..41]
 r508: [56..57]
 r509: [238..325] [0..3]
 r510: [230..323] [0..1]
 r511: [4..237]
 r512: [102..235] [4..11]
 r513: [100..233] [4..9]
 r514: [96..231] [4..7]
 r515: [94..229] [2..5]
 r516: [12..101]
 r517: [86..99] [10..19]
 r518: [80..97] [12..17]
 r519: [78..95] [8..15]
 r520: [76..93] [6..13]
 r521: [20..85]
 r522: [68..83] [21..21]
 r523: [21..81]
 r524: [18..79]
 r525: [16..77]
 r526: [14..75]
 r527: [372..373]
 r528: [370..371]
 r529: [368..369]
 r530: [366..367]
 r531: [360..361]
 r532: [350..351]
 r533: [340..341]
 r534: [336..337]
 r535: [332..333]
 r536: [328..329]
 r537: [320..321]
 r538: [300..301]
 r539: [288..289]
 r540: [228..229]
 r541: [224..225]
 r542: [216..217]
 r543: [202..203]
 r544: [194..195]
 r545: [188..189]
 r546: [148..149]
 r547: [144..145]
 r548: [130..131]
 r549: [124..125]
 r550: [120..121]
 r551: [108..109]
 r552: [104..105]
 r553: [72..73]
 r554: [34..35]
 r555: [26..27]
 r556: [50..51]
 r557: [42..43]
 r558: [66..67]
 r559: [58..59]
 r560: [114..115]
 r561: [182..183]
 r562: [178..179]
 r563: [170..171]
 r564: [164..165]
 r565: [162..163]
 r566: [244..245]
 r567: [242..243]
 r568: [240..241]
 r569: [268..287]
 r570: [274..301]
 r571: [302..303]
 r572: [318..319]
 r573: [184..193]
 r574: [122..129]
 r575: [98..103]
 r576: [172..179]
 r577: [180..183]
	 Assigning to 540 (cl=GENERAL_REGS, orig=382, freq=2730, tfirst=540, tfreq=2730)...
	   Assign 0 to reload r540 (freq=2730)
	 Assigning to 537 (cl=GENERAL_REGS, orig=302, freq=888, tfirst=537, tfreq=1332)...
	   Assign 0 to reload r537 (freq=888)
	Hard reg 0 is preferable by r572 with profit 444
	 Assigning to 572 (cl=GENERAL_REGS, orig=302, freq=1332, tfirst=537, tfreq=1332)...
	   Assign 4 to inheritance r572 (freq=1332)
	 Assigning to 538 (cl=GENERAL_REGS, orig=336, freq=888, tfirst=538, tfreq=1332)...
	   Assign 0 to reload r538 (freq=888)
	Hard reg 4 is preferable by r570 with profit 444
	Hard reg 0 is preferable by r570 with profit 444
	Hard reg 7 is preferable by r571 with profit 444
	Hard reg 0 is preferable by r571 with profit 222
	 Assigning to 570 (cl=GENERAL_REGS, orig=336, freq=1332, tfirst=538, tfreq=1332)...
	 Assigning to 571 (cl=GENERAL_REGS, orig=336, freq=888, tfirst=538, tfreq=1332)...
	   Assign 0 to inheritance r571 (freq=888)
	Hard reg 0 is preferable by r570 with profit 888
	Hard reg 4 is preferable by r570 with profit 444
	 Assigning to 539 (cl=GENERAL_REGS, orig=350, freq=888, tfirst=539, tfreq=888)...
	   Assign 1 to reload r539 (freq=888)
	Hard reg 4 is preferable by r569 with profit 444
	Hard reg 1 is preferable by r569 with profit 444
	 Assigning to 569 (cl=GENERAL_REGS, orig=350, freq=888, tfirst=539, tfreq=888)...
	 Assigning to 542 (cl=GENERAL_REGS, orig=392, freq=306, tfirst=542, tfreq=306)...
	   Assign 0 to reload r542 (freq=306)
	 Assigning to 566 (cl=GENERAL_REGS, orig=498, freq=243, tfirst=566, tfreq=243)...
	   Assign 0 to reload r566 (freq=243)
	 Assigning to 567 (cl=GENERAL_REGS, orig=499, freq=243, tfirst=567, tfreq=243)...
	   Assign 0 to reload r567 (freq=243)
	 Assigning to 568 (cl=GENERAL_REGS, orig=500, freq=243, tfirst=568, tfreq=243)...
	   Assign 0 to reload r568 (freq=243)
	 Assigning to 532 (cl=GENERAL_REGS, orig=299, freq=42, tfirst=532, tfreq=42)...
	   Assign 0 to reload r532 (freq=42)
	 Assigning to 527 (cl=GENERAL_REGS, orig=64, freq=28, tfirst=527, tfreq=28)...
	   Assign 0 to reload r527 (freq=28)
	 Assigning to 528 (cl=GENERAL_REGS, orig=66, freq=28, tfirst=528, tfreq=28)...
	   Assign 0 to reload r528 (freq=28)
	 Assigning to 529 (cl=GENERAL_REGS, orig=68, freq=28, tfirst=529, tfreq=28)...
	   Assign 0 to reload r529 (freq=28)
	 Assigning to 530 (cl=GENERAL_REGS, orig=69, freq=28, tfirst=530, tfreq=28)...
	   Assign 0 to reload r530 (freq=28)
	 Assigning to 531 (cl=GENERAL_REGS, orig=531, freq=28, tfirst=531, tfreq=28)...
	   Assign 0 to reload r531 (freq=28)
	 Assigning to 534 (cl=GENERAL_REGS, orig=244, freq=24, tfirst=534, tfreq=24)...
	   Assign 42 to reload r534 (freq=24)
	 Assigning to 535 (cl=GENERAL_REGS, orig=257, freq=24, tfirst=535, tfreq=24)...
	   Assign 44 to reload r535 (freq=24)
	 Assigning to 536 (cl=GENERAL_REGS, orig=270, freq=24, tfirst=536, tfreq=24)...
	   Assign 0 to reload r536 (freq=24)
	 Assigning to 533 (cl=GENERAL_REGS, orig=84, freq=16, tfirst=533, tfreq=16)...
	   Assign 0 to reload r533 (freq=16)
	 Assigning to 554 (cl=GENERAL_REGS, orig=438, freq=9, tfirst=554, tfreq=9)...
	   Assign 0 to reload r554 (freq=9)
	 Assigning to 555 (cl=GENERAL_REGS, orig=68, freq=6, tfirst=555, tfreq=6)...
	   Assign 4 to reload r555 (freq=6)
	 Assigning to 561 (cl=GENERAL_REGS, orig=115, freq=2, tfirst=561, tfreq=4)...
	   Assign 0 to reload r561 (freq=2)
	Hard reg 0 is preferable by r577 with profit 1
	Hard reg 0 is preferable by r576 with profit 1
	Hard reg 0 is preferable by r562 with profit 1
	Hard reg 0 is preferable by r563 with profit 1
	 Assigning to 562 (cl=GENERAL_REGS, orig=115, freq=2, tfirst=561, tfreq=4)...
	   Assign 0 to reload r562 (freq=2)
	Hard reg 0 is preferable by r576 with profit 2
	Hard reg 0 is preferable by r577 with profit 2
	Hard reg 0 is preferable by r563 with profit 2
	 Assigning to 563 (cl=GENERAL_REGS, orig=115, freq=2, tfirst=561, tfreq=4)...
	   Assign 0 to reload r563 (freq=2)
	Hard reg 0 is preferable by r576 with profit 3
	Hard reg 0 is preferable by r577 with profit 3
	 Assigning to 576 (cl=GENERAL_REGS, orig=115, freq=3, tfirst=561, tfreq=4)...
	   Assign 0 to inheritance r576 (freq=3)
	Hard reg 0 is preferable by r577 with profit 4
	 Assigning to 577 (cl=GENERAL_REGS, orig=115, freq=3, tfirst=561, tfreq=4)...
	   Assign 0 to inheritance r577 (freq=3)
	 Assigning to 556 (cl=GENERAL_REGS, orig=447, freq=3, tfirst=556, tfreq=3)...
	   Assign 0 to reload r556 (freq=3)
	 Assigning to 558 (cl=GENERAL_REGS, orig=456, freq=3, tfirst=558, tfreq=3)...
	   Assign 0 to reload r558 (freq=3)
	 Assigning to 557 (cl=GENERAL_REGS, orig=64, freq=2, tfirst=557, tfreq=2)...
	   Assign 4 to reload r557 (freq=2)
	 Assigning to 559 (cl=GENERAL_REGS, orig=66, freq=2, tfirst=559, tfreq=2)...
	   Assign 4 to reload r559 (freq=2)
	 Assigning to 575 (cl=GENERAL_REGS, orig=281, freq=2, tfirst=575, tfreq=2)...
	   Assign 0 to inheritance r575 (freq=2)
	 Assigning to 541 (cl=SSE_REGS, orig=385, freq=2457, tfirst=541, tfreq=2457)...
	   Assign 23 to reload r541 (freq=2457)
	 Assigning to 553 (cl=SSE_REGS, orig=202, freq=94, tfirst=553, tfreq=94)...
	   Assign 25 to reload r553 (freq=94)
	 Assigning to 543 (cl=SSE_REGS, orig=398, freq=75, tfirst=543, tfreq=75)...
	   Assign 23 to reload r543 (freq=75)
	 Assigning to 545 (cl=SSE_REGS, orig=406, freq=21, tfirst=545, tfreq=21)...
	   Assign 22 to reload r545 (freq=21)
	 Assigning to 544 (cl=SSE_REGS, orig=179, freq=14, tfirst=544, tfreq=14)...
	   Assign 26 to reload r544 (freq=14)
	Hard reg 26 is preferable by r573 with profit 7
	 Assigning to 573 (cl=SSE_REGS, orig=179, freq=14, tfirst=544, tfreq=14)...
	 Assigning to 548 (cl=SSE_REGS, orig=209, freq=6, tfirst=548, tfreq=9)...
	   Assign 27 to reload r548 (freq=6)
	Hard reg 27 is preferable by r574 with profit 3
	Hard reg 27 is preferable by r550 with profit 1
	 Assigning to 550 (cl=SSE_REGS, orig=209, freq=6, tfirst=548, tfreq=9)...
	   Assign 27 to reload r550 (freq=6)
	Hard reg 27 is preferable by r574 with profit 6
	 Assigning to 574 (cl=SSE_REGS, orig=209, freq=9, tfirst=548, tfreq=9)...
	   Assign 27 to inheritance r574 (freq=9)
	 Assigning to 549 (cl=SSE_REGS, orig=214, freq=9, tfirst=549, tfreq=9)...
	   Assign 21 to reload r549 (freq=9)
	 Assigning to 546 (cl=SSE_REGS, orig=197, freq=6, tfirst=546, tfreq=6)...
	   Assign 28 to reload r546 (freq=6)
	 Assigning to 547 (cl=SSE_REGS, orig=200, freq=6, tfirst=547, tfreq=6)...
	   Assign 24 to reload r547 (freq=6)
	 Assigning to 551 (cl=SSE_REGS, orig=424, freq=3, tfirst=551, tfreq=3)...
	   Assign 21 to reload r551 (freq=3)
	 Assigning to 564 (cl=SSE_REGS, orig=476, freq=3, tfirst=564, tfreq=3)...
	   Assign 24 to reload r564 (freq=3)
	 Assigning to 565 (cl=SSE_REGS, orig=477, freq=3, tfirst=565, tfreq=3)...
	   Assign 23 to reload r565 (freq=3)
	 Assigning to 552 (cl=SSE_REGS, orig=202, freq=2, tfirst=552, tfreq=2)...
	   Assign 28 to reload r552 (freq=2)
	 Assigning to 560 (cl=SSE_REGS, orig=214, freq=2, tfirst=560, tfreq=2)...
	   Assign 28 to reload r560 (freq=2)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 6 out of 9 (66.67%)
   Insn after restoring regs:
  247: si:DI=r350:DI
      REG_DEAD r350:DI
   Insn after restoring regs:
  225: si:DI=r336:DI
      REG_DEAD r336:DI
   Insn after restoring regs:
  179: debug event_data_out_private.66 => r350:DI
   Insn after restoring regs:
  775: r350:DI=r539:DI
      REG_DEAD r539:DI
   Insn after restoring regs:
  156: debug cluster_data_out_private.65 => r336:DI
    Change reload insn:
  774: r538:DI=r571:DI
   Insn after restoring regs:
  821: r336:DI=r571:DI
      REG_DEAD r571:DI
   Insn after restoring regs:
  373: flags:CCFPU=cmp(r408:DF,r179:DF)
      REG_DEAD r408:DF
      REG_DEAD r179:DF
   Insn after restoring regs:
  784: r179:DF=r544:DF
      REG_DEAD r544:DF

********** Local #2: **********

          alt=2,overall=0,losers=0,rld_nregs=0
          alt=2,overall=6,losers=1 -- reject
	 Choosing alt 2 in insn 105:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=1,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 828:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=1221,losers=3,rld_nregs=2
          alt=1,overall=614,losers=2,rld_nregs=1
          alt=3,overall=1225,losers=3 -- reject
          alt=4,overall=619,losers=2 -- reject
          alt=6,overall=7,losers=1,rld_nregs=1
          alt=7,overall=15,losers=2 -- reject
          alt=8,overall=1,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 825:  (0) m  (1) x {*movsf_internal}
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 823:  (0) m  (1) re {*movdi_internal_rex64}
          alt=1,overall=7,losers=1,rld_nregs=1
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 821:  (0) m  (1) re {*movdi_internal_rex64}

********** Pseudo live ranges #2: **********

  BB 58
  BB 8
   Insn 695: point = 0
  BB 7
   Insn 66: point = 0
   Insn 65: point = 0
   Insn 63: point = 0
  BB 16
   Insn 702: point = 1
   Insn 291: point = 1
   Insn 290: point = 2
   Insn 289: point = 2
  BB 19
   Insn 705: point = 3
   Insn 734: point = 3
   Insn 733: point = 5
  BB 18
   Insn 311: point = 8
   Insn 310: point = 8
   Insn 309: point = 9
   Insn 305: point = 10
  BB 33
   Insn 708: point = 11
   Insn 743: point = 11
   Insn 742: point = 13
   Insn 741: point = 15
   Insn 740: point = 17
  BB 32
   Insn 439: point = 20
   Insn 438: point = 20
   Insn 435: point = 20
  BB 39
   Insn 711: point = 21
   Insn 753: point = 21
   Insn 752: point = 23
   Insn 751: point = 25
   Insn 750: point = 27
  BB 38
   Insn 473: point = 30
   Insn 472: point = 30
   Insn 471: point = 30
   Insn 468: point = 31
  BB 44
   Insn 713: point = 32
   Insn 520: point = 32
   Insn 519: point = 33
   Insn 518: point = 34
   Insn 728: point = 35
   Insn 517: point = 37
   Insn 515: point = 37
   Insn 513: point = 38
   Insn 511: point = 39
   Insn 799: point = 41
   Insn 510: point = 42
   Insn 508: point = 44
   Insn 507: point = 46
   Insn 798: point = 48
   Insn 506: point = 50
   Insn 797: point = 50
  BB 43
   Insn 501: point = 52
   Insn 500: point = 52
   Insn 499: point = 53
   Insn 498: point = 54
  BB 46
   Insn 715: point = 56
   Insn 543: point = 56
   Insn 542: point = 57
   Insn 541: point = 58
   Insn 729: point = 59
   Insn 540: point = 61
   Insn 538: point = 61
   Insn 536: point = 62
   Insn 534: point = 63
   Insn 802: point = 65
   Insn 533: point = 66
   Insn 531: point = 68
   Insn 530: point = 70
   Insn 801: point = 72
   Insn 529: point = 74
   Insn 800: point = 74
  BB 45
   Insn 527: point = 76
   Insn 526: point = 76
  BB 42
   Insn 496: point = 77
   Insn 495: point = 77
   Insn 494: point = 78
   Insn 493: point = 79
  BB 48
   Insn 717: point = 81
   Insn 566: point = 81
   Insn 565: point = 82
   Insn 564: point = 83
   Insn 730: point = 84
   Insn 563: point = 86
   Insn 561: point = 86
   Insn 559: point = 87
   Insn 557: point = 88
   Insn 805: point = 90
   Insn 556: point = 91
   Insn 554: point = 93
   Insn 553: point = 95
   Insn 804: point = 97
   Insn 552: point = 99
   Insn 803: point = 99
  BB 47
   Insn 550: point = 102
   Insn 549: point = 102
  BB 41
   Insn 491: point = 103
   Insn 490: point = 103
   Insn 489: point = 104
   Insn 488: point = 105
  BB 40
   Insn 483: point = 107
   Insn 482: point = 107
   Insn 481: point = 108
  BB 37
   Insn 466: point = 111
   Insn 465: point = 111
   Insn 796: point = 112
   Insn 464: point = 113
   Insn 463: point = 115
   Insn 462: point = 116
   Insn 461: point = 117
  BB 36
   Insn 749: point = 119
   Insn 748: point = 121
   Insn 747: point = 123
   Insn 746: point = 125
   Insn 745: point = 127
   Insn 744: point = 129
   Insn 9: point = 131
  BB 35
   Insn 457: point = 133
   Insn 456: point = 133
   Insn 455: point = 133
  BB 34
   Insn 449: point = 135
   Insn 448: point = 135
   Insn 447: point = 136
  BB 31
   Insn 433: point = 139
   Insn 432: point = 139
   Insn 431: point = 140
   Insn 430: point = 141
   Insn 429: point = 142
   Insn 428: point = 143
   Insn 427: point = 145
   Insn 426: point = 146
  BB 30
   Insn 739: point = 148
   Insn 738: point = 150
   Insn 737: point = 152
   Insn 736: point = 154
   Insn 735: point = 156
   Insn 8: point = 158
   Insn 795: point = 159
   Insn 423: point = 161
   Insn 794: point = 163
   Insn 422: point = 165
   Insn 793: point = 166
  BB 29
   Insn 420: point = 169
   Insn 419: point = 169
  BB 50
   Insn 720: point = 170
  BB 49
   Insn 579: point = 171
   Insn 578: point = 171
   Insn 577: point = 172
   Insn 576: point = 173
   Insn 575: point = 175
   Insn 806: point = 177
   Insn 574: point = 178
  BB 28
   Insn 416: point = 180
   Insn 415: point = 180
   Insn 414: point = 181
   Insn 413: point = 182
   Insn 412: point = 184
   Insn 792: point = 186
   Insn 411: point = 188
   Insn 791: point = 189
   Insn 407: point = 191
   Insn 790: point = 192
   Insn 406: point = 194
   Insn 405: point = 196
   Insn 404: point = 197
   Insn 825: point = 198
   Insn 789: point = 199
   Insn 402: point = 201
   Insn 401: point = 203
   Insn 400: point = 205
   Insn 397: point = 206
   Insn 396: point = 207
   Insn 395: point = 207
   Insn 394: point = 208
   Insn 393: point = 210
   Insn 392: point = 212
   Insn 391: point = 214
   Insn 788: point = 215
   Insn 388: point = 217
   Insn 387: point = 219
   Insn 386: point = 220
   Insn 787: point = 221
   Insn 385: point = 223
  BB 53
   Insn 722: point = 225
   Insn 619: point = 225
   Insn 618: point = 225
   Insn 617: point = 226
   Insn 616: point = 228
   Insn 615: point = 230
  BB 52
   Insn 611: point = 233
   Insn 610: point = 233
   Insn 609: point = 234
   Insn 608: point = 236
   Insn 813: point = 238
   Insn 607: point = 240
   Insn 812: point = 240
   Insn 811: point = 241
   Insn 606: point = 243
   Insn 810: point = 243
   Insn 604: point = 244
   Insn 602: point = 246
   Insn 601: point = 248
   Insn 809: point = 250
   Insn 597: point = 252
   Insn 596: point = 254
   Insn 595: point = 255
   Insn 594: point = 257
   Insn 808: point = 259
   Insn 827: point = 260
  BB 51
   Insn 590: point = 263
   Insn 589: point = 263
   Insn 586: point = 264
   Insn 807: point = 266
   Insn 828: point = 267
  BB 27
   Insn 383: point = 269
   Insn 382: point = 269
  BB 26
   Insn 374: point = 270
   Insn 373: point = 270
   Insn 372: point = 271
   Insn 786: point = 273
   Insn 370: point = 275
   Insn 785: point = 276
   Insn 369: point = 278
   Insn 366: point = 279
   Insn 365: point = 280
   Insn 364: point = 280
   Insn 363: point = 281
   Insn 784: point = 281
   Insn 359: point = 283
   Insn 358: point = 285
   Insn 356: point = 287
  BB 25
   Insn 352: point = 289
   Insn 351: point = 289
   Insn 783: point = 290
   Insn 350: point = 292
   Insn 782: point = 293
   Insn 349: point = 295
  BB 24
   Insn 347: point = 297
   Insn 346: point = 297
   Insn 345: point = 298
   Insn 344: point = 299
  BB 23
   Insn 342: point = 301
   Insn 341: point = 301
   Insn 339: point = 302
   Insn 338: point = 304
   Insn 337: point = 306
   Insn 781: point = 308
   Insn 336: point = 310
   Insn 780: point = 310
   Insn 335: point = 311
  BB 22
   Insn 332: point = 313
   Insn 331: point = 313
  BB 21
   Insn 329: point = 315
   Insn 328: point = 315
   Insn 327: point = 316
  BB 20
   Insn 325: point = 318
   Insn 324: point = 318
   Insn 322: point = 319
   Insn 779: point = 321
   Insn 321: point = 323
   Insn 778: point = 323
   Insn 318: point = 324
  BB 17
   Insn 303: point = 326
   Insn 302: point = 326
   Insn 300: point = 326
   Insn 299: point = 327
   Insn 777: point = 329
   Insn 297: point = 331
   Insn 776: point = 331
  BB 56
   Insn 724: point = 333
   Insn 758: point = 333
   Insn 757: point = 335
   Insn 756: point = 337
   Insn 755: point = 339
   Insn 754: point = 341
   Insn 819: point = 343
   Insn 509: point = 345
   Insn 818: point = 345
   Insn 817: point = 346
   Insn 532: point = 348
   Insn 816: point = 348
   Insn 815: point = 349
   Insn 555: point = 351
   Insn 814: point = 351
   Insn 7: point = 352
   Insn 635: point = 353
  BB 55
   Insn 632: point = 356
   Insn 631: point = 356
  BB 15
   Insn 700: point = 357
  BB 54
   Insn 627: point = 358
  BB 14
   Insn 284: point = 359
   Insn 283: point = 359
  BB 9
   Insn 697: point = 360
   Insn 75: point = 360
   Insn 74: point = 361
   Insn 73: point = 361
  BB 13
   Insn 281: point = 362
   Insn 280: point = 362
   Insn 279: point = 363
   Insn 277: point = 365
   Insn 276: point = 367
  BB 12
   Insn 273: point = 369
   Insn 272: point = 369
   Insn 270: point = 370
   Insn 268: point = 372
   Insn 267: point = 374
   Insn 266: point = 376
   Insn 265: point = 378
  BB 11
   Insn 262: point = 380
   Insn 261: point = 380
   Insn 259: point = 380
  BB 10
   Insn 257: point = 383
   Insn 256: point = 383
   Insn 254: point = 383
   Insn 252: point = 384
   Insn 251: point = 384
   Insn 250: point = 385
   Insn 249: point = 386
   Insn 248: point = 386
   Insn 247: point = 387
   Insn 246: point = 388
   Insn 245: point = 388
   Insn 244: point = 389
   Insn 243: point = 389
   Insn 242: point = 389
   Insn 241: point = 390
   Insn 239: point = 391
   Insn 238: point = 391
   Insn 237: point = 392
   Insn 236: point = 392
   Insn 235: point = 393
   Insn 234: point = 394
   Insn 233: point = 394
   Insn 232: point = 394
   Insn 231: point = 395
   Insn 230: point = 396
   Insn 229: point = 397
   Insn 228: point = 398
   Insn 227: point = 399
   Insn 226: point = 399
   Insn 225: point = 400
   Insn 224: point = 401
   Insn 223: point = 401
   Insn 222: point = 402
   Insn 221: point = 402
   Insn 220: point = 402
   Insn 219: point = 403
   Insn 217: point = 404
   Insn 216: point = 404
   Insn 215: point = 405
   Insn 214: point = 405
   Insn 213: point = 406
   Insn 212: point = 407
   Insn 211: point = 407
   Insn 210: point = 407
   Insn 209: point = 408
   Insn 208: point = 409
   Insn 207: point = 410
   Insn 206: point = 411
   Insn 205: point = 412
   Insn 204: point = 412
   Insn 203: point = 413
   Insn 202: point = 414
   Insn 201: point = 414
   Insn 200: point = 415
   Insn 199: point = 415
   Insn 198: point = 415
   Insn 197: point = 416
   Insn 195: point = 417
   Insn 194: point = 417
   Insn 193: point = 418
   Insn 192: point = 418
   Insn 191: point = 419
   Insn 190: point = 420
   Insn 189: point = 420
   Insn 188: point = 420
   Insn 187: point = 421
   Insn 186: point = 422
   Insn 185: point = 423
   Insn 184: point = 424
   Insn 182: point = 425
   Insn 181: point = 425
   Insn 180: point = 426
   Insn 775: point = 427
   Insn 177: point = 429
   Insn 176: point = 430
   Insn 175: point = 432
   Insn 173: point = 433
   Insn 172: point = 434
   Insn 171: point = 436
   Insn 170: point = 438
   Insn 164: point = 440
   Insn 155: point = 441
   Insn 774: point = 443
   Insn 821: point = 445
   Insn 154: point = 446
   Insn 150: point = 447
   Insn 149: point = 448
   Insn 147: point = 450
   Insn 143: point = 452
   Insn 140: point = 454
   Insn 124: point = 455
   Insn 117: point = 456
   Insn 116: point = 457
   Insn 112: point = 458
   Insn 111: point = 459
   Insn 109: point = 461
   Insn 105: point = 463
   Insn 102: point = 465
   Insn 823: point = 466
   Insn 773: point = 467
   Insn 86: point = 469
  BB 6
   Insn 692: point = 471
  BB 5
   Insn 58: point = 472
   Insn 57: point = 472
   Insn 55: point = 472
   Insn 54: point = 474
   Insn 53: point = 475
  BB 4
   Insn 732: point = 477
   Insn 731: point = 479
   Insn 772: point = 481
   Insn 49: point = 483
   Insn 771: point = 483
   Insn 770: point = 485
   Insn 48: point = 487
   Insn 769: point = 487
   Insn 768: point = 489
   Insn 47: point = 491
   Insn 767: point = 491
   Insn 766: point = 493
   Insn 46: point = 495
   Insn 44: point = 497
  BB 3
   Insn 42: point = 500
   Insn 41: point = 500
   Insn 40: point = 500
   Insn 39: point = 502
   Insn 765: point = 504
   Insn 38: point = 506
   Insn 764: point = 506
  BB 57
   Insn 726: point = 509
   Insn 6: point = 509
   Insn 648: point = 510
  BB 2
   Insn 36: point = 513
   Insn 35: point = 513
   Insn 34: point = 514
   Insn 32: point = 515
   Insn 31: point = 516
   Insn 30: point = 518
   Insn 29: point = 520
   Insn 763: point = 522
   Insn 27: point = 523
   Insn 26: point = 525
   Insn 25: point = 526
   Insn 24: point = 526
   Insn 23: point = 528
   Insn 22: point = 529
   Insn 21: point = 529
   Insn 762: point = 530
   Insn 20: point = 532
   Insn 761: point = 533
   Insn 18: point = 535
   Insn 17: point = 536
   Insn 760: point = 537
   Insn 15: point = 539
   Insn 14: point = 540
   Insn 759: point = 541
   Insn 12: point = 543
   Insn 4: point = 544
 r64: [0..541]
 r66: [0..537]
 r68: [0..533]
 r69: [484..530]
 r84: [0..493]
 r85: [1..475]
 r101: [362..456] [340..359]
 r115: [362..441] [8..359]
 r179: [270..281]
 r197: [167..221]
 r200: [165..215]
 r202: [20..159]
 r209: [20..198]
 r214: [20..189]
 r244: [0..489]
 r257: [0..485]
 r270: [0..481]
 r302: [362..466] [354..359]
 r336: [400..445]
 r350: [387..427]
 r498: [8..349]
 r499: [8..346]
 r500: [8..343]
 r501: [0..499]
 r502: [0..499]
 r503: [0..499]
 r511: [6..341]
 r516: [18..156]
Compressing live ranges: from 545 to 14 - 2%
Ranges after the compression:
 r64: [0..13]
 r66: [0..13]
 r68: [0..13]
 r69: [12..13]
 r84: [0..13]
 r85: [0..11]
 r101: [6..11]
 r115: [0..11]
 r179: [4..5]
 r197: [2..3]
 r200: [2..3]
 r202: [0..1]
 r209: [0..3]
 r214: [0..3]
 r244: [0..13]
 r257: [0..13]
 r270: [0..11]
 r302: [8..11]
 r336: [10..11]
 r350: [10..11]
 r498: [0..7]
 r499: [0..7]
 r500: [0..7]
 r501: [0..13]
 r502: [0..13]
 r503: [0..13]
 r511: [0..7]
 r516: [0..1]
  Slot 0 regnos (width = 8):	 85	 69
  Slot 1 regnos (width = 8):	 84
  Slot 2 regnos (width = 8):	 336	 511
  Slot 3 regnos (width = 8):	 350	 500
  Slot 4 regnos (width = 8):	 101	 197	 179	 202
  Slot 5 regnos (width = 8):	 302	 498
  Slot 6 regnos (width = 8):	 115
  Slot 7 regnos (width = 8):	 244
  Slot 8 regnos (width = 8):	 257
  Slot 9 regnos (width = 8):	 270
  Slot 10 regnos (width = 8):	 499
  Slot 11 regnos (width = 8):	 68
  Slot 12 regnos (width = 8):	 64
  Slot 13 regnos (width = 8):	 66
  Slot 14 regnos (width = 4):	 214
  Slot 15 regnos (width = 4):	 209
  Slot 16 regnos (width = 8):	 200	 516
Changing spilled pseudos to memory in insn #759
Changing spilled pseudos to memory in insn #13
Changing spilled pseudos to memory in insn #760
Changing spilled pseudos to memory in insn #16
Changing spilled pseudos to memory in insn #761
Changing spilled pseudos to memory in insn #19
Changing spilled pseudos to memory in insn #762
Changing spilled pseudos to memory in insn #766
Changing spilled pseudos to memory in insn #768
Changing spilled pseudos to memory in insn #770
Changing spilled pseudos to memory in insn #771
Changing spilled pseudos to memory in insn #772
Changing spilled pseudos to memory in insn #53
Changing spilled pseudos to memory in insn #65
Changing spilled pseudos to memory in insn #75
Changing spilled pseudos to memory in insn #823
Changing spilled pseudos to memory in insn #117
Changing spilled pseudos to memory in insn #821
Changing spilled pseudos to memory in insn #155
Changing spilled pseudos to memory in insn #156
Changing spilled pseudos to memory in insn #775
Changing spilled pseudos to memory in insn #179
Changing spilled pseudos to memory in insn #225
Changing spilled pseudos to memory in insn #247
Changing spilled pseudos to memory in insn #291
Changing spilled pseudos to memory in insn #733
Changing spilled pseudos to memory in insn #784
Changing spilled pseudos to memory in insn #373
Changing spilled pseudos to memory in insn #787
Changing spilled pseudos to memory in insn #788
Changing spilled pseudos to memory in insn #389
Changing spilled pseudos to memory in insn #825
Changing spilled pseudos to memory in insn #791
Changing spilled pseudos to memory in insn #408
Changing spilled pseudos to memory in insn #793
Changing spilled pseudos to memory in insn #422
Changing spilled pseudos to memory in insn #795
Changing spilled pseudos to memory in insn #735
Changing spilled pseudos to memory in insn #740
Changing spilled pseudos to memory in insn #796
Changing spilled pseudos to memory in insn #482
Changing spilled pseudos to memory in insn #510
Changing spilled pseudos to memory in insn #799
Changing spilled pseudos to memory in insn #515
Changing spilled pseudos to memory in insn #517
Changing spilled pseudos to memory in insn #533
Changing spilled pseudos to memory in insn #802
Changing spilled pseudos to memory in insn #538
Changing spilled pseudos to memory in insn #540
Changing spilled pseudos to memory in insn #556
Changing spilled pseudos to memory in insn #805
Changing spilled pseudos to memory in insn #561
Changing spilled pseudos to memory in insn #563
Changing spilled pseudos to memory in insn #572
Changing spilled pseudos to memory in insn #573
Changing spilled pseudos to memory in insn #806
Changing spilled pseudos to memory in insn #828
Changing spilled pseudos to memory in insn #635
Changing spilled pseudos to memory in insn #814
Changing spilled pseudos to memory in insn #815
Changing spilled pseudos to memory in insn #816
Changing spilled pseudos to memory in insn #817
Changing spilled pseudos to memory in insn #818
Changing spilled pseudos to memory in insn #819
Changing spilled pseudos to memory in insn #754
Changing spilled pseudos to memory in insn #755

********** Local #3: **********

Reusing alternative 1 for insn #755
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 755:  (0) r  (1) rem {*movdi_internal_rex64}
Reusing alternative 3 for insn #754
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 754:  (0) m  (1) re {*movdi_internal_rex64}
Reusing alternative 3 for insn #819
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 819:  (0) m  (1) re {*movdi_internal_rex64}
Reusing alternative 1 for insn #818
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 818:  (0) r  (1) rem {*movdi_internal_rex64}
Reusing alternative 3 for insn #817
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 817:  (0) m  (1) re {*movdi_internal_rex64}
Reusing alternative 1 for insn #816
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 816:  (0) r  (1) rem {*movdi_internal_rex64}
Reusing alternative 3 for insn #815
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 815:  (0) m  (1) re {*movdi_internal_rex64}
Reusing alternative 1 for insn #814
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 814:  (0) r  (1) rem {*movdi_internal_rex64}
Reusing alternative 1 for insn #635
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 635:  (0) r  (1) rem {*movdi_internal_rex64}
Reusing alternative 1 for insn #828
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 828:  (0) r  (1) rem {*movdi_internal_rex64}
Reusing alternative 7 for insn #806
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 806:  (0) x  (1) m {*movsf_internal}
Reusing alternative 0 for insn #563
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 563:  (0) =x  (1) xm {*extendsfdf2_sse}
Reusing alternative 0 for insn #561
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 561:  (0) =x  (1) xm {*extendsfdf2_sse}
Reusing alternative 1 for insn #805
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 805:  (0) r  (1) rem {*movdi_internal_rex64}
Reusing alternative 0 for insn #556
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 556:  (0) =r  (1) %0  (2) rme {*adddi_1}
Reusing alternative 0 for insn #540
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 540:  (0) =x  (1) xm {*extendsfdf2_sse}
Reusing alternative 0 for insn #538
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 538:  (0) =x  (1) xm {*extendsfdf2_sse}
Reusing alternative 1 for insn #802
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 802:  (0) r  (1) rem {*movdi_internal_rex64}
Reusing alternative 0 for insn #533
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 533:  (0) =r  (1) %0  (2) rme {*adddi_1}
Reusing alternative 0 for insn #517
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 517:  (0) =x  (1) xm {*extendsfdf2_sse}
Reusing alternative 0 for insn #515
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 515:  (0) =x  (1) xm {*extendsfdf2_sse}
Reusing alternative 1 for insn #799
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 799:  (0) r  (1) rem {*movdi_internal_rex64}
Reusing alternative 0 for insn #510
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 510:  (0) =r  (1) %0  (2) rme {*adddi_1}
Reusing alternative 0 for insn #482
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 482:  (0) x  (1) xm {*cmpiudf_sse}
Reusing alternative 9 for insn #796
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 796:  (0) x  (1) m {*movdf_internal_rex64}
Reusing alternative 1 for insn #740
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 740:  (0) r  (1) rem {*movdi_internal_rex64}
Reusing alternative 3 for insn #735
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 735:  (0) m  (1) re {*movdi_internal_rex64}
Reusing alternative 10 for insn #795
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 795:  (0) m  (1) x {*movdf_internal_rex64}
Reusing alternative 0 for insn #422
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 422:  (0) =x  (1) 0  (2) xm {*fop_sf_1_sse}
Reusing alternative 7 for insn #793
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 793:  (0) x  (1) m {*movsf_internal}
Reusing alternative 8 for insn #791
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 791:  (0) m  (1) x {*movsf_internal}
Reusing alternative 8 for insn #825
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 825:  (0) m  (1) x {*movsf_internal}
Reusing alternative 8 for insn #788
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 788:  (0) m  (1) x {*movsf_internal}
Reusing alternative 8 for insn #787
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 787:  (0) m  (1) x {*movsf_internal}
Reusing alternative 0 for insn #373
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 373:  (0) x  (1) xm {*cmpiudf_sse}
Reusing alternative 10 for insn #784
          alt=10,overall=0,losers=0,rld_nregs=0
	 Choosing alt 10 in insn 784:  (0) m  (1) x {*movdf_internal_rex64}
Reusing alternative 1 for insn #733
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 733:  (0) r  (1) rem {*movdi_internal_rex64}
Reusing alternative 1 for insn #291
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 291:  (0) r  (1) rem {*movdi_internal_rex64}
Reusing alternative 1 for insn #247
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 247:  (0) r  (1) rem {*movdi_internal_rex64}
Reusing alternative 1 for insn #225
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 225:  (0) r  (1) rem {*movdi_internal_rex64}
Reusing alternative 3 for insn #775
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 775:  (0) m  (1) re {*movdi_internal_rex64}
Reusing alternative 3 for insn #155
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 155:  (0) m  (1) re {*movdi_internal_rex64}
Reusing alternative 3 for insn #821
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 821:  (0) m  (1) re {*movdi_internal_rex64}
Reusing alternative 3 for insn #117
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 117:  (0) m  (1) re {*movdi_internal_rex64}
Reusing alternative 3 for insn #823
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 823:  (0) m  (1) re {*movdi_internal_rex64}
Reusing alternative 1 for insn #75
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 75:  (0) r  (1) rem {*movdi_internal_rex64}
Reusing alternative 0 for insn #65
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) rm  (1) re {*cmpdi_1}
Reusing alternative 3 for insn #53
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 53:  (0) m  (1) re {*movdi_internal_rex64}
Reusing alternative 3 for insn #772
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 772:  (0) m  (1) re {*movdi_internal_rex64}
Reusing alternative 1 for insn #771
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 771:  (0) r  (1) rem {*movdi_internal_rex64}
Reusing alternative 3 for insn #770
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 770:  (0) m  (1) re {*movdi_internal_rex64}
Reusing alternative 3 for insn #768
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 768:  (0) m  (1) re {*movdi_internal_rex64}
Reusing alternative 3 for insn #766
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 766:  (0) m  (1) re {*movdi_internal_rex64}
Reusing alternative 3 for insn #762
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 762:  (0) m  (1) re {*movdi_internal_rex64}
Reusing alternative 3 for insn #761
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 761:  (0) m  (1) re {*movdi_internal_rex64}
Reusing alternative 3 for insn #760
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 760:  (0) m  (1) re {*movdi_internal_rex64}
Reusing alternative 3 for insn #759
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 759:  (0) m  (1) re {*movdi_internal_rex64}
New elimination table:
Can't eliminate 16 to 7 (offset=192, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=128, prev_offset=0)
Can eliminate 20 to 6 (offset=-48, prev_offset=-48)
Updating elimination of equiv for reg 125
Updating elimination of equiv for reg 132
Updating elimination of equiv for reg 139
Updating elimination of equiv for reg 186
Updating elimination of equiv for reg 199
Updating elimination of equiv for reg 301
Updating elimination of equiv for reg 351
Updating elimination of equiv for reg 352
Updating elimination of equiv for reg 353
Updating elimination of equiv for reg 354
Updating elimination of equiv for reg 356
Updating elimination of equiv for reg 357
Updating elimination of equiv for reg 358
Updating elimination of equiv for reg 359
Updating elimination of equiv for reg 360
Updating elimination of equiv for reg 362
Updating elimination of equiv for reg 363
Updating elimination of equiv for reg 364
Updating elimination of equiv for reg 365
Updating elimination of equiv for reg 366
Updating elimination of equiv for reg 368
Updating elimination of equiv for reg 369
Updating elimination of equiv for reg 370
Updating elimination of equiv for reg 371
Updating elimination of equiv for reg 379
Updating elimination of equiv for reg 399
Updating elimination of equiv for reg 401
Updating elimination of equiv for reg 410
Updating elimination of equiv for reg 411
Updating elimination of equiv for reg 416
Updating elimination of equiv for reg 417
Updating elimination of equiv for reg 418
Updating elimination of equiv for reg 421
Updating elimination of equiv for reg 425
Updating elimination of equiv for reg 426
Updating elimination of equiv for reg 433
Updating elimination of equiv for reg 435
Updating elimination of equiv for reg 437
Updating elimination of equiv for reg 466
Updating elimination of equiv for reg 470
Updating elimination of equiv for reg 471
Updating elimination of equiv for reg 473
changing reg in insn 648
changing reg in insn 32
changing reg in insn 34
changing reg in insn 6
changing reg in insn 39
changing reg in insn 44
changing reg in insn 731
changing reg in insn 45
changing reg in insn 14
changing reg in insn 48
changing reg in insn 17
changing reg in insn 47
changing reg in insn 21
changing reg in insn 46
changing reg in insn 44
changing reg in insn 30
changing reg in insn 23
changing reg in insn 24
changing reg in insn 24
changing reg in insn 31
changing reg in insn 31
changing reg in insn 26
changing reg in insn 27
changing reg in insn 27
changing reg in insn 35
changing reg in insn 30
changing reg in insn 31
changing reg in insn 31
changing reg in insn 39
changing reg in insn 44
changing reg in insn 41
changing reg in insn 40
changing reg in insn 46
changing reg in insn 41
changing reg in insn 55
changing reg in insn 229
changing reg in insn 207
changing reg in insn 185
changing reg in insn 57
changing reg in insn 56
changing reg in insn 184
changing reg in insn 185
changing reg in insn 206
changing reg in insn 207
changing reg in insn 228
changing reg in insn 229
changing reg in insn 254
changing reg in insn 266
changing reg in insn 264
changing reg in insn 256
changing reg in insn 256
changing reg in insn 255
changing reg in insn 259
changing reg in insn 275
changing reg in insn 277
changing reg in insn 261
changing reg in insn 261
changing reg in insn 260
changing reg in insn 299
changing reg in insn 335
changing reg in insn 602
changing reg in insn 600
changing reg in insn 599
changing reg in insn 595
changing reg in insn 593
changing reg in insn 592
changing reg in insn 407
changing reg in insn 393
changing reg in insn 385
changing reg in insn 356
changing reg in insn 355
changing reg in insn 354
changing reg in insn 349
changing reg in insn 344
changing reg in insn 318
changing reg in insn 300
changing reg in insn 356
changing reg in insn 349
changing reg in insn 635
changing reg in insn 756
changing reg in insn 300
changing reg in insn 331
changing reg in insn 328
changing reg in insn 302
changing reg in insn 302
changing reg in insn 301
changing reg in insn 318
changing reg in insn 364
changing reg in insn 360
changing reg in insn 344
changing reg in insn 350
changing reg in insn 346
changing reg in insn 586
changing reg in insn 589
changing reg in insn 589
changing reg in insn 587
changing reg in insn 386
changing reg in insn 392
changing reg in insn 388
changing reg in insn 397
changing reg in insn 401
changing reg in insn 399
changing reg in insn 398
changing reg in insn 428
changing reg in insn 432
changing reg in insn 448
changing reg in insn 430
changing reg in insn 447
changing reg in insn 431
changing reg in insn 432
changing reg in insn 447
changing reg in insn 455
changing reg in insn 745
changing reg in insn 456
changing reg in insn 462
changing reg in insn 481
changing reg in insn 463
changing reg in insn 464
changing reg in insn 481
changing reg in insn 557
changing reg in insn 565
changing reg in insn 559
changing reg in insn 534
changing reg in insn 542
changing reg in insn 536
changing reg in insn 511
changing reg in insn 519
changing reg in insn 513
changing reg in insn 9
changing reg in insn 746
changing reg in insn 7
changing reg in insn 757
changing reg in insn 597
changing reg in insn 615
changing reg in insn 615
changing reg in insn 606
changing reg in insn 604
changing reg in insn 616
changing reg in insn 616
changing reg in insn 607
changing reg in insn 4
changing reg in insn 732
changing reg in insn 21
changing reg in insn 20
changing reg in insn 18
changing reg in insn 17
changing reg in insn 15
changing reg in insn 14
changing reg in insn 12
changing reg in insn 29
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 648
changing reg in insn 32
changing reg in insn 31
changing reg in insn 35
changing reg in insn 34
changing reg in insn 39
changing reg in insn 54
changing reg in insn 55
changing reg in insn 102
changing reg in insn 105
changing reg in insn 109
changing reg in insn 109
changing reg in insn 111
changing reg in insn 111
changing reg in insn 112
changing reg in insn 116
changing reg in insn 203
changing reg in insn 118
changing reg in insn 117
changing reg in insn 124
changing reg in insn 140
changing reg in insn 143
changing reg in insn 147
changing reg in insn 147
changing reg in insn 149
changing reg in insn 149
changing reg in insn 150
changing reg in insn 164
changing reg in insn 170
changing reg in insn 170
changing reg in insn 171
changing reg in insn 171
changing reg in insn 172
changing reg in insn 172
changing reg in insn 173
changing reg in insn 175
changing reg in insn 176
changing reg in insn 176
changing reg in insn 176
changing reg in insn 259
changing reg in insn 254
changing reg in insn 177
changing reg in insn 180
changing reg in insn 181
changing reg in insn 186
changing reg in insn 191
changing reg in insn 187
changing reg in insn 192
changing reg in insn 188
changing reg in insn 194
changing reg in insn 197
changing reg in insn 201
changing reg in insn 198
changing reg in insn 204
changing reg in insn 208
changing reg in insn 213
changing reg in insn 209
changing reg in insn 214
changing reg in insn 210
changing reg in insn 216
changing reg in insn 219
changing reg in insn 223
changing reg in insn 220
changing reg in insn 226
changing reg in insn 230
changing reg in insn 235
changing reg in insn 231
changing reg in insn 236
changing reg in insn 232
changing reg in insn 238
changing reg in insn 241
changing reg in insn 245
changing reg in insn 242
changing reg in insn 248
changing reg in insn 250
changing reg in insn 251
changing reg in insn 265
changing reg in insn 267
changing reg in insn 266
changing reg in insn 268
changing reg in insn 268
changing reg in insn 270
changing reg in insn 267
changing reg in insn 268
changing reg in insn 270
changing reg in insn 272
changing reg in insn 277
changing reg in insn 279
changing reg in insn 276
changing reg in insn 277
changing reg in insn 279
changing reg in insn 280
changing reg in insn 299
changing reg in insn 309
changing reg in insn 310
changing reg in insn 322
changing reg in insn 322
changing reg in insn 327
changing reg in insn 328
changing reg in insn 335
changing reg in insn 338
changing reg in insn 337
changing reg in insn 338
changing reg in insn 338
changing reg in insn 339
changing reg in insn 339
changing reg in insn 341
changing reg in insn 345
changing reg in insn 346
changing reg in insn 351
changing reg in insn 349
changing reg in insn 358
changing reg in insn 359
changing reg in insn 356
changing reg in insn 358
changing reg in insn 366
changing reg in insn 370
changing reg in insn 372
changing reg in insn 369
changing reg in insn 372
changing reg in insn 373
changing reg in insn 387
changing reg in insn 388
changing reg in insn 391
changing reg in insn 392
changing reg in insn 393
changing reg in insn 394
changing reg in insn 392
changing reg in insn 393
changing reg in insn 394
changing reg in insn 395
changing reg in insn 401
changing reg in insn 402
changing reg in insn 400
changing reg in insn 401
changing reg in insn 404
changing reg in insn 406
changing reg in insn 405
changing reg in insn 406
changing reg in insn 406
changing reg in insn 412
changing reg in insn 413
changing reg in insn 411
changing reg in insn 412
changing reg in insn 413
changing reg in insn 415
changing reg in insn 414
changing reg in insn 415
changing reg in insn 423
changing reg in insn 426
changing reg in insn 428
changing reg in insn 427
changing reg in insn 428
changing reg in insn 429
changing reg in insn 432
changing reg in insn 430
changing reg in insn 447
changing reg in insn 448
changing reg in insn 461
changing reg in insn 464
changing reg in insn 462
changing reg in insn 464
changing reg in insn 465
changing reg in insn 481
changing reg in insn 482
changing reg in insn 488
changing reg in insn 490
changing reg in insn 489
changing reg in insn 490
changing reg in insn 493
changing reg in insn 495
changing reg in insn 494
changing reg in insn 495
changing reg in insn 498
changing reg in insn 500
changing reg in insn 499
changing reg in insn 500
changing reg in insn 507
changing reg in insn 507
changing reg in insn 508
changing reg in insn 508
changing reg in insn 510
changing reg in insn 510
changing reg in insn 511
changing reg in insn 513
changing reg in insn 520
changing reg in insn 728
changing reg in insn 518
changing reg in insn 530
changing reg in insn 530
changing reg in insn 531
changing reg in insn 531
changing reg in insn 533
changing reg in insn 533
changing reg in insn 534
changing reg in insn 536
changing reg in insn 543
changing reg in insn 729
changing reg in insn 541
changing reg in insn 553
changing reg in insn 553
changing reg in insn 554
changing reg in insn 554
changing reg in insn 556
changing reg in insn 556
changing reg in insn 557
changing reg in insn 559
changing reg in insn 566
changing reg in insn 730
changing reg in insn 564
changing reg in insn 575
changing reg in insn 576
changing reg in insn 574
changing reg in insn 575
changing reg in insn 576
changing reg in insn 578
changing reg in insn 577
changing reg in insn 578
changing reg in insn 595
changing reg in insn 597
changing reg in insn 594
changing reg in insn 595
changing reg in insn 596
changing reg in insn 604
changing reg in insn 597
changing reg in insn 602
changing reg in insn 604
changing reg in insn 601
changing reg in insn 602
changing reg in insn 609
changing reg in insn 610
changing reg in insn 610
changing reg in insn 608
changing reg in insn 609
changing reg in insn 615
changing reg in insn 616
changing reg in insn 617
changing reg in insn 618
changing reg in insn 515
changing reg in insn 728
changing reg in insn 538
changing reg in insn 729
changing reg in insn 561
changing reg in insn 730
changing reg in insn 733
changing reg in insn 731
changing reg in insn 63
changing reg in insn 754
changing reg in insn 55
changing reg in insn 51
changing reg in insn 65
changing reg in insn 64
changing reg in insn 63
changing reg in insn 734
changing reg in insn 732
changing reg in insn 758
changing reg in insn 54
changing reg in insn 250
changing reg in insn 244
changing reg in insn 242
changing reg in insn 241
changing reg in insn 232
changing reg in insn 231
changing reg in insn 230
changing reg in insn 228
changing reg in insn 222
changing reg in insn 220
changing reg in insn 219
changing reg in insn 210
changing reg in insn 209
changing reg in insn 208
changing reg in insn 206
changing reg in insn 200
changing reg in insn 198
changing reg in insn 197
changing reg in insn 188
changing reg in insn 187
changing reg in insn 186
changing reg in insn 184
changing reg in insn 180
changing reg in insn 164
changing reg in insn 163
changing reg in insn 140
changing reg in insn 139
changing reg in insn 124
changing reg in insn 123
changing reg in insn 122
changing reg in insn 121
changing reg in insn 102
changing reg in insn 101
changing reg in insn 86
changing reg in insn 85
changing reg in insn 84
changing reg in insn 83
changing reg in insn 265
changing reg in insn 652
changing reg in insn 276
changing reg in insn 275
changing reg in insn 283
changing reg in insn 627
changing reg in insn 627
changing reg in insn 631
changing reg in insn 54
changing reg in insn 250
changing reg in insn 242
changing reg in insn 241
changing reg in insn 232
changing reg in insn 231
changing reg in insn 230
changing reg in insn 228
changing reg in insn 220
changing reg in insn 219
changing reg in insn 210
changing reg in insn 209
changing reg in insn 208
changing reg in insn 206
changing reg in insn 198
changing reg in insn 197
changing reg in insn 188
changing reg in insn 187
changing reg in insn 186
changing reg in insn 184
changing reg in insn 180
changing reg in insn 265
changing reg in insn 276
changing reg in insn 755
changing reg in insn 740
changing reg in insn 735
changing reg in insn 299
changing reg in insn 756
changing reg in insn 741
changing reg in insn 736
changing reg in insn 757
changing reg in insn 742
changing reg in insn 305
changing reg in insn 738
changing reg in insn 297
changing reg in insn 296
changing reg in insn 310
changing reg in insn 307
changing reg in insn 305
changing reg in insn 758
changing reg in insn 743
changing reg in insn 739
changing reg in insn 734
changing reg in insn 309
changing reg in insn 324
changing reg in insn 382
changing reg in insn 405
changing reg in insn 404
changing reg in insn 391
changing reg in insn 387
changing reg in insn 386
changing reg in insn 419
changing reg in insn 405
changing reg in insn 404
changing reg in insn 391
changing reg in insn 387
changing reg in insn 386
changing reg in insn 750
changing reg in insn 736
changing reg in insn 744
changing reg in insn 741
changing reg in insn 751
changing reg in insn 737
changing reg in insn 435
changing reg in insn 747
changing reg in insn 429
changing reg in insn 425
changing reg in insn 438
changing reg in insn 437
changing reg in insn 435
changing reg in insn 752
changing reg in insn 738
changing reg in insn 748
changing reg in insn 742
changing reg in insn 753
changing reg in insn 739
changing reg in insn 749
changing reg in insn 743
changing reg in insn 431
changing reg in insn 427
changing reg in insn 426
changing reg in insn 438
changing reg in insn 455
changing reg in insn 427
changing reg in insn 426
changing reg in insn 744
changing reg in insn 750
changing reg in insn 745
changing reg in insn 471
changing reg in insn 472
changing reg in insn 746
changing reg in insn 468
changing reg in insn 461
changing reg in insn 460
changing reg in insn 472
changing reg in insn 470
changing reg in insn 468
changing reg in insn 507
changing reg in insn 530
changing reg in insn 553
changing reg in insn 747
changing reg in insn 751
changing reg in insn 748
changing reg in insn 752
changing reg in insn 749
changing reg in insn 753
changing reg in insn 463
changing reg in insn 471
changing reg in insn 489
changing reg in insn 488
changing reg in insn 494
changing reg in insn 493
changing reg in insn 499
changing reg in insn 498
changing reg in insn 506
changing reg in insn 526
changing reg in insn 529
changing reg in insn 549
changing reg in insn 489
changing reg in insn 494
changing reg in insn 499


try_optimize_cfg iteration 1

Forwarding edge 5->6 to 10 failed.
Forwarding edge 7->8 to 58 failed.
Forwarding edge 14->15 to 55 failed.
Forwarding edge 49->50 to 29 failed.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 182.
verify found no changes in insn with uid = 195.
verify found no changes in insn with uid = 205.
verify found no changes in insn with uid = 217.
verify found no changes in insn with uid = 227.
verify found no changes in insn with uid = 239.
verify found no changes in insn with uid = 249.
verify found no changes in insn with uid = 252.
verify found no changes in insn with uid = 365.
verify found no changes in insn with uid = 396.
rescanning insn with uid = 520.
deleting insn with uid = 520.
rescanning insn with uid = 543.
deleting insn with uid = 543.
rescanning insn with uid = 566.
deleting insn with uid = 566.
verify found no changes in insn with uid = 619.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 59 n_edges 95 count 63 (  1.1)


<built-in>

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 21[xmm0] 22[xmm1] 23[xmm2] 24[xmm3] 25[xmm4] 26[xmm5] 27[xmm6] 28[xmm7] 37[r8] 38[r9] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={100d,100u} r1={38d,25u} r2={36d,21u} r3={9d,18u} r4={29d,14u} r5={41d,27u} r6={1d,125u} r7={6d,88u} r8={16d} r9={16d} r10={16d} r11={16d} r12={16d} r13={16d} r14={16d} r15={16d} r17={108d,37u} r18={16d} r19={16d} r20={1d,1u} r21={68d,68u} r22={42d,37u} r23={33d,17u} r24={21d,4u} r25={18d,1u} r26={18d,1u} r27={20d,7u} r28={20d,3u} r29={16d} r30={16d} r31={16d} r32={16d} r33={16d} r34={16d} r35={16d} r36={16d} r37={23d,6u} r38={23d,6u} r39={16d} r40={16d} r41={8d,34u,3e} r42={12d,24u,1e} r43={8d,87u,34e} r44={10d,12u,1e} r45={16d} r46={16d} r47={16d} r48={16d} r49={16d} r50={16d} r51={16d} r52={16d} r69={1e} r115={3e} 
;;    total ref usage 1947{1141d,763u,43e} in 525{509 regular + 16 call} insns.
(note 3 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 146, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 10 3 4 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 4 10 5 2 (set (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
        (reg:DI 5 di [ .omp_data_i ])) Batch_Mix_Correlations.cc:610 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ .omp_data_i ])
        (nil)))
(note 5 4 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 5 759 2 (set (reg/f:DI 0 ax [orig:64 MixCorr_BKGD.38 ] [64])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 256 [0x100])) [0 .omp_data_i_23(D)->MixCorr_BKGD.38+0 S8 A64])) Batch_Mix_Correlations.cc:610 87 {*movdi_internal_rex64}
     (nil))
(insn 759 12 13 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [0 %sfp+-152 S8 A64])
        (reg/f:DI 0 ax [orig:64 MixCorr_BKGD.38 ] [64])) Batch_Mix_Correlations.cc:610 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:64 MixCorr_BKGD.38 ] [64])
        (nil)))
(debug_insn 13 759 14 2 (var_location:DI MixCorr_BKGD.38 (mem/c:DI (plus:DI (reg/f:DI 6 bp)
            (const_int -152 [0xffffffffffffff68])) [0 %sfp+-152 S8 A64])) Batch_Mix_Correlations.cc:610 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 44 r15 [orig:65 D.158397 ] [65])
        (mem/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 248 [0xf8])) [0 .omp_data_i_23(D)->D.152141+0 S8 A64])) Batch_Mix_Correlations.cc:610 87 {*movdi_internal_rex64}
     (nil))
(insn 15 14 760 2 (set (reg/f:DI 0 ax [orig:66 MixCorr_Signal.37 ] [66])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 240 [0xf0])) [0 .omp_data_i_23(D)->MixCorr_Signal.37+0 S8 A64])) Batch_Mix_Correlations.cc:610 87 {*movdi_internal_rex64}
     (nil))
(insn 760 15 16 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [0 %sfp+-160 S8 A64])
        (reg/f:DI 0 ax [orig:66 MixCorr_Signal.37 ] [66])) Batch_Mix_Correlations.cc:610 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:66 MixCorr_Signal.37 ] [66])
        (nil)))
(debug_insn 16 760 17 2 (var_location:DI MixCorr_Signal.37 (mem/c:DI (plus:DI (reg/f:DI 6 bp)
            (const_int -160 [0xffffffffffffff60])) [0 %sfp+-160 S8 A64])) Batch_Mix_Correlations.cc:610 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 42 r13 [orig:67 D.158397 ] [67])
        (mem/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 232 [0xe8])) [0 .omp_data_i_23(D)->D.152139+0 S8 A64])) Batch_Mix_Correlations.cc:610 87 {*movdi_internal_rex64}
     (nil))
(insn 18 17 761 2 (set (reg/f:DI 0 ax [orig:68 MixCorr.36 ] [68])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 224 [0xe0])) [0 .omp_data_i_23(D)->MixCorr.36+0 S8 A64])) Batch_Mix_Correlations.cc:610 87 {*movdi_internal_rex64}
     (nil))
(insn 761 18 19 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0 %sfp+-144 S8 A64])
        (reg/f:DI 0 ax [orig:68 MixCorr.36 ] [68])) Batch_Mix_Correlations.cc:610 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:68 MixCorr.36 ] [68])
        (nil)))
(debug_insn 19 761 20 2 (var_location:DI MixCorr.36 (mem/c:DI (plus:DI (reg/f:DI 6 bp)
            (const_int -144 [0xffffffffffffff70])) [0 %sfp+-144 S8 A64])) Batch_Mix_Correlations.cc:610 -1
     (nil))
(insn 20 19 762 2 (set (reg:DI 0 ax [orig:69 D.158397 ] [69])
        (mem/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 216 [0xd8])) [0 .omp_data_i_23(D)->D.152137+0 S8 A64])) Batch_Mix_Correlations.cc:610 87 {*movdi_internal_rex64}
     (nil))
(insn 762 20 21 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 %sfp+-56 S8 A64])
        (reg:DI 0 ax [orig:69 D.158397 ] [69])) Batch_Mix_Correlations.cc:610 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:69 D.158397 ] [69])
        (nil)))
(insn 21 762 22 2 (set (reg:DI 3 bx [orig:71 mix_start.63 ] [71])
        (mem/j:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292]) [0 .omp_data_i_23(D)->mix_start+0 S8 A64])) Batch_Mix_Correlations.cc:612 87 {*movdi_internal_rex64}
     (nil))
(call_insn/u 22 21 23 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("omp_get_num_threads") [flags 0x41]  <function_decl 0x2b94c3aebf00 __builtin_omp_get_num_threads>) [0 __builtin_omp_get_num_threads S1 A8])
            (const_int 0 [0]))) 672 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 23 22 24 2 (set (reg:SI 0 ax [orig:76 D.158400 ] [76])
        (reg:SI 0 ax)) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 24 23 25 2 (set (reg:DI 41 r12 [orig:77 D.158399 ] [77])
        (sign_extend:DI (reg:SI 0 ax [orig:76 D.158400 ] [76]))) 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:76 D.158400 ] [76])
        (nil)))
(call_insn/u 25 24 26 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("omp_get_thread_num") [flags 0x41]  <function_decl 0x2b94c3aebe00 __builtin_omp_get_thread_num>) [0 __builtin_omp_get_thread_num S1 A8])
            (const_int 0 [0]))) 672 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 26 25 27 2 (set (reg:SI 0 ax [orig:78 D.158400 ] [78])
        (reg:SI 0 ax)) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 27 26 28 2 (set (reg:DI 4 si [orig:79 D.158399 ] [79])
        (sign_extend:DI (reg:SI 0 ax [orig:78 D.158400 ] [78]))) 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:78 D.158400 ] [78])
        (nil)))
(note 28 27 763 2 NOTE_INSN_DELETED)
(insn 763 28 29 2 (set (reg:DI 0 ax [531])
        (mem/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 8 [0x8])) [0 .omp_data_i_23(D)->mix_end+0 S8 A64])) Batch_Mix_Correlations.cc:613 87 {*movdi_internal_rex64}
     (nil))
(insn 29 763 30 2 (parallel [
            (set (reg:DI 0 ax [orig:293 D.158398 ] [293])
                (plus:DI (reg:DI 0 ax [531])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:613 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [531])
        (expr_list:REG_EQUAL (plus:DI (mem/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                        (const_int 8 [0x8])) [0 .omp_data_i_23(D)->mix_end+0 S8 A64])
                (const_int 1 [0x1]))
            (nil))))
(insn 30 29 31 2 (parallel [
            (set (reg:DI 0 ax [orig:80 D.158399 ] [80])
                (minus:DI (reg:DI 0 ax [orig:293 D.158398 ] [293])
                    (reg:DI 3 bx [orig:71 mix_start.63 ] [71])))
            (clobber (reg:CC 17 flags))
        ]) 310 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:293 D.158398 ] [293])
        (nil)))
(insn 31 30 32 2 (parallel [
            (set (reg:DI 0 ax [295])
                (div:DI (reg:DI 0 ax [orig:80 D.158399 ] [80])
                    (reg:DI 41 r12 [orig:77 D.158399 ] [77])))
            (set (reg:DI 1 dx [296])
                (mod:DI (reg:DI 0 ax [orig:80 D.158399 ] [80])
                    (reg:DI 41 r12 [orig:77 D.158399 ] [77])))
            (clobber (reg:CC 17 flags))
        ]) 376 {*divmoddi4}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:80 D.158399 ] [80])
        (expr_list:REG_DEAD (reg:DI 41 r12 [orig:77 D.158399 ] [77])
            (nil))))
(insn 32 31 34 2 (set (reg:DI 2 cx [orig:61 q.1245 ] [61])
        (reg:DI 0 ax [295])) 87 {*movdi_internal_rex64}
     (nil))
(insn 34 32 35 2 (set (reg:DI 5 di [orig:62 tt.1246 ] [62])
        (reg:DI 1 dx [296])) 87 {*movdi_internal_rex64}
     (nil))
(insn 35 34 36 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 4 si [orig:79 D.158399 ] [79])
            (reg:DI 1 dx [296]))) 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 1 dx [296])
        (nil)))
(jump_insn 36 35 649 2 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 646)
            (pc))) 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 646)
;;  succ:       57 [50.0%] 
;;              3 [50.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 3, loop depth 0, count 0, freq 146, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%]  (FALLTHRU)
;;              57 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 2 [cx] 17 [flags]
(code_label 649 36 37 3 85 "" [1 uses])
(note 37 649 764 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 764 37 38 3 (set (reg:DI 0 ax [orig:299 D.158399 ] [299])
        (reg:DI 4 si [orig:79 D.158399 ] [79])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:79 D.158399 ] [79])
        (nil)))
(insn 38 764 765 3 (parallel [
            (set (reg:DI 0 ax [orig:299 D.158399 ] [299])
                (mult:DI (reg:DI 0 ax [orig:299 D.158399 ] [299])
                    (reg:DI 2 cx [orig:61 q.1245 ] [61])))
            (clobber (reg:CC 17 flags))
        ]) 354 {*muldi3_1}
     (nil))
(insn 765 38 39 3 (set (reg:DI 0 ax [orig:299 D.158399 ] [299])
        (reg:DI 0 ax [orig:299 D.158399 ] [299])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:299 D.158399 ] [299])
        (nil)))
(insn 39 765 40 3 (parallel [
            (set (reg:DI 0 ax [orig:82 D.158399 ] [82])
                (plus:DI (reg:DI 0 ax [orig:299 D.158399 ] [299])
                    (reg:DI 5 di [orig:62 tt.1246 ] [62])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:299 D.158399 ] [299])
        (expr_list:REG_DEAD (reg:DI 5 di [orig:62 tt.1246 ] [62])
            (nil))))
(insn 40 39 41 3 (parallel [
            (set (reg:DI 2 cx [orig:83 D.158399 ] [83])
                (plus:DI (reg:DI 2 cx [orig:61 q.1245 ] [61])
                    (reg:DI 0 ax [orig:82 D.158399 ] [82])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:61 q.1245 ] [61])
        (nil)))
(insn 41 40 42 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 0 ax [orig:82 D.158399 ] [82])
            (reg:DI 2 cx [orig:83 D.158399 ] [83]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 42 41 43 3 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 653)
            (pc))) 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 3900 [0xf3c])
        (nil))
 -> 653)
;;  succ:       4 [61.0%]  (FALLTHRU)
;;              58 [39.0%] 
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 4, loop depth 0, count 0, freq 89, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [61.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 17 [flags] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
(note 43 42 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 4 (parallel [
            (set (reg/v:DI 41 r12 [orig:63 imix ] [63])
                (plus:DI (reg:DI 3 bx [orig:71 mix_start.63 ] [71])
                    (reg:DI 0 ax [orig:82 D.158399 ] [82])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:82 D.158399 ] [82])
        (nil)))
(debug_insn 45 44 46 4 (var_location:DI imix (reg/v:DI 41 r12 [orig:63 imix ] [63])) -1
     (nil))
(insn 46 45 766 4 (parallel [
            (set (reg:DI 0 ax [orig:84 D.158399 ] [84])
                (plus:DI (reg:DI 3 bx [orig:71 mix_start.63 ] [71])
                    (reg:DI 2 cx [orig:83 D.158399 ] [83])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 2 cx [orig:83 D.158399 ] [83])
        (expr_list:REG_DEAD (reg:DI 3 bx [orig:71 mix_start.63 ] [71])
            (nil))))
(insn 766 46 767 4 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [0 %sfp+-64 S8 A64])
        (reg:DI 0 ax [orig:84 D.158399 ] [84])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:84 D.158399 ] [84])
        (nil)))
(insn 767 766 47 4 (set (reg:DI 42 r13 [orig:244 D.158397 ] [244])
        (reg:DI 42 r13 [orig:67 D.158397 ] [67])) Batch_Mix_Correlations.cc:696 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13 [orig:67 D.158397 ] [67])
        (nil)))
(insn 47 767 768 4 (parallel [
            (set (reg:DI 42 r13 [orig:244 D.158397 ] [244])
                (lshiftrt:DI (reg:DI 42 r13 [orig:244 D.158397 ] [244])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:696 556 {*lshrdi3_1}
     (expr_list:REG_EQUAL (lshiftrt:DI (reg:DI 42 r13 [orig:67 D.158397 ] [67])
            (const_int 3 [0x3]))
        (nil)))
(insn 768 47 769 4 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [0 %sfp+-112 S8 A64])
        (reg:DI 42 r13 [orig:244 D.158397 ] [244])) Batch_Mix_Correlations.cc:696 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 42 r13 [orig:244 D.158397 ] [244])
        (nil)))
(insn 769 768 48 4 (set (reg:DI 44 r15 [orig:257 D.158397 ] [257])
        (reg:DI 44 r15 [orig:65 D.158397 ] [65])) Batch_Mix_Correlations.cc:702 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:65 D.158397 ] [65])
        (nil)))
(insn 48 769 770 4 (parallel [
            (set (reg:DI 44 r15 [orig:257 D.158397 ] [257])
                (lshiftrt:DI (reg:DI 44 r15 [orig:257 D.158397 ] [257])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:702 556 {*lshrdi3_1}
     (expr_list:REG_EQUAL (lshiftrt:DI (reg:DI 44 r15 [orig:65 D.158397 ] [65])
            (const_int 3 [0x3]))
        (nil)))
(insn 770 48 771 4 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 %sfp+-120 S8 A64])
        (reg:DI 44 r15 [orig:257 D.158397 ] [257])) Batch_Mix_Correlations.cc:702 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:257 D.158397 ] [257])
        (nil)))
(insn 771 770 49 4 (set (reg:DI 0 ax [orig:270 D.158397 ] [270])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 %sfp+-56 S8 A64])) Batch_Mix_Correlations.cc:706 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 69 [ D.158397 ])
        (nil)))
(insn 49 771 772 4 (parallel [
            (set (reg:DI 0 ax [orig:270 D.158397 ] [270])
                (lshiftrt:DI (reg:DI 0 ax [orig:270 D.158397 ] [270])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:706 556 {*lshrdi3_1}
     (expr_list:REG_EQUAL (lshiftrt:DI (reg:DI 69 [ D.158397 ])
            (const_int 3 [0x3]))
        (nil)))
(insn 772 49 269 4 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [0 %sfp+-128 S8 A64])
        (reg:DI 0 ax [orig:270 D.158397 ] [270])) Batch_Mix_Correlations.cc:706 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:270 D.158397 ] [270])
        (nil)))
(note 269 772 278 4 NOTE_INSN_DELETED)
(note 278 269 357 4 NOTE_INSN_DELETED)
(note 357 278 731 4 NOTE_INSN_DELETED)
(insn 731 357 732 4 (set (reg/v:DI 42 r13 [orig:63 imix ] [63])
        (reg/v:DI 41 r12 [orig:63 imix ] [63])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/cmath:88 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v:DI 41 r12 [orig:63 imix ] [63])
        (nil)))
(insn 732 731 68 4 (set (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
        (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/cmath:88 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
        (nil)))
;;  succ:       5 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]

;; basic block 5, loop depth 0, count 0, freq 8889, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%]  (FALLTHRU)
;;              7 [99.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags]
(code_label 68 732 50 5 55 "" [1 uses])
(note 50 68 51 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(debug_insn 51 50 53 5 (var_location:DI imix (reg/v:DI 42 r13 [orig:63 imix ] [63])) -1
     (nil))
(insn 53 51 54 5 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 %sfp+-56 S8 A64])
        (reg/f:DI 7 sp)) 87 {*movdi_internal_rex64}
     (nil))
(insn 54 53 55 5 (set (reg/f:DI 0 ax [orig:301 .omp_data_i_23(D)->mix_events ] [301])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 72 [0x48])) [0 .omp_data_i_23(D)->mix_events+0 S8 A64])) Batch_Mix_Correlations.cc:614 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 72 [0x48])) [0 .omp_data_i_23(D)->mix_events+0 S8 A64])
        (nil)))
(insn 55 54 56 5 (set (reg/v:DI 3 bx [orig:87 mix_event ] [87])
        (mem/j:DI (plus:DI (mult:DI (reg/v:DI 42 r13 [orig:63 imix ] [63])
                    (const_int 8 [0x8]))
                (reg/f:DI 0 ax [orig:301 .omp_data_i_23(D)->mix_events ] [301])) [0 *_51 S8 A64])) Batch_Mix_Correlations.cc:614 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:301 .omp_data_i_23(D)->mix_events ] [301])
        (nil)))
(debug_insn 56 55 57 5 (var_location:DI mix_event (reg/v:DI 3 bx [orig:87 mix_event ] [87])) Batch_Mix_Correlations.cc:614 -1
     (nil))
(insn 57 56 58 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg/v:DI 3 bx [orig:87 mix_event ] [87])
            (const_int 9999998 [0x98967e]))) Batch_Mix_Correlations.cc:616 8 {*cmpdi_1}
     (nil))
(jump_insn 58 57 690 5 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) Batch_Mix_Correlations.cc:616 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 71)
;;  succ:       9 [50.0%] 
;;              6 [50.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]

;; basic block 6, loop depth 0, count 0, freq 4445, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 [50.0%]  (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 690 58 692 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 692 690 693 6 (set (pc)
        (label_ref 691)) 659 {jump}
     (nil)
 -> 691)
;;  succ:       10 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]

(barrier 693 692 76)
;; basic block 7, loop depth 0, count 0, freq 8889, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 [100.0%] 
;;              16 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 17 [flags] 42 [r13]
(code_label 76 693 62 7 56 "" [2 uses])
(note 62 76 63 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 7 (parallel [
            (set (reg/v:DI 42 r13 [orig:63 imix ] [63])
                (plus:DI (reg/v:DI 42 r13 [orig:63 imix ] [63])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (nil))
(debug_insn 64 63 65 7 (var_location:DI imix (reg/v:DI 42 r13 [orig:63 imix ] [63])) -1
     (nil))
(insn 65 64 66 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [0 %sfp+-64 S8 A64])
            (reg/v:DI 42 r13 [orig:63 imix ] [63]))) 8 {*cmpdi_1}
     (nil))
(jump_insn 66 65 694 7 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 68)
            (pc))) 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9900 [0x26ac])
        (nil))
 -> 68)
;;  succ:       5 [99.0%] 
;;              8 [1.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]

;; basic block 8, loop depth 0, count 0, freq 89, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 [1.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 694 66 695 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 695 694 696 8 (set (pc)
        (label_ref 653)) 659 {jump}
     (nil)
 -> 653)
;;  succ:       58 [100.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 696 695 71)
;; basic block 9, loop depth 0, count 0, freq 7989, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 [50.0%] 
;;              10 [10.0%] 
;;              11 [10.0%] 
;;              12 [50.0%] 
;;              13 [50.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 7 [sp]
(code_label 71 696 72 9 53 "" [5 uses])
(note 72 71 73 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 9 (clobber (mem:BLK (scratch) [0 A8])) Batch_Mix_Correlations.cc:616 -1
     (nil))
(insn 74 73 75 9 (clobber (mem:BLK (reg/f:DI 7 sp) [0 A8])) Batch_Mix_Correlations.cc:616 -1
     (nil))
(insn 75 74 697 9 (set (reg/f:DI 7 sp)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 %sfp+-56 S8 A64])) Batch_Mix_Correlations.cc:616 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 85 [ saved_stack.77 ])
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 697 75 698 9 (set (pc)
        (label_ref 76)) 659 {jump}
     (nil)
 -> 76)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]

(barrier 698 697 691)
;; basic block 10, loop depth 0, count 0, freq 4444, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [100.0%] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 691 698 80 10 89 "" [1 uses])
(note 80 691 83 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(debug_insn 83 80 84 10 (var_location:DI D#63 (plus:DI (zero_extend:DI (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 280 [0x118])) [0 .omp_data_i_23(D)->NTrack_Vars+0 S4 A64]))
        (const_int -1 [0xffffffffffffffff]))) Batch_Mix_Correlations.cc:619 -1
     (nil))
(debug_insn 84 83 85 10 (var_location:DI D.157465 (plus:DI (zero_extend:DI (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 280 [0x118])) [0 .omp_data_i_23(D)->NTrack_Vars+0 S4 A64]))
        (const_int -1 [0xffffffffffffffff]))) Batch_Mix_Correlations.cc:619 -1
     (nil))
(debug_insn 85 84 86 10 (var_location:DI D#64 (plus:DI (zero_extend:DI (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 280 [0x118])) [0 .omp_data_i_23(D)->NTrack_Vars+0 S4 A64]))
        (const_int -1 [0xffffffffffffffff]))) Batch_Mix_Correlations.cc:619 -1
     (nil))
(insn 86 85 773 10 (set (reg:DI 0 ax [orig:302 D.158403 ] [302])
        (zero_extend:DI (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 280 [0x118])) [0 .omp_data_i_23(D)->NTrack_Vars+0 S4 A64]))) Batch_Mix_Correlations.cc:619 139 {*zero_extendsidi2_rex64}
     (nil))
(insn 773 86 823 10 (set (reg:DI 4 si [orig:302 D.158403 ] [302])
        (reg:DI 0 ax [orig:302 D.158403 ] [302])) Batch_Mix_Correlations.cc:619 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:302 D.158403 ] [302])
        (nil)))
(insn 823 773 100 10 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 %sfp+-96 S8 A64])
        (reg:DI 4 si [orig:302 D.158403 ] [302])) Batch_Mix_Correlations.cc:619 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 100 823 101 10 (var_location:DI D.157465 (debug_expr:DI D#64)) Batch_Mix_Correlations.cc:619 -1
     (nil))
(debug_insn 101 100 102 10 (var_location:DI D.157473 (plus:DI (zero_extend:DI (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 276 [0x114])) [0 .omp_data_i_23(D)->ntrack_max+0 S4 A32]))
        (const_int -1 [0xffffffffffffffff]))) Batch_Mix_Correlations.cc:619 -1
     (nil))
(insn 102 101 105 10 (set (reg:DI 0 ax [orig:304 D.158403 ] [304])
        (zero_extend:DI (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 276 [0x114])) [0 .omp_data_i_23(D)->ntrack_max+0 S4 A32]))) Batch_Mix_Correlations.cc:619 139 {*zero_extendsidi2_rex64}
     (nil))
(insn 105 102 106 10 (parallel [
            (set (reg:DI 0 ax [orig:307 D.158397 ] [307])
                (mult:DI (reg:DI 0 ax [orig:304 D.158403 ] [304])
                    (reg:DI 4 si [orig:302 D.158403 ] [302])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:619 354 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 4 si [orig:302 D.158403 ] [302])
        (expr_list:REG_DEAD (reg:DI 0 ax [orig:304 D.158403 ] [304])
            (nil))))
(note 106 105 669 10 NOTE_INSN_DELETED)
(note 669 106 109 10 NOTE_INSN_DELETED)
(insn 109 669 110 10 (set (reg:DI 0 ax [311])
        (plus:DI (mult:DI (reg:DI 0 ax [orig:307 D.158397 ] [307])
                (const_int 4 [0x4]))
            (const_int 18 [0x12]))) Batch_Mix_Correlations.cc:619 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:307 D.158397 ] [307])
        (nil)))
(note 110 109 111 10 NOTE_INSN_DELETED)
(insn 111 110 112 10 (parallel [
            (set (reg:DI 0 ax [315])
                (and:DI (reg:DI 0 ax [311])
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:619 401 {*anddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [311])
        (nil)))
(insn 112 111 114 10 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 0 ax [315])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:619 310 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [315])
        (nil)))
(note 114 112 115 10 NOTE_INSN_DELETED)
(note 115 114 116 10 NOTE_INSN_DELETED)
(insn 116 115 117 10 (set (reg/f:DI 44 r15 [319])
        (reg/f:DI 7 sp)) Batch_Mix_Correlations.cc:619 87 {*movdi_internal_rex64}
     (nil))
(insn 117 116 118 10 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 %sfp+-88 S8 A64])
        (reg/f:DI 44 r15 [319])) Batch_Mix_Correlations.cc:619 87 {*movdi_internal_rex64}
     (nil))
(debug_insn 118 117 121 10 (var_location:DI track_data_out_private.64 (reg/f:DI 44 r15 [319])) Batch_Mix_Correlations.cc:619 -1
     (nil))
(debug_insn 121 118 122 10 (var_location:DI D#65 (plus:DI (zero_extend:DI (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 288 [0x120])) [0 .omp_data_i_23(D)->NCluster_Vars+0 S4 A64]))
        (const_int -1 [0xffffffffffffffff]))) Batch_Mix_Correlations.cc:620 -1
     (nil))
(debug_insn 122 121 123 10 (var_location:DI D.157484 (plus:DI (zero_extend:DI (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 288 [0x120])) [0 .omp_data_i_23(D)->NCluster_Vars+0 S4 A64]))
        (const_int -1 [0xffffffffffffffff]))) Batch_Mix_Correlations.cc:620 -1
     (nil))
(debug_insn 123 122 124 10 (var_location:DI D#66 (plus:DI (zero_extend:DI (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 288 [0x120])) [0 .omp_data_i_23(D)->NCluster_Vars+0 S4 A64]))
        (const_int -1 [0xffffffffffffffff]))) Batch_Mix_Correlations.cc:620 -1
     (nil))
(insn 124 123 138 10 (set (reg:DI 1 dx [orig:320 D.158403 ] [320])
        (zero_extend:DI (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 288 [0x120])) [0 .omp_data_i_23(D)->NCluster_Vars+0 S4 A64]))) Batch_Mix_Correlations.cc:620 139 {*zero_extendsidi2_rex64}
     (nil))
(debug_insn 138 124 139 10 (var_location:DI D.157484 (debug_expr:DI D#66)) Batch_Mix_Correlations.cc:620 -1
     (nil))
(debug_insn 139 138 140 10 (var_location:DI D.157492 (plus:DI (zero_extend:DI (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 284 [0x11c])) [0 .omp_data_i_23(D)->ncluster_max+0 S4 A32]))
        (const_int -1 [0xffffffffffffffff]))) Batch_Mix_Correlations.cc:620 -1
     (nil))
(insn 140 139 143 10 (set (reg:DI 0 ax [orig:322 D.158403 ] [322])
        (zero_extend:DI (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 284 [0x11c])) [0 .omp_data_i_23(D)->ncluster_max+0 S4 A32]))) Batch_Mix_Correlations.cc:620 139 {*zero_extendsidi2_rex64}
     (nil))
(insn 143 140 144 10 (parallel [
            (set (reg:DI 0 ax [orig:325 D.158397 ] [325])
                (mult:DI (reg:DI 0 ax [orig:322 D.158403 ] [322])
                    (reg:DI 1 dx [orig:320 D.158403 ] [320])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:620 354 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:322 D.158403 ] [322])
        (expr_list:REG_DEAD (reg:DI 1 dx [orig:320 D.158403 ] [320])
            (nil))))
(note 144 143 147 10 NOTE_INSN_DELETED)
(insn 147 144 148 10 (set (reg:DI 0 ax [328])
        (plus:DI (mult:DI (reg:DI 0 ax [orig:325 D.158397 ] [325])
                (const_int 4 [0x4]))
            (const_int 18 [0x12]))) Batch_Mix_Correlations.cc:620 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:325 D.158397 ] [325])
        (nil)))
(note 148 147 149 10 NOTE_INSN_DELETED)
(insn 149 148 150 10 (parallel [
            (set (reg:DI 0 ax [332])
                (and:DI (reg:DI 0 ax [328])
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:620 401 {*anddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [328])
        (nil)))
(insn 150 149 152 10 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 0 ax [332])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:620 310 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [332])
        (nil)))
(note 152 150 153 10 NOTE_INSN_DELETED)
(note 153 152 154 10 NOTE_INSN_DELETED)
(insn 154 153 822 10 (set (reg/f:DI 0 ax [336])
        (reg/f:DI 7 sp)) Batch_Mix_Correlations.cc:620 87 {*movdi_internal_rex64}
     (nil))
(note 822 154 821 10 NOTE_INSN_DELETED)
(insn 821 822 774 10 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 %sfp+-72 S8 A64])
        (reg/f:DI 0 ax [336])) Batch_Mix_Correlations.cc:620 87 {*movdi_internal_rex64}
     (nil))
(insn 774 821 155 10 (set (reg/f:DI 0 ax [336])
        (reg/f:DI 0 ax [336])) Batch_Mix_Correlations.cc:620 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [336])
        (nil)))
(insn 155 774 156 10 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 %sfp+-104 S8 A64])
        (reg/f:DI 0 ax [336])) Batch_Mix_Correlations.cc:620 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [336])
        (nil)))
(debug_insn 156 155 163 10 (var_location:DI cluster_data_out_private.65 (mem/c:DI (plus:DI (reg/f:DI 6 bp)
            (const_int -72 [0xffffffffffffffb8])) [0 %sfp+-72 S8 A64])) Batch_Mix_Correlations.cc:620 -1
     (nil))
(debug_insn 163 156 164 10 (var_location:DI D.157503 (plus:DI (zero_extend:DI (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 292 [0x124])) [0 .omp_data_i_23(D)->NEvent_Vars+0 S4 A32]))
        (const_int -1 [0xffffffffffffffff]))) Batch_Mix_Correlations.cc:621 -1
     (nil))
(insn 164 163 167 10 (set (reg:DI 0 ax [orig:337 D.158403 ] [337])
        (zero_extend:DI (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 292 [0x124])) [0 .omp_data_i_23(D)->NEvent_Vars+0 S4 A32]))) Batch_Mix_Correlations.cc:621 139 {*zero_extendsidi2_rex64}
     (nil))
(note 167 164 170 10 NOTE_INSN_DELETED)
(insn 170 167 171 10 (set (reg:DI 0 ax [342])
        (plus:DI (mult:DI (reg:DI 0 ax [orig:337 D.158403 ] [337])
                (const_int 4 [0x4]))
            (const_int 18 [0x12]))) Batch_Mix_Correlations.cc:621 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:337 D.158403 ] [337])
        (nil)))
(insn 171 170 172 10 (parallel [
            (set (reg:DI 0 ax [344])
                (lshiftrt:DI (reg:DI 0 ax [342])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:621 556 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [342])
        (nil)))
(insn 172 171 173 10 (parallel [
            (set (reg:DI 0 ax [346])
                (ashift:DI (reg:DI 0 ax [344])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:621 522 {*ashldi3_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [344])
        (nil)))
(insn 173 172 175 10 (parallel [
            (set (reg/f:DI 7 sp)
                (minus:DI (reg/f:DI 7 sp)
                    (reg:DI 0 ax [346])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:621 310 {*subdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [346])
        (nil)))
(insn 175 173 176 10 (parallel [
            (set (reg/f:DI 41 r12 [348])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:621 274 {*adddi_1}
     (nil))
(insn 176 175 177 10 (parallel [
            (set (reg:DI 41 r12 [349])
                (lshiftrt:DI (reg/f:DI 41 r12 [348])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:621 556 {*lshrdi3_1}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [348])
        (expr_list:REG_EQUAL (lshiftrt:DI (reg/f:DI 41 r12 [348])
                (const_int 2 [0x2]))
            (nil))))
(insn 177 176 775 10 (parallel [
            (set (reg/f:DI 1 dx [350])
                (ashift:DI (reg:DI 41 r12 [349])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:621 522 {*ashldi3_1}
     (nil))
(insn 775 177 820 10 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 %sfp+-80 S8 A64])
        (reg/f:DI 1 dx [350])) Batch_Mix_Correlations.cc:621 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [350])
        (nil)))
(note 820 775 179 10 NOTE_INSN_DELETED)
(debug_insn 179 820 180 10 (var_location:DI event_data_out_private.66 (mem/c:DI (plus:DI (reg/f:DI 6 bp)
            (const_int -80 [0xffffffffffffffb0])) [0 %sfp+-80 S8 A64])) Batch_Mix_Correlations.cc:621 -1
     (nil))
(insn 180 179 181 10 (set (reg/f:DI 5 di [orig:351 .omp_data_i_23(D)->h5readlock ] [351])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 200 [0xc8])) [0 .omp_data_i_23(D)->h5readlock+0 S8 A64])) Batch_Mix_Correlations.cc:624 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 200 [0xc8])) [0 .omp_data_i_23(D)->h5readlock+0 S8 A64])
        (nil)))
(insn 181 180 182 10 (set (reg:DI 5 di)
        (reg/f:DI 5 di [orig:351 .omp_data_i_23(D)->h5readlock ] [351])) Batch_Mix_Correlations.cc:624 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:351 .omp_data_i_23(D)->h5readlock ] [351])
        (nil)))
(call_insn 182 181 184 10 (call (mem:QI (symbol_ref:DI ("omp_set_lock") [flags 0x41]  <function_decl 0x2b94cbcf3300 omp_set_lock>) [0 omp_set_lock S1 A8])
        (const_int 0 [0])) Batch_Mix_Correlations.cc:624 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 184 182 185 10 (set (reg/f:DI 0 ax [orig:125 D.158405 ] [125])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 128 [0x80])) [0 .omp_data_i_23(D)->track_offset+0 S8 A64])) Batch_Mix_Correlations.cc:626 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 128 [0x80])) [0 .omp_data_i_23(D)->track_offset+0 S8 A64])
        (nil)))
(insn 185 184 186 10 (set (mem/j:DI (reg/f:DI 0 ax [orig:125 D.158405 ] [125]) [0 *_94+0 S8 A64])
        (reg/v:DI 3 bx [orig:87 mix_event ] [87])) Batch_Mix_Correlations.cc:626 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:125 D.158405 ] [125])
        (nil)))
(insn 186 185 187 10 (set (reg/f:DI 2 cx [orig:352 .omp_data_i_23(D)->track_offset ] [352])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 128 [0x80])) [0 .omp_data_i_23(D)->track_offset+0 S8 A64])) Batch_Mix_Correlations.cc:627 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 128 [0x80])) [0 .omp_data_i_23(D)->track_offset+0 S8 A64])
        (nil)))
(insn 187 186 188 10 (set (reg/f:DI 1 dx [orig:353 .omp_data_i_23(D)->track_count ] [353])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 136 [0x88])) [0 .omp_data_i_23(D)->track_count+0 S8 A64])) Batch_Mix_Correlations.cc:627 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 136 [0x88])) [0 .omp_data_i_23(D)->track_count+0 S8 A64])
        (nil)))
(insn 188 187 189 10 (set (reg/f:DI 5 di [orig:354 .omp_data_i_23(D)->track_dataspace ] [354])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 88 [0x58])) [0 .omp_data_i_23(D)->track_dataspace+0 S8 A64])) Batch_Mix_Correlations.cc:627 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 88 [0x58])) [0 .omp_data_i_23(D)->track_dataspace+0 S8 A64])
        (nil)))
(insn 189 188 190 10 (set (reg:DI 38 r9)
        (const_int 0 [0])) Batch_Mix_Correlations.cc:627 87 {*movdi_internal_rex64}
     (nil))
(insn 190 189 191 10 (set (reg:DI 37 r8)
        (const_int 0 [0])) Batch_Mix_Correlations.cc:627 87 {*movdi_internal_rex64}
     (nil))
(insn 191 190 192 10 (set (reg:DI 2 cx)
        (reg/f:DI 2 cx [orig:352 .omp_data_i_23(D)->track_offset ] [352])) Batch_Mix_Correlations.cc:627 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:352 .omp_data_i_23(D)->track_offset ] [352])
        (nil)))
(insn 192 191 193 10 (set (reg:DI 1 dx)
        (reg/f:DI 1 dx [orig:353 .omp_data_i_23(D)->track_count ] [353])) Batch_Mix_Correlations.cc:627 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:353 .omp_data_i_23(D)->track_count ] [353])
        (nil)))
(insn 193 192 194 10 (set (reg:SI 4 si)
        (const_int 0 [0])) Batch_Mix_Correlations.cc:627 89 {*movsi_internal}
     (nil))
(insn 194 193 195 10 (set (reg:DI 5 di)
        (reg/f:DI 5 di [orig:354 .omp_data_i_23(D)->track_dataspace ] [354])) Batch_Mix_Correlations.cc:627 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:354 .omp_data_i_23(D)->track_dataspace ] [354])
        (nil)))
(call_insn 195 194 196 10 (call (mem:QI (symbol_ref:DI ("_ZNK2H59DataSpace15selectHyperslabE13H5S_seloper_tPKyS3_S3_S3_") [flags 0x41]  <function_decl 0x2b94cb998a00 selectHyperslab>) [0 selectHyperslab S1 A8])
        (const_int 0 [0])) Batch_Mix_Correlations.cc:627 665 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                                (nil))))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (nil))))))))
(note 196 195 197 10 NOTE_INSN_DELETED)
(insn 197 196 198 10 (set (reg/f:DI 2 cx [orig:356 .omp_data_i_23(D)->track_memspace ] [356])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 176 [0xb0])) [0 .omp_data_i_23(D)->track_memspace+0 S8 A64])) Batch_Mix_Correlations.cc:628 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 176 [0xb0])) [0 .omp_data_i_23(D)->track_memspace+0 S8 A64])
        (nil)))
(insn 198 197 199 10 (set (reg/f:DI 5 di [orig:357 .omp_data_i_23(D)->track_dataset ] [357])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 80 [0x50])) [0 .omp_data_i_23(D)->track_dataset+0 S8 A64])) Batch_Mix_Correlations.cc:628 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 80 [0x50])) [0 .omp_data_i_23(D)->track_dataset+0 S8 A64])
        (nil)))
(insn 199 198 200 10 (set (reg:DI 38 r9)
        (symbol_ref:DI ("_ZN2H519DSetMemXferPropList7DEFAULTE") [flags 0x40]  <var_decl 0x2b94cba31558 DEFAULT>)) Batch_Mix_Correlations.cc:628 87 {*movdi_internal_rex64}
     (nil))
(insn 200 199 201 10 (set (reg:DI 37 r8)
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 88 [0x58])) [0 .omp_data_i_23(D)->track_dataspace+0 S8 A64])) Batch_Mix_Correlations.cc:628 87 {*movdi_internal_rex64}
     (nil))
(insn 201 200 202 10 (set (reg:DI 2 cx)
        (reg/f:DI 2 cx [orig:356 .omp_data_i_23(D)->track_memspace ] [356])) Batch_Mix_Correlations.cc:628 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:356 .omp_data_i_23(D)->track_memspace ] [356])
        (nil)))
(insn 202 201 203 10 (set (reg:DI 1 dx)
        (symbol_ref:DI ("_ZN2H58PredType12NATIVE_FLOATE") [flags 0x40]  <var_decl 0x2b94cba81688 NATIVE_FLOAT>)) Batch_Mix_Correlations.cc:628 87 {*movdi_internal_rex64}
     (nil))
(insn 203 202 204 10 (set (reg:DI 4 si)
        (reg/f:DI 44 r15 [319])) Batch_Mix_Correlations.cc:628 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 44 r15 [319])
        (nil)))
(insn 204 203 205 10 (set (reg:DI 5 di)
        (reg/f:DI 5 di [orig:357 .omp_data_i_23(D)->track_dataset ] [357])) Batch_Mix_Correlations.cc:628 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:357 .omp_data_i_23(D)->track_dataset ] [357])
        (nil)))
(call_insn 205 204 206 10 (call (mem:QI (symbol_ref:DI ("_ZNK2H57DataSet4readEPvRKNS_8DataTypeERKNS_9DataSpaceES7_RKNS_19DSetMemXferPropListE") [flags 0x41]  <function_decl 0x2b94cbad9f00 read>) [0 read S1 A8])
        (const_int 0 [0])) Batch_Mix_Correlations.cc:628 665 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                                (nil))))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (nil))))))))
(insn 206 205 207 10 (set (reg/f:DI 0 ax [orig:132 D.158405 ] [132])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 144 [0x90])) [0 .omp_data_i_23(D)->cluster_offset+0 S8 A64])) Batch_Mix_Correlations.cc:630 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 144 [0x90])) [0 .omp_data_i_23(D)->cluster_offset+0 S8 A64])
        (nil)))
(insn 207 206 208 10 (set (mem/j:DI (reg/f:DI 0 ax [orig:132 D.158405 ] [132]) [0 *_104+0 S8 A64])
        (reg/v:DI 3 bx [orig:87 mix_event ] [87])) Batch_Mix_Correlations.cc:630 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:132 D.158405 ] [132])
        (nil)))
(insn 208 207 209 10 (set (reg/f:DI 2 cx [orig:358 .omp_data_i_23(D)->cluster_offset ] [358])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 144 [0x90])) [0 .omp_data_i_23(D)->cluster_offset+0 S8 A64])) Batch_Mix_Correlations.cc:631 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 144 [0x90])) [0 .omp_data_i_23(D)->cluster_offset+0 S8 A64])
        (nil)))
(insn 209 208 210 10 (set (reg/f:DI 1 dx [orig:359 .omp_data_i_23(D)->cluster_count ] [359])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 152 [0x98])) [0 .omp_data_i_23(D)->cluster_count+0 S8 A64])) Batch_Mix_Correlations.cc:631 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 152 [0x98])) [0 .omp_data_i_23(D)->cluster_count+0 S8 A64])
        (nil)))
(insn 210 209 211 10 (set (reg/f:DI 5 di [orig:360 .omp_data_i_23(D)->cluster_dataspace ] [360])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 104 [0x68])) [0 .omp_data_i_23(D)->cluster_dataspace+0 S8 A64])) Batch_Mix_Correlations.cc:631 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 104 [0x68])) [0 .omp_data_i_23(D)->cluster_dataspace+0 S8 A64])
        (nil)))
(insn 211 210 212 10 (set (reg:DI 38 r9)
        (const_int 0 [0])) Batch_Mix_Correlations.cc:631 87 {*movdi_internal_rex64}
     (nil))
(insn 212 211 213 10 (set (reg:DI 37 r8)
        (const_int 0 [0])) Batch_Mix_Correlations.cc:631 87 {*movdi_internal_rex64}
     (nil))
(insn 213 212 214 10 (set (reg:DI 2 cx)
        (reg/f:DI 2 cx [orig:358 .omp_data_i_23(D)->cluster_offset ] [358])) Batch_Mix_Correlations.cc:631 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:358 .omp_data_i_23(D)->cluster_offset ] [358])
        (nil)))
(insn 214 213 215 10 (set (reg:DI 1 dx)
        (reg/f:DI 1 dx [orig:359 .omp_data_i_23(D)->cluster_count ] [359])) Batch_Mix_Correlations.cc:631 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:359 .omp_data_i_23(D)->cluster_count ] [359])
        (nil)))
(insn 215 214 216 10 (set (reg:SI 4 si)
        (const_int 0 [0])) Batch_Mix_Correlations.cc:631 89 {*movsi_internal}
     (nil))
(insn 216 215 217 10 (set (reg:DI 5 di)
        (reg/f:DI 5 di [orig:360 .omp_data_i_23(D)->cluster_dataspace ] [360])) Batch_Mix_Correlations.cc:631 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:360 .omp_data_i_23(D)->cluster_dataspace ] [360])
        (nil)))
(call_insn 217 216 218 10 (call (mem:QI (symbol_ref:DI ("_ZNK2H59DataSpace15selectHyperslabE13H5S_seloper_tPKyS3_S3_S3_") [flags 0x41]  <function_decl 0x2b94cb998a00 selectHyperslab>) [0 selectHyperslab S1 A8])
        (const_int 0 [0])) Batch_Mix_Correlations.cc:631 665 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                                (nil))))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (nil))))))))
(note 218 217 219 10 NOTE_INSN_DELETED)
(insn 219 218 220 10 (set (reg/f:DI 2 cx [orig:362 .omp_data_i_23(D)->cluster_memspace ] [362])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 184 [0xb8])) [0 .omp_data_i_23(D)->cluster_memspace+0 S8 A64])) Batch_Mix_Correlations.cc:632 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 184 [0xb8])) [0 .omp_data_i_23(D)->cluster_memspace+0 S8 A64])
        (nil)))
(insn 220 219 221 10 (set (reg/f:DI 5 di [orig:363 .omp_data_i_23(D)->cluster_dataset ] [363])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 96 [0x60])) [0 .omp_data_i_23(D)->cluster_dataset+0 S8 A64])) Batch_Mix_Correlations.cc:632 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 96 [0x60])) [0 .omp_data_i_23(D)->cluster_dataset+0 S8 A64])
        (nil)))
(insn 221 220 222 10 (set (reg:DI 38 r9)
        (symbol_ref:DI ("_ZN2H519DSetMemXferPropList7DEFAULTE") [flags 0x40]  <var_decl 0x2b94cba31558 DEFAULT>)) Batch_Mix_Correlations.cc:632 87 {*movdi_internal_rex64}
     (nil))
(insn 222 221 223 10 (set (reg:DI 37 r8)
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 104 [0x68])) [0 .omp_data_i_23(D)->cluster_dataspace+0 S8 A64])) Batch_Mix_Correlations.cc:632 87 {*movdi_internal_rex64}
     (nil))
(insn 223 222 224 10 (set (reg:DI 2 cx)
        (reg/f:DI 2 cx [orig:362 .omp_data_i_23(D)->cluster_memspace ] [362])) Batch_Mix_Correlations.cc:632 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:362 .omp_data_i_23(D)->cluster_memspace ] [362])
        (nil)))
(insn 224 223 225 10 (set (reg:DI 1 dx)
        (symbol_ref:DI ("_ZN2H58PredType12NATIVE_FLOATE") [flags 0x40]  <var_decl 0x2b94cba81688 NATIVE_FLOAT>)) Batch_Mix_Correlations.cc:632 87 {*movdi_internal_rex64}
     (nil))
(insn 225 224 226 10 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 %sfp+-72 S8 A64])) Batch_Mix_Correlations.cc:632 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 336)
        (nil)))
(insn 226 225 227 10 (set (reg:DI 5 di)
        (reg/f:DI 5 di [orig:363 .omp_data_i_23(D)->cluster_dataset ] [363])) Batch_Mix_Correlations.cc:632 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:363 .omp_data_i_23(D)->cluster_dataset ] [363])
        (nil)))
(call_insn 227 226 228 10 (call (mem:QI (symbol_ref:DI ("_ZNK2H57DataSet4readEPvRKNS_8DataTypeERKNS_9DataSpaceES7_RKNS_19DSetMemXferPropListE") [flags 0x41]  <function_decl 0x2b94cbad9f00 read>) [0 read S1 A8])
        (const_int 0 [0])) Batch_Mix_Correlations.cc:632 665 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                                (nil))))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (nil))))))))
(insn 228 227 229 10 (set (reg/f:DI 0 ax [orig:139 D.158408 ] [139])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 160 [0xa0])) [0 .omp_data_i_23(D)->event_offset+0 S8 A64])) Batch_Mix_Correlations.cc:634 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 160 [0xa0])) [0 .omp_data_i_23(D)->event_offset+0 S8 A64])
        (nil)))
(insn 229 228 230 10 (set (mem/j:DI (reg/f:DI 0 ax [orig:139 D.158408 ] [139]) [0 *_114+0 S8 A64])
        (reg/v:DI 3 bx [orig:87 mix_event ] [87])) Batch_Mix_Correlations.cc:634 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:139 D.158408 ] [139])
        (expr_list:REG_DEAD (reg/v:DI 3 bx [orig:87 mix_event ] [87])
            (nil))))
(insn 230 229 231 10 (set (reg/f:DI 2 cx [orig:364 .omp_data_i_23(D)->event_offset ] [364])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 160 [0xa0])) [0 .omp_data_i_23(D)->event_offset+0 S8 A64])) Batch_Mix_Correlations.cc:635 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 160 [0xa0])) [0 .omp_data_i_23(D)->event_offset+0 S8 A64])
        (nil)))
(insn 231 230 232 10 (set (reg/f:DI 1 dx [orig:365 .omp_data_i_23(D)->event_count ] [365])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 168 [0xa8])) [0 .omp_data_i_23(D)->event_count+0 S8 A64])) Batch_Mix_Correlations.cc:635 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 168 [0xa8])) [0 .omp_data_i_23(D)->event_count+0 S8 A64])
        (nil)))
(insn 232 231 233 10 (set (reg/f:DI 5 di [orig:366 .omp_data_i_23(D)->event_dataspace ] [366])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 120 [0x78])) [0 .omp_data_i_23(D)->event_dataspace+0 S8 A64])) Batch_Mix_Correlations.cc:635 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 120 [0x78])) [0 .omp_data_i_23(D)->event_dataspace+0 S8 A64])
        (nil)))
(insn 233 232 234 10 (set (reg:DI 38 r9)
        (const_int 0 [0])) Batch_Mix_Correlations.cc:635 87 {*movdi_internal_rex64}
     (nil))
(insn 234 233 235 10 (set (reg:DI 37 r8)
        (const_int 0 [0])) Batch_Mix_Correlations.cc:635 87 {*movdi_internal_rex64}
     (nil))
(insn 235 234 236 10 (set (reg:DI 2 cx)
        (reg/f:DI 2 cx [orig:364 .omp_data_i_23(D)->event_offset ] [364])) Batch_Mix_Correlations.cc:635 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:364 .omp_data_i_23(D)->event_offset ] [364])
        (nil)))
(insn 236 235 237 10 (set (reg:DI 1 dx)
        (reg/f:DI 1 dx [orig:365 .omp_data_i_23(D)->event_count ] [365])) Batch_Mix_Correlations.cc:635 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:365 .omp_data_i_23(D)->event_count ] [365])
        (nil)))
(insn 237 236 238 10 (set (reg:SI 4 si)
        (const_int 0 [0])) Batch_Mix_Correlations.cc:635 89 {*movsi_internal}
     (nil))
(insn 238 237 239 10 (set (reg:DI 5 di)
        (reg/f:DI 5 di [orig:366 .omp_data_i_23(D)->event_dataspace ] [366])) Batch_Mix_Correlations.cc:635 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:366 .omp_data_i_23(D)->event_dataspace ] [366])
        (nil)))
(call_insn 239 238 240 10 (call (mem:QI (symbol_ref:DI ("_ZNK2H59DataSpace15selectHyperslabE13H5S_seloper_tPKyS3_S3_S3_") [flags 0x41]  <function_decl 0x2b94cb998a00 selectHyperslab>) [0 selectHyperslab S1 A8])
        (const_int 0 [0])) Batch_Mix_Correlations.cc:635 665 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:SI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                                (nil))))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (nil))))))))
(note 240 239 241 10 NOTE_INSN_DELETED)
(insn 241 240 242 10 (set (reg/f:DI 2 cx [orig:368 .omp_data_i_23(D)->event_memspace ] [368])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 192 [0xc0])) [0 .omp_data_i_23(D)->event_memspace+0 S8 A64])) Batch_Mix_Correlations.cc:636 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 192 [0xc0])) [0 .omp_data_i_23(D)->event_memspace+0 S8 A64])
        (nil)))
(insn 242 241 243 10 (set (reg/f:DI 5 di [orig:369 .omp_data_i_23(D)->event_dataset ] [369])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 112 [0x70])) [0 .omp_data_i_23(D)->event_dataset+0 S8 A64])) Batch_Mix_Correlations.cc:636 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 112 [0x70])) [0 .omp_data_i_23(D)->event_dataset+0 S8 A64])
        (nil)))
(insn 243 242 244 10 (set (reg:DI 38 r9)
        (symbol_ref:DI ("_ZN2H519DSetMemXferPropList7DEFAULTE") [flags 0x40]  <var_decl 0x2b94cba31558 DEFAULT>)) Batch_Mix_Correlations.cc:636 87 {*movdi_internal_rex64}
     (nil))
(insn 244 243 245 10 (set (reg:DI 37 r8)
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 120 [0x78])) [0 .omp_data_i_23(D)->event_dataspace+0 S8 A64])) Batch_Mix_Correlations.cc:636 87 {*movdi_internal_rex64}
     (nil))
(insn 245 244 246 10 (set (reg:DI 2 cx)
        (reg/f:DI 2 cx [orig:368 .omp_data_i_23(D)->event_memspace ] [368])) Batch_Mix_Correlations.cc:636 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 2 cx [orig:368 .omp_data_i_23(D)->event_memspace ] [368])
        (nil)))
(insn 246 245 247 10 (set (reg:DI 1 dx)
        (symbol_ref:DI ("_ZN2H58PredType12NATIVE_FLOATE") [flags 0x40]  <var_decl 0x2b94cba81688 NATIVE_FLOAT>)) Batch_Mix_Correlations.cc:636 87 {*movdi_internal_rex64}
     (nil))
(insn 247 246 248 10 (set (reg:DI 4 si)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 %sfp+-80 S8 A64])) Batch_Mix_Correlations.cc:636 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 350)
        (nil)))
(insn 248 247 249 10 (set (reg:DI 5 di)
        (reg/f:DI 5 di [orig:369 .omp_data_i_23(D)->event_dataset ] [369])) Batch_Mix_Correlations.cc:636 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:369 .omp_data_i_23(D)->event_dataset ] [369])
        (nil)))
(call_insn 249 248 250 10 (call (mem:QI (symbol_ref:DI ("_ZNK2H57DataSet4readEPvRKNS_8DataTypeERKNS_9DataSpaceES7_RKNS_19DSetMemXferPropListE") [flags 0x41]  <function_decl 0x2b94cbad9f00 read>) [0 read S1 A8])
        (const_int 0 [0])) Batch_Mix_Correlations.cc:636 665 {*call}
     (expr_list:REG_DEAD (reg:DI 38 r9)
        (expr_list:REG_DEAD (reg:DI 37 r8)
            (expr_list:REG_DEAD (reg:DI 5 di)
                (expr_list:REG_DEAD (reg:DI 4 si)
                    (expr_list:REG_DEAD (reg:DI 2 cx)
                        (expr_list:REG_DEAD (reg:DI 1 dx)
                            (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                                (nil))))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 38 r9))
                            (nil))))))))
(insn 250 249 251 10 (set (reg/f:DI 5 di [orig:370 .omp_data_i_23(D)->h5readlock ] [370])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 200 [0xc8])) [0 .omp_data_i_23(D)->h5readlock+0 S8 A64])) Batch_Mix_Correlations.cc:638 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 200 [0xc8])) [0 .omp_data_i_23(D)->h5readlock+0 S8 A64])
        (nil)))
(insn 251 250 252 10 (set (reg:DI 5 di)
        (reg/f:DI 5 di [orig:370 .omp_data_i_23(D)->h5readlock ] [370])) Batch_Mix_Correlations.cc:638 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:370 .omp_data_i_23(D)->h5readlock ] [370])
        (nil)))
(call_insn 252 251 254 10 (call (mem:QI (symbol_ref:DI ("omp_unset_lock") [flags 0x41]  <function_decl 0x2b94cbcf3400 omp_unset_lock>) [0 omp_unset_lock S1 A8])
        (const_int 0 [0])) Batch_Mix_Correlations.cc:638 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 254 252 255 10 (set (reg:SF 21 xmm0 [orig:148 D.158409 ] [148])
        (mem/j:SF (mult:DI (reg:DI 41 r12 [349])
                (const_int 4 [0x4])) [0 *event_data_out_private.66_90+0 S4 A32])) Batch_Mix_Correlations.cc:651 135 {*movsf_internal}
     (nil))
(debug_insn 255 254 256 10 (var_location:SF __x (reg:SF 21 xmm0 [orig:148 D.158409 ] [148])) Batch_Mix_Correlations.cc:651 -1
     (nil))
(insn 256 255 257 10 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:148 D.158409 ] [148])
            (reg:SF 21 xmm0 [orig:148 D.158409 ] [148]))) Batch_Mix_Correlations.cc:651 57 {*cmpiusf_sse}
     (nil))
(jump_insn 257 256 258 10 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) Batch_Mix_Correlations.cc:651 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
        (nil))
 -> 71)
;;  succ:       9 [10.0%] 
;;              11 [90.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12] 42 [r13] 43 [r14]

;; basic block 11, loop depth 0, count 0, freq 4000, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 [90.0%]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags] 22 [xmm1]
(note 258 257 259 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 260 11 (set (reg:SF 22 xmm1 [orig:149 D.158409 ] [149])
        (mem/j:SF (plus:DI (mult:DI (reg:DI 41 r12 [349])
                    (const_int 4 [0x4]))
                (const_int 4 [0x4])) [0 *event_data_out_private.66_90+4 S4 A32])) Batch_Mix_Correlations.cc:652 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:DI 41 r12 [349])
        (nil)))
(debug_insn 260 259 261 11 (var_location:SF __x (reg:SF 22 xmm1 [orig:149 D.158409 ] [149])) Batch_Mix_Correlations.cc:652 -1
     (nil))
(insn 261 260 262 11 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 22 xmm1 [orig:149 D.158409 ] [149])
            (reg:SF 22 xmm1 [orig:149 D.158409 ] [149]))) Batch_Mix_Correlations.cc:652 57 {*cmpiusf_sse}
     (nil))
(jump_insn 262 261 263 11 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) Batch_Mix_Correlations.cc:652 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 1000 [0x3e8])
        (nil))
 -> 71)
;;  succ:       9 [10.0%] 
;;              12 [90.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 42 [r13] 43 [r14]

;; basic block 12, loop depth 0, count 0, freq 3600, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 [90.0%]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 21 [xmm0] 43 [r14]
;; lr  def 	 0 [ax] 17 [flags] 21 [xmm0] 23 [xmm2]
(note 263 262 652 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(debug_insn 652 263 264 12 (var_location:DI D#67 (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
        (const_int 40 [0x28]))) -1
     (nil))
(debug_insn 264 652 265 12 (var_location:DF __x (minus:DF (mem/j:DF (plus:DI (mem/f/j:DI (debug_expr:DI D#67) [0 .omp_data_i_23(D)->primary_vertex+0 S8 A64])
                (const_int 16 [0x10])) [0 *_129+16 S8 A64])
        (float_extend:DF (reg:SF 21 xmm0 [orig:148 D.158409 ] [148])))) Batch_Mix_Correlations.cc:653 -1
     (nil))
(insn 265 264 266 12 (set (reg/f:DI 0 ax [orig:371 .omp_data_i_23(D)->primary_vertex ] [371])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 40 [0x28])) [0 .omp_data_i_23(D)->primary_vertex+0 S8 A64])) Batch_Mix_Correlations.cc:653 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 40 [0x28])) [0 .omp_data_i_23(D)->primary_vertex+0 S8 A64])
        (nil)))
(insn 266 265 267 12 (set (reg:DF 23 xmm2 [orig:372 D.158411 ] [372])
        (float_extend:DF (reg:SF 21 xmm0 [orig:148 D.158409 ] [148]))) Batch_Mix_Correlations.cc:653 159 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:148 D.158409 ] [148])
        (nil)))
(insn 267 266 268 12 (set (reg:DF 21 xmm0 [orig:374 *_129+16 ] [374])
        (mem/j:DF (plus:DI (reg/f:DI 0 ax [orig:371 .omp_data_i_23(D)->primary_vertex ] [371])
                (const_int 16 [0x10])) [0 *_129+16 S8 A64])) Batch_Mix_Correlations.cc:653 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:371 .omp_data_i_23(D)->primary_vertex ] [371])
        (nil)))
(insn 268 267 270 12 (set (reg:DF 21 xmm0 [orig:373 D.158411 ] [373])
        (minus:DF (reg:DF 21 xmm0 [orig:374 *_129+16 ] [374])
            (reg:DF 23 xmm2 [orig:372 D.158411 ] [372]))) Batch_Mix_Correlations.cc:653 794 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:374 *_129+16 ] [374])
        (expr_list:REG_DEAD (reg:DF 23 xmm2 [orig:372 D.158411 ] [372])
            (nil))))
(insn 270 268 271 12 (parallel [
            (set (reg:DF 21 xmm0 [orig:375 D.158411 ] [375])
                (abs:DF (reg:DF 21 xmm0 [orig:373 D.158411 ] [373])))
            (use (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0 S16 A128]))
            (clobber (reg:CC 17 flags))
        ]) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/cmath:82 480 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:373 D.158411 ] [373])
        (nil)))
(note 271 270 272 12 NOTE_INSN_DELETED)
(insn 272 271 273 12 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 21 xmm0 [orig:375 D.158411 ] [375])
            (mem/u/c:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0 S8 A64]))) Batch_Mix_Correlations.cc:653 58 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:375 D.158411 ] [375])
        (nil)))
(jump_insn 273 272 274 12 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) Batch_Mix_Correlations.cc:653 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 71)
;;  succ:       9 [50.0%] 
;;              13 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 42 [r13] 43 [r14]

;; basic block 13, loop depth 0, count 0, freq 1800, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 [50.0%]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 22 [xmm1] 43 [r14]
;; lr  def 	 17 [flags] 21 [xmm0]
(note 274 273 275 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(debug_insn 275 274 276 13 (var_location:SF __x (minus:SF (mem/j:SF (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 296 [0x128])) [0 .omp_data_i_23(D)->multiplicity_sum+0 S4 A64])
        (reg:SF 22 xmm1 [orig:149 D.158409 ] [149]))) Batch_Mix_Correlations.cc:654 -1
     (nil))
(insn 276 275 277 13 (set (reg:SF 21 xmm0 [orig:379 .omp_data_i_23(D)->multiplicity_sum ] [379])
        (mem/j:SF (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 296 [0x128])) [0 .omp_data_i_23(D)->multiplicity_sum+0 S4 A64])) Batch_Mix_Correlations.cc:654 135 {*movsf_internal}
     (expr_list:REG_EQUIV (mem/j:SF (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 296 [0x128])) [0 .omp_data_i_23(D)->multiplicity_sum+0 S4 A64])
        (nil)))
(insn 277 276 279 13 (set (reg:SF 21 xmm0 [orig:378 D.158409 ] [378])
        (minus:SF (reg:SF 21 xmm0 [orig:379 .omp_data_i_23(D)->multiplicity_sum ] [379])
            (reg:SF 22 xmm1 [orig:149 D.158409 ] [149]))) Batch_Mix_Correlations.cc:654 793 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:379 .omp_data_i_23(D)->multiplicity_sum ] [379])
        (expr_list:REG_DEAD (reg:SF 22 xmm1 [orig:149 D.158409 ] [149])
            (nil))))
(insn 279 277 280 13 (parallel [
            (set (reg:SF 21 xmm0 [orig:380 D.158409 ] [380])
                (abs:SF (reg:SF 21 xmm0 [orig:378 D.158409 ] [378])))
            (use (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0 S16 A128]))
            (clobber (reg:CC 17 flags))
        ]) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/cmath:88 479 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:378 D.158409 ] [378])
        (nil)))
(insn 280 279 281 13 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:380 D.158409 ] [380])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0 S4 A32]))) Batch_Mix_Correlations.cc:654 57 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:380 D.158409 ] [380])
        (nil)))
(jump_insn 281 280 282 13 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 71)
            (pc))) Batch_Mix_Correlations.cc:654 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 71)
;;  succ:       9 [50.0%] 
;;              14 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]

;; basic block 14, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 [50.0%]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
(note 282 281 283 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/j:QI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 308 [0x134])) [0 .omp_data_i_23(D)->first_cluster+0 S1 A32])
            (const_int 0 [0]))) Batch_Mix_Correlations.cc:655 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 284 283 699 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 625)
            (pc))) Batch_Mix_Correlations.cc:655 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 625)
;;  succ:       54 [50.0%] 
;;              15 [50.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]

;; basic block 15, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 [50.0%]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 699 284 700 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(jump_insn 700 699 701 15 (set (pc)
        (label_ref 628)) 659 {jump}
     (nil)
 -> 628)
;;  succ:       55 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]

(barrier 701 700 312)
;; basic block 16, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       55 [9.0%] 
;;              19 [100.0%]  (LOOP_EXIT)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 7 [sp]
(code_label 312 701 288 16 61 "" [2 uses])
(note 288 312 289 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 289 288 290 16 (clobber (mem:BLK (scratch) [0 A8])) -1
     (nil))
(insn 290 289 291 16 (clobber (mem:BLK (reg/f:DI 7 sp) [0 A8])) -1
     (nil))
(insn 291 290 702 16 (set (reg/f:DI 7 sp)
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [0 %sfp+-56 S8 A64])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 85 [ saved_stack.77 ])
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 702 291 703 16 (set (pc)
        (label_ref 76)) 659 {jump}
     (nil)
 -> 76)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]

(barrier 703 702 639)
;; basic block 17, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 [91.0%] 
;;              56 [100.0%] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 44 [r15]
;; lr  def 	 0 [ax] 17 [flags] 22 [xmm1] 41 [r12]
(code_label 639 703 295 17 84 "" [2 uses])
(note 295 639 296 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(debug_insn 296 295 776 17 (var_location:DI itrack (reg/v:DI 3 bx [orig:282 itrack ] [282])) -1
     (nil))
(insn 776 296 297 17 (set (reg:DI 0 ax [orig:382 D.158397 ] [382])
        (reg:DI 44 r15 [orig:163 D.158397 ] [163])) 87 {*movdi_internal_rex64}
     (nil))
(insn 297 776 777 17 (parallel [
            (set (reg:DI 0 ax [orig:382 D.158397 ] [382])
                (mult:DI (reg:DI 0 ax [orig:382 D.158397 ] [382])
                    (reg/v:DI 3 bx [orig:282 itrack ] [282])))
            (clobber (reg:CC 17 flags))
        ]) 354 {*muldi3_1}
     (nil))
(insn 777 297 298 17 (set (reg:DI 0 ax [orig:382 D.158397 ] [382])
        (reg:DI 0 ax [orig:382 D.158397 ] [382])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:382 D.158397 ] [382])
        (nil)))
(note 298 777 299 17 NOTE_INSN_DELETED)
(insn 299 298 300 17 (set (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
        (plus:DI (mult:DI (reg:DI 0 ax [orig:382 D.158397 ] [382])
                (const_int 4 [0x4]))
            (reg/f:DI 42 r13 [orig:101 track_data_out_private.64 ] [101]))) 267 {*leadi}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:382 D.158397 ] [382])
        (nil)))
(insn 300 299 301 17 (set (reg:SF 22 xmm1 [orig:164 D.158409 ] [164])
        (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
                (const_int 4 [0x4])) [0 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 4B]+0 S4 A32])) Batch_Mix_Correlations.cc:659 135 {*movsf_internal}
     (nil))
(debug_insn 301 300 302 17 (var_location:SF __x (reg:SF 22 xmm1 [orig:164 D.158409 ] [164])) Batch_Mix_Correlations.cc:659 -1
     (nil))
(insn 302 301 303 17 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 22 xmm1 [orig:164 D.158409 ] [164])
            (reg:SF 22 xmm1 [orig:164 D.158409 ] [164]))) Batch_Mix_Correlations.cc:659 57 {*cmpiusf_sse}
     (nil))
(jump_insn 303 302 319 17 (set (pc)
        (if_then_else (ordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 316)
            (pc))) Batch_Mix_Correlations.cc:659 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9000 [0x2328])
        (nil))
 -> 316)
;;  succ:       18 [10.0%]  (FALLTHRU)
;;              20 [90.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 18, loop depth 0, count 0, freq 9100, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [10.0%]  (FALLTHRU)
;;              20 [50.0%] 
;;              21 [50.0%] 
;;              22 [50.0%] 
;;              23 [50.0%] 
;;              24 [50.0%] 
;;              25 [71.0%] 
;;              29 [9.0%] 
;;              49 [100.0%] 
;;              26 [50.0%] 
;;              33 [100.0%]  (LOOP_EXIT)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags]
(code_label 319 303 304 18 62 "" [10 uses])
(note 304 319 305 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 307 18 (parallel [
            (set (reg/v:DI 3 bx [orig:282 itrack ] [282])
                (plus:DI (reg/v:DI 3 bx [orig:282 itrack ] [282])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:658 274 {*adddi_1}
     (nil))
(debug_insn 307 305 309 18 (var_location:DI itrack (reg/v:DI 3 bx [orig:282 itrack ] [282])) -1
     (nil))
(insn 309 307 310 18 (set (reg:DI 0 ax [orig:384 D.158414 ] [384])
        (zero_extend:DI (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 276 [0x114])) [0 .omp_data_i_23(D)->ntrack_max+0 S4 A32]))) Batch_Mix_Correlations.cc:658 139 {*zero_extendsidi2_rex64}
     (nil))
(insn 310 309 311 18 (set (reg:CC 17 flags)
        (compare:CC (reg:DI 0 ax [orig:384 D.158414 ] [384])
            (reg/v:DI 3 bx [orig:282 itrack ] [282]))) Batch_Mix_Correlations.cc:658 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:384 D.158414 ] [384])
        (nil)))
(jump_insn 311 310 704 18 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 639)
            (pc))) Batch_Mix_Correlations.cc:658 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 639)
;;  succ:       17 [91.0%] 
;;              19 [9.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 19, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 [9.0%]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 42 [r13] 43 [r14]
(note 704 311 733 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 733 704 734 19 (set (reg/v:DI 42 r13 [orig:63 imix ] [63])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 %sfp+-72 S8 A64])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v:DI 511 [orig:63 imix ] [63])
        (nil)))
(insn 734 733 705 19 (set (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
        (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
        (nil)))
(jump_insn 705 734 706 19 (set (pc)
        (label_ref 312)) 659 {jump}
     (nil)
 -> 312)
;;  succ:       16 [100.0%]  (LOOP_EXIT)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]

(barrier 706 705 316)
;; basic block 20, loop depth 0, count 0, freq 8190, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 [90.0%] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 17 [flags] 21 [xmm0] 23 [xmm2]
(code_label 316 706 317 20 59 "" [1 uses])
(note 317 316 318 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 318 317 320 20 (set (reg:DF 21 xmm0 [orig:166 D.158411 ] [166])
        (float_extend:DF (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
                    (const_int 16 [0x10])) [0 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 16B]+0 S4 A32]))) Batch_Mix_Correlations.cc:661 159 {*extendsfdf2_sse}
     (nil))
(note 320 318 778 20 NOTE_INSN_DELETED)
(insn 778 320 321 20 (set (reg:DF 23 xmm2 [orig:385 D.158411 ] [385])
        (reg:DF 21 xmm0 [orig:166 D.158411 ] [166])) Batch_Mix_Correlations.cc:661 133 {*movdf_internal_rex64}
     (nil))
(insn 321 778 779 20 (set (reg:DF 23 xmm2 [orig:385 D.158411 ] [385])
        (plus:DF (reg:DF 23 xmm2 [orig:385 D.158411 ] [385])
            (mem/u/c:DF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0 S8 A64]))) Batch_Mix_Correlations.cc:661 787 {*fop_df_comm_sse}
     (nil))
(insn 779 321 322 20 (set (reg:DF 23 xmm2 [orig:385 D.158411 ] [385])
        (reg:DF 23 xmm2 [orig:385 D.158411 ] [385])) Batch_Mix_Correlations.cc:661 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [orig:385 D.158411 ] [385])
        (nil)))
(insn 322 779 323 20 (set (reg:SI 0 ax [orig:387 D.158400 ] [387])
        (fix:SI (reg:DF 23 xmm2 [orig:385 D.158411 ] [385]))) Batch_Mix_Correlations.cc:661 179 {fix_truncdfsi_sse}
     (expr_list:REG_DEAD (reg:DF 23 xmm2 [orig:385 D.158411 ] [385])
        (nil)))
(note 323 322 324 20 NOTE_INSN_DELETED)
(insn 324 323 325 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (and:SI (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                        (const_int 264 [0x108])) [0 .omp_data_i_23(D)->Track_Cut_Bit+0 S4 A64])
                (reg:SI 0 ax [orig:387 D.158400 ] [387]))
            (const_int 0 [0]))) Batch_Mix_Correlations.cc:661 394 {*testsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:387 D.158400 ] [387])
        (nil)))
(jump_insn 325 324 326 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) Batch_Mix_Correlations.cc:661 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 319)
;;  succ:       18 [50.0%] 
;;              21 [50.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 21, loop depth 0, count 0, freq 4095, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 [50.0%]  (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 22 [xmm1]
;; lr  def 	 17 [flags] 23 [xmm2]
(note 326 325 327 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 327 326 328 21 (set (reg:SF 23 xmm2 [389])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0 S4 A32])) Batch_Mix_Correlations.cc:662 135 {*movsf_internal}
     (expr_list:REG_EQUIV (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 328 327 329 21 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 23 xmm2 [389])
            (reg:SF 22 xmm1 [orig:164 D.158409 ] [164]))) Batch_Mix_Correlations.cc:662 57 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 23 xmm2 [389])
        (nil)))
(jump_insn 329 328 330 21 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) Batch_Mix_Correlations.cc:662 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 319)
;;  succ:       18 [50.0%] 
;;              22 [50.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 22, loop depth 0, count 0, freq 2047, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [50.0%]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 22 [xmm1]
;; lr  def 	 17 [flags]
(note 330 329 331 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 331 330 332 22 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 22 xmm1 [orig:164 D.158409 ] [164])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0 S4 A32]))) Batch_Mix_Correlations.cc:663 57 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [orig:164 D.158409 ] [164])
        (nil)))
(jump_insn 332 331 333 22 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) Batch_Mix_Correlations.cc:663 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 319)
;;  succ:       18 [50.0%] 
;;              23 [50.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 23, loop depth 0, count 0, freq 1024, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 [50.0%]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 22 [xmm1]
(note 333 332 334 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(note 334 333 335 23 NOTE_INSN_DELETED)
(insn 335 334 780 23 (set (reg:SI 1 dx [orig:390 D.158400 ] [390])
        (fix:SI (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
                    (const_int 8 [0x8])) [0 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 8B]+0 S4 A32]))) Batch_Mix_Correlations.cc:664 177 {fix_truncsfsi_sse}
     (nil))
(insn 780 335 336 23 (set (reg:SI 0 ax [392])
        (reg:SI 1 dx [orig:390 D.158400 ] [390])) Batch_Mix_Correlations.cc:664 89 {*movsi_internal}
     (nil))
(insn 336 780 781 23 (parallel [
            (set (reg:SI 0 ax [392])
                (ashiftrt:SI (reg:SI 0 ax [392])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:664 548 {ashrsi3_cvt}
     (nil))
(insn 781 336 337 23 (set (reg:SI 0 ax [392])
        (reg:SI 0 ax [392])) Batch_Mix_Correlations.cc:664 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [392])
        (nil)))
(insn 337 781 338 23 (parallel [
            (set (reg:SI 1 dx [393])
                (xor:SI (reg:SI 1 dx [orig:390 D.158400 ] [390])
                    (reg:SI 0 ax [392])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:664 422 {*xorsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:390 D.158400 ] [390])
        (nil)))
(insn 338 337 339 23 (parallel [
            (set (reg:SI 1 dx [orig:394 D.158400 ] [394])
                (minus:SI (reg:SI 1 dx [393])
                    (reg:SI 0 ax [392])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:664 309 {*subsi_1}
     (expr_list:REG_DEAD (reg:SI 1 dx [393])
        (expr_list:REG_DEAD (reg:SI 0 ax [392])
            (nil))))
(insn 339 338 340 23 (set (reg:DF 22 xmm1 [orig:395 D.158411 ] [395])
        (float:DF (reg:SI 1 dx [orig:394 D.158400 ] [394]))) Batch_Mix_Correlations.cc:664 242 {*floatsidf2_sse_interunit}
     (expr_list:REG_DEAD (reg:SI 1 dx [orig:394 D.158400 ] [394])
        (nil)))
(note 340 339 341 23 NOTE_INSN_DELETED)
(insn 341 340 342 23 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 22 xmm1 [orig:395 D.158411 ] [395])
            (mem/u/c:DF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0 S8 A64]))) Batch_Mix_Correlations.cc:664 58 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:395 D.158411 ] [395])
        (nil)))
(jump_insn 342 341 343 23 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) Batch_Mix_Correlations.cc:664 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 319)
;;  succ:       18 [50.0%] 
;;              24 [50.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 24, loop depth 0, count 0, freq 512, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23 [50.0%]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 17 [flags] 22 [xmm1] 23 [xmm2]
(note 343 342 344 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 345 24 (set (reg:SF 22 xmm1 [orig:175 D.158409 ] [175])
        (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
                (const_int 28 [0x1c])) [0 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 28B]+0 S4 A32])) Batch_Mix_Correlations.cc:665 135 {*movsf_internal}
     (nil))
(insn 345 344 346 24 (set (reg:SF 23 xmm2 [397])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0 S4 A32])) Batch_Mix_Correlations.cc:665 135 {*movsf_internal}
     (expr_list:REG_EQUIV (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 346 345 347 24 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 23 xmm2 [397])
            (reg:SF 22 xmm1 [orig:175 D.158409 ] [175]))) Batch_Mix_Correlations.cc:665 57 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 23 xmm2 [397])
        (nil)))
(jump_insn 347 346 348 24 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) Batch_Mix_Correlations.cc:665 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 319)
;;  succ:       18 [50.0%] 
;;              25 [50.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 25, loop depth 0, count 0, freq 256, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24 [50.0%]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 22 [xmm1] 41 [r12]
;; lr  def 	 17 [flags] 22 [xmm1] 23 [xmm2]
(note 348 347 349 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 349 348 782 25 (set (reg:SF 23 xmm2 [orig:399 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 32B] ] [399])
        (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
                (const_int 32 [0x20])) [0 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 32B]+0 S4 A32])) Batch_Mix_Correlations.cc:666 135 {*movsf_internal}
     (expr_list:REG_EQUIV (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
                (const_int 32 [0x20])) [0 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 32B]+0 S4 A32])
        (nil)))
(insn 782 349 350 25 (set (reg:SF 23 xmm2 [orig:398 D.158409 ] [398])
        (reg:SF 23 xmm2 [orig:399 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 32B] ] [399])) Batch_Mix_Correlations.cc:666 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 23 xmm2 [orig:399 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 32B] ] [399])
        (nil)))
(insn 350 782 783 25 (set (reg:SF 23 xmm2 [orig:398 D.158409 ] [398])
        (div:SF (reg:SF 23 xmm2 [orig:398 D.158409 ] [398])
            (reg:SF 22 xmm1 [orig:175 D.158409 ] [175]))) Batch_Mix_Correlations.cc:666 793 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [orig:175 D.158409 ] [175])
        (nil)))
(insn 783 350 351 25 (set (reg:SF 22 xmm1 [orig:398 D.158409 ] [398])
        (reg:SF 23 xmm2 [orig:398 D.158409 ] [398])) Batch_Mix_Correlations.cc:666 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 23 xmm2 [orig:398 D.158409 ] [398])
        (nil)))
(insn 351 783 352 25 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 22 xmm1 [orig:398 D.158409 ] [398])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0 S4 A32]))) Batch_Mix_Correlations.cc:666 57 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [orig:398 D.158409 ] [398])
        (nil)))
(jump_insn 352 351 353 25 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) Batch_Mix_Correlations.cc:666 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 319)
;;  succ:       18 [71.0%] 
;;              26 [29.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 26, loop depth 0, count 0, freq 74, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 [29.0%]  (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 21 [xmm0] 41 [r12]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 353 352 354 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(debug_insn 354 353 355 26 (var_location:SF d (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
            (const_int 36 [0x24])) [0 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 36B]+0 S4 A32])) Batch_Mix_Correlations.cc:667 -1
     (nil))
(debug_insn 355 354 356 26 (var_location:SF __x (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
            (const_int 36 [0x24])) [0 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 36B]+0 S4 A32])) -1
     (nil))
(insn 356 355 358 26 (set (reg:SF 22 xmm1 [orig:401 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 36B] ] [401])
        (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
                (const_int 36 [0x24])) [0 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 36B]+0 S4 A32])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/cmath:88 135 {*movsf_internal}
     (expr_list:REG_EQUIV (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
                (const_int 36 [0x24])) [0 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 36B]+0 S4 A32])
        (nil)))
(insn 358 356 359 26 (parallel [
            (set (reg:SF 22 xmm1 [orig:400 D.158409 ] [400])
                (abs:SF (reg:SF 22 xmm1 [orig:401 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 36B] ] [401])))
            (use (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0 S16 A128]))
            (clobber (reg:CC 17 flags))
        ]) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/cmath:88 479 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [orig:401 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 36B] ] [401])
        (nil)))
(insn 359 358 784 26 (set (reg:DF 26 xmm5 [orig:179 D.158411 ] [179])
        (float_extend:DF (reg:SF 22 xmm1 [orig:400 D.158409 ] [400]))) Batch_Mix_Correlations.cc:667 159 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [orig:400 D.158409 ] [400])
        (nil)))
(insn 784 359 824 26 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 %sfp+-88 S8 A64])
        (reg:DF 26 xmm5 [orig:179 D.158411 ] [179])) Batch_Mix_Correlations.cc:667 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 26 xmm5 [orig:179 D.158411 ] [179])
        (nil)))
(note 824 784 360 26 NOTE_INSN_DELETED)
(debug_insn 360 824 361 26 (var_location:DF x (reg:DF 21 xmm0 [orig:166 D.158411 ] [166])) Batch_Mix_Correlations.cc:667 -1
     (nil))
(debug_insn 361 360 362 26 (var_location:DF y (const_double:DF 1.3000000000000000444089209850062616169452667236328125e+0 [0x0.a6666666666668p+1])) Batch_Mix_Correlations.cc:667 -1
     (nil))
(note 362 361 363 26 NOTE_INSN_DELETED)
(insn 363 362 364 26 (set (reg:DF 22 xmm1)
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0 S8 A64])) /usr/common/usg/software/ROOT/6.08.00/include/root/TMath.h:515 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUAL (const_double:DF 1.3000000000000000444089209850062616169452667236328125e+0 [0x0.a6666666666668p+1])
        (nil)))
(insn 364 363 365 26 (set (reg:DF 21 xmm0)
        (reg:DF 21 xmm0 [orig:166 D.158411 ] [166])) /usr/common/usg/software/ROOT/6.08.00/include/root/TMath.h:515 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:166 D.158411 ] [166])
        (nil)))
(call_insn 365 364 366 26 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("pow") [flags 0x41]  <function_decl 0x2b94c3a68a00 pow>) [0 __builtin_pow S1 A8])
            (const_int 0 [0]))) /usr/common/usg/software/ROOT/6.08.00/include/root/TMath.h:515 672 {*call_value}
     (expr_list:REG_DEAD (reg:DF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (expr_list:DF (use (reg:DF 22 xmm1))
            (nil))))
(insn 366 365 369 26 (set (reg:DF 21 xmm0 [404])
        (reg:DF 21 xmm0)) /usr/common/usg/software/ROOT/6.08.00/include/root/TMath.h:515 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(insn 369 366 785 26 (set (reg:DF 22 xmm1 [407])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0 S8 A64])) Batch_Mix_Correlations.cc:667 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUIV (const_double:DF 3.1500000000000000222044604925031308084726333618164062e-2 [0x0.810624dd2f1aap-4])
        (nil)))
(insn 785 369 370 26 (set (reg:DF 22 xmm1 [orig:406 D.158411 ] [406])
        (reg:DF 22 xmm1 [407])) Batch_Mix_Correlations.cc:667 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [407])
        (nil)))
(insn 370 785 786 26 (set (reg:DF 22 xmm1 [orig:406 D.158411 ] [406])
        (div:DF (reg:DF 22 xmm1 [orig:406 D.158411 ] [406])
            (reg:DF 21 xmm0 [404]))) Batch_Mix_Correlations.cc:667 794 {*fop_df_1_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [404])
        (nil)))
(insn 786 370 371 26 (set (reg:DF 21 xmm0 [orig:406 D.158411 ] [406])
        (reg:DF 22 xmm1 [orig:406 D.158411 ] [406])) Batch_Mix_Correlations.cc:667 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:406 D.158411 ] [406])
        (nil)))
(note 371 786 372 26 NOTE_INSN_DELETED)
(insn 372 371 373 26 (set (reg:DF 21 xmm0 [orig:408 D.158411 ] [408])
        (plus:DF (reg:DF 21 xmm0 [orig:406 D.158411 ] [406])
            (mem/u/c:DF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0 S8 A64]))) Batch_Mix_Correlations.cc:667 787 {*fop_df_comm_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:406 D.158411 ] [406])
        (nil)))
(insn 373 372 374 26 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 21 xmm0 [orig:408 D.158411 ] [408])
            (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -88 [0xffffffffffffffa8])) [0 %sfp+-88 S8 A64]))) Batch_Mix_Correlations.cc:667 58 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:408 D.158411 ] [408])
        (expr_list:REG_DEAD (reg:DF 179 [ D.158411 ])
            (nil))))
(jump_insn 374 373 378 26 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 319)
            (pc))) Batch_Mix_Correlations.cc:667 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 319)
;;  succ:       27 [50.0%]  (FALLTHRU)
;;              18 [50.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 27, loop depth 0, count 0, freq 37, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 [50.0%]  (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
(note 378 374 379 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(debug_insn 379 378 380 27 (var_location:DF dRmin (const_double:DF 2.0000000000000000416333634234433702658861875534057617e-2 [0x0.a3d70a3d70a3d8p-5])) Batch_Mix_Correlations.cc:669 -1
     (nil))
(debug_insn 380 379 381 27 (var_location:QI MixTrack_HasMatch (const_int 0 [0])) Batch_Mix_Correlations.cc:671 -1
     (nil))
(debug_insn 381 380 382 27 (var_location:SI l (const_int 0 [0])) Batch_Mix_Correlations.cc:672 -1
     (nil))
(insn 382 381 383 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 284 [0x11c])) [0 .omp_data_i_23(D)->ncluster_max+0 S4 A32])
            (const_int 0 [0]))) Batch_Mix_Correlations.cc:672 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 383 382 588 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 584)
            (pc))) Batch_Mix_Correlations.cc:672 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 584)
;;  succ:       51 [50.0%] 
;;              28 [50.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 28, loop depth 0, count 0, freq 37, maybe hot
;;  prev block 27, next block 29, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       51 [21.4%] 
;;              52 [100.0%] 
;;              27 [50.0%]  (FALLTHRU)
;;              53 [100.0%] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 588 383 384 28 81 "" [3 uses])
(note 384 588 385 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 385 384 787 28 (set (reg:SF 28 xmm7 [orig:197 D.158409 ] [197])
        (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
                (const_int 4 [0x4])) [0 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 4B]+0 S4 A32])) Batch_Mix_Correlations.cc:683 135 {*movsf_internal}
     (nil))
(insn 787 385 386 28 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 %sfp+-88 S4 A64])
        (reg:SF 28 xmm7 [orig:197 D.158409 ] [197])) Batch_Mix_Correlations.cc:683 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 28 xmm7 [orig:197 D.158409 ] [197])
        (nil)))
(insn 386 787 387 28 (set (reg:DI 0 ax [orig:199 D.158414 ] [199])
        (mem/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 208 [0xd0])) [0 .omp_data_i_23(D)->n+0 S8 A64])) Batch_Mix_Correlations.cc:683 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 208 [0xd0])) [0 .omp_data_i_23(D)->n+0 S8 A64])
        (nil)))
(insn 387 386 388 28 (set (reg/f:DI 1 dx [orig:410 .omp_data_i_23(D)->cluster_pt ] [410])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 48 [0x30])) [0 .omp_data_i_23(D)->cluster_pt+0 S8 A64])) Batch_Mix_Correlations.cc:683 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 48 [0x30])) [0 .omp_data_i_23(D)->cluster_pt+0 S8 A64])
        (nil)))
(insn 388 387 788 28 (set (reg:SF 24 xmm3 [orig:200 D.158409 ] [200])
        (mem/j:SF (plus:DI (mult:DI (reg:DI 0 ax [orig:199 D.158414 ] [199])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [orig:410 .omp_data_i_23(D)->cluster_pt ] [410])) [0 *_189 S4 A32])) Batch_Mix_Correlations.cc:683 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:410 .omp_data_i_23(D)->cluster_pt ] [410])
        (nil)))
(insn 788 388 389 28 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [0 %sfp+-176 S4 A64])
        (reg:SF 24 xmm3 [orig:200 D.158409 ] [200])) Batch_Mix_Correlations.cc:683 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 24 xmm3 [orig:200 D.158409 ] [200])
        (nil)))
(debug_insn 389 788 390 28 (var_location:SF D#62 (div:SF (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 %sfp+-88 S4 A64])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [0 %sfp+-176 S4 A64]))) Batch_Mix_Correlations.cc:683 -1
     (nil))
(debug_insn 390 389 391 28 (var_location:DF zt (float_extend:DF (debug_expr:SF D#62))) Batch_Mix_Correlations.cc:683 -1
     (nil))
(insn 391 390 392 28 (set (reg/f:DI 1 dx [orig:411 .omp_data_i_23(D)->cluster_phi ] [411])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 64 [0x40])) [0 .omp_data_i_23(D)->cluster_phi+0 S8 A64])) Batch_Mix_Correlations.cc:684 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 64 [0x40])) [0 .omp_data_i_23(D)->cluster_phi+0 S8 A64])
        (nil)))
(insn 392 391 393 28 (set (reg:SF 21 xmm0 [413])
        (mem/j:SF (plus:DI (mult:DI (reg:DI 0 ax [orig:199 D.158414 ] [199])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [orig:411 .omp_data_i_23(D)->cluster_phi ] [411])) [0 *_194 S4 A32])) Batch_Mix_Correlations.cc:684 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:411 .omp_data_i_23(D)->cluster_phi ] [411])
        (expr_list:REG_DEAD (reg:DI 0 ax [orig:199 D.158414 ] [199])
            (nil))))
(insn 393 392 394 28 (set (reg:SF 21 xmm0 [orig:412 D.158409 ] [412])
        (minus:SF (reg:SF 21 xmm0 [413])
            (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
                    (const_int 12 [0xc])) [0 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 12B]+0 S4 A32]))) Batch_Mix_Correlations.cc:684 793 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [413])
        (nil)))
(insn 394 393 395 28 (set (reg:DF 21 xmm0 [orig:414 D.158411 ] [414])
        (float_extend:DF (reg:SF 21 xmm0 [orig:412 D.158409 ] [412]))) Batch_Mix_Correlations.cc:684 159 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:412 D.158409 ] [412])
        (nil)))
(insn 395 394 396 28 (set (reg:DF 21 xmm0)
        (reg:DF 21 xmm0 [orig:414 D.158411 ] [414])) Batch_Mix_Correlations.cc:684 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:414 D.158411 ] [414])
        (nil)))
(call_insn 396 395 397 28 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("_ZN8TVector210Phi_mpi_piEd") [flags 0x41]  <function_decl 0x2b94ca29b100 Phi_mpi_pi>) [0 Phi_mpi_pi S1 A8])
            (const_int 0 [0]))) Batch_Mix_Correlations.cc:684 672 {*call_value}
     (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
        (nil))
    (expr_list:DF (use (reg:DF 21 xmm0))
        (nil)))
(insn 397 396 398 28 (set (reg:DF 21 xmm0 [orig:208 D.158411 ] [208])
        (reg:DF 21 xmm0)) Batch_Mix_Correlations.cc:684 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0)
        (nil)))
(debug_insn 398 397 399 28 (var_location:DF d (reg:DF 21 xmm0 [orig:208 D.158411 ] [208])) Batch_Mix_Correlations.cc:684 -1
     (nil))
(debug_insn 399 398 400 28 (var_location:DF __x (reg:DF 21 xmm0 [orig:208 D.158411 ] [208])) -1
     (nil))
(insn 400 399 401 28 (set (reg:V2DF 22 xmm1 [416])
        (mem/u/c:V2DF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0 S16 A128])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/cmath:82 1159 {*movv2df_internal}
     (expr_list:REG_EQUIV (const_vector:V2DF [
                (const_double:DF +QNaN [+QNaN])
                (const_double:DF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 401 400 402 28 (parallel [
            (set (reg:DF 21 xmm0 [orig:415 D.158411 ] [415])
                (abs:DF (reg:DF 21 xmm0 [orig:208 D.158411 ] [208])))
            (use (reg:V2DF 22 xmm1 [416]))
            (clobber (reg:CC 17 flags))
        ]) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/cmath:82 480 {*absnegdf2_sse}
     (expr_list:REG_DEAD (reg:V2DF 22 xmm1 [416])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:208 D.158411 ] [208])
            (nil))))
(insn 402 401 789 28 (set (reg/v:SF 27 xmm6 [orig:209 DeltaPhi ] [209])
        (float_truncate:SF (reg:DF 21 xmm0 [orig:415 D.158411 ] [415]))) Batch_Mix_Correlations.cc:684 164 {*truncdfsf_fast_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:415 D.158411 ] [415])
        (nil)))
(insn 789 402 825 28 (set (reg/v:SF 27 xmm6 [orig:209 DeltaPhi ] [209])
        (reg/v:SF 27 xmm6 [orig:209 DeltaPhi ] [209])) Batch_Mix_Correlations.cc:684 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 27 xmm6 [orig:209 DeltaPhi ] [209])
        (nil)))
(insn 825 789 403 28 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [0 %sfp+-168 S4 A32])
        (reg/v:SF 27 xmm6 [orig:209 DeltaPhi ] [209])) Batch_Mix_Correlations.cc:684 135 {*movsf_internal}
     (nil))
(debug_insn 403 825 404 28 (var_location:SF DeltaPhi (reg/v:SF 27 xmm6 [orig:209 DeltaPhi ] [209])) Batch_Mix_Correlations.cc:684 -1
     (nil))
(insn 404 403 405 28 (set (reg/f:DI 0 ax [orig:417 .omp_data_i_23(D)->cluster_eta ] [417])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 56 [0x38])) [0 .omp_data_i_23(D)->cluster_eta+0 S8 A64])) Batch_Mix_Correlations.cc:685 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 56 [0x38])) [0 .omp_data_i_23(D)->cluster_eta+0 S8 A64])
        (nil)))
(insn 405 404 406 28 (set (reg:DI 1 dx [orig:418 .omp_data_i_23(D)->n ] [418])
        (mem/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 208 [0xd0])) [0 .omp_data_i_23(D)->n+0 S8 A64])) Batch_Mix_Correlations.cc:685 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 208 [0xd0])) [0 .omp_data_i_23(D)->n+0 S8 A64])
        (nil)))
(insn 406 405 790 28 (set (reg:SF 21 xmm0 [419])
        (mem/j:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:418 .omp_data_i_23(D)->n ] [418])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [orig:417 .omp_data_i_23(D)->cluster_eta ] [417])) [0 *_202 S4 A32])) Batch_Mix_Correlations.cc:685 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:418 .omp_data_i_23(D)->n ] [418])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:417 .omp_data_i_23(D)->cluster_eta ] [417])
            (nil))))
(insn 790 406 407 28 (set (reg/v:SF 21 xmm0 [orig:214 DeltaEta ] [214])
        (reg:SF 21 xmm0 [419])) Batch_Mix_Correlations.cc:685 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [419])
        (nil)))
(insn 407 790 791 28 (set (reg/v:SF 21 xmm0 [orig:214 DeltaEta ] [214])
        (minus:SF (reg/v:SF 21 xmm0 [orig:214 DeltaEta ] [214])
            (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
                    (const_int 8 [0x8])) [0 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 8B]+0 S4 A32]))) Batch_Mix_Correlations.cc:685 793 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
        (nil)))
(insn 791 407 408 28 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -164 [0xffffffffffffff5c])) [0 %sfp+-164 S4 A32])
        (reg/v:SF 21 xmm0 [orig:214 DeltaEta ] [214])) Batch_Mix_Correlations.cc:685 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 21 xmm0 [orig:214 DeltaEta ] [214])
        (nil)))
(debug_insn 408 791 409 28 (var_location:SF DeltaEta (mem/c:SF (plus:DI (reg/f:DI 6 bp)
            (const_int -164 [0xffffffffffffff5c])) [0 %sfp+-164 S4 A32])) Batch_Mix_Correlations.cc:685 -1
     (nil))
(debug_insn 409 408 410 28 (var_location:SF d (reg/v:SF 27 xmm6 [orig:209 DeltaPhi ] [209])) Batch_Mix_Correlations.cc:685 -1
     (nil))
(debug_insn 410 409 411 28 (var_location:SF __x (reg/v:SF 27 xmm6 [orig:209 DeltaPhi ] [209])) -1
     (nil))
(insn 411 410 792 28 (set (reg:V4SF 21 xmm0 [421])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0 S16 A128])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/cmath:88 1157 {*movv4sf_internal}
     (expr_list:REG_EQUIV (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 792 411 412 28 (set (reg/v:SF 27 xmm6 [orig:209 DeltaPhi ] [209])
        (reg/v:SF 27 xmm6 [orig:209 DeltaPhi ] [209])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/cmath:88 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/v:SF 27 xmm6 [orig:209 DeltaPhi ] [209])
        (nil)))
(insn 412 792 413 28 (parallel [
            (set (reg:SF 21 xmm0 [orig:420 D.158409 ] [420])
                (abs:SF (reg/v:SF 27 xmm6 [orig:209 DeltaPhi ] [209])))
            (use (reg:V4SF 21 xmm0 [421]))
            (clobber (reg:CC 17 flags))
        ]) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/cmath:88 479 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg/v:SF 27 xmm6 [orig:209 DeltaPhi ] [209])
        (expr_list:REG_DEAD (reg:V4SF 21 xmm0 [421])
            (nil))))
(insn 413 412 414 28 (set (reg:DF 21 xmm0 [orig:422 D.158411 ] [422])
        (float_extend:DF (reg:SF 21 xmm0 [orig:420 D.158409 ] [420]))) Batch_Mix_Correlations.cc:686 159 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:420 D.158409 ] [420])
        (nil)))
(insn 414 413 415 28 (set (reg:DF 22 xmm1 [423])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0 S8 A64])) Batch_Mix_Correlations.cc:686 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUIV (const_double:DF 5.0000000000000001040834085586084256647154688835144043e-3 [0x0.a3d70a3d70a3d8p-7])
        (nil)))
(insn 415 414 416 28 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 22 xmm1 [423])
            (reg:DF 21 xmm0 [orig:422 D.158411 ] [422]))) Batch_Mix_Correlations.cc:686 58 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [423])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:422 D.158411 ] [422])
            (nil))))
(jump_insn 416 415 580 28 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 570)
            (pc))) Batch_Mix_Correlations.cc:686 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 570)
;;  succ:       49 [50.0%] 
;;              29 [50.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 29, loop depth 0, count 0, freq 18, maybe hot
;;  prev block 28, next block 30, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28 [50.0%]  (FALLTHRU)
;;              50 [100.0%] 
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
(code_label 580 416 417 29 80 "" [1 uses])
(note 417 580 418 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(debug_insn 418 417 419 29 (var_location:SI ipt (const_int 0 [0])) -1
     (nil))
(insn 419 418 420 29 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 272 [0x110])) [0 .omp_data_i_23(D)->nptbins+0 S4 A64])
            (const_int 0 [0]))) Batch_Mix_Correlations.cc:688 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 420 419 421 29 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) Batch_Mix_Correlations.cc:688 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 319)
;;  succ:       30 [91.0%]  (FALLTHRU)
;;              18 [9.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 30, loop depth 0, count 0, freq 16, maybe hot
;;  prev block 29, next block 31, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       29 [91.0%]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 0 [ax] 3 [bx] 21 [xmm0] 28 [xmm7] 42 [r13] 43 [r14] 44 [r15]
(note 421 420 793 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 793 421 422 30 (set (reg:SF 21 xmm0 [orig:424 D.158409 ] [424])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 %sfp+-88 S4 A64])) Batch_Mix_Correlations.cc:683 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 197 [ D.158409 ])
        (nil)))
(insn 422 793 794 30 (set (reg:SF 21 xmm0 [orig:424 D.158409 ] [424])
        (div:SF (reg:SF 21 xmm0 [orig:424 D.158409 ] [424])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -176 [0xffffffffffffff50])) [0 %sfp+-176 S4 A64]))) Batch_Mix_Correlations.cc:683 793 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 200 [ D.158409 ])
        (nil)))
(insn 794 422 423 30 (set (reg:SF 21 xmm0 [orig:424 D.158409 ] [424])
        (reg:SF 21 xmm0 [orig:424 D.158409 ] [424])) Batch_Mix_Correlations.cc:683 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:424 D.158409 ] [424])
        (nil)))
(insn 423 794 795 30 (set (reg/v:DF 28 xmm7 [orig:202 zt ] [202])
        (float_extend:DF (reg:SF 21 xmm0 [orig:424 D.158409 ] [424]))) Batch_Mix_Correlations.cc:683 159 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:424 D.158409 ] [424])
        (nil)))
(insn 795 423 8 30 (set (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 %sfp+-88 S8 A64])
        (reg/v:DF 28 xmm7 [orig:202 zt ] [202])) Batch_Mix_Correlations.cc:683 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg/v:DF 28 xmm7 [orig:202 zt ] [202])
        (nil)))
(insn 8 795 826 30 (set (reg/v:SI 0 ax [orig:281 ipt ] [281])
        (const_int 0 [0])) Batch_Mix_Correlations.cc:683 89 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(note 826 8 735 30 NOTE_INSN_DELETED)
(insn 735 826 736 30 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [0 %sfp+-176 S8 A64])
        (reg/f:DI 42 r13 [orig:101 track_data_out_private.64 ] [101])) Batch_Mix_Correlations.cc:683 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 42 r13 [orig:101 track_data_out_private.64 ] [101])
        (nil)))
(insn 736 735 737 30 (set (reg:DI 44 r15 [orig:163 D.158397 ] [163])
        (reg:DI 44 r15 [orig:163 D.158397 ] [163])) Batch_Mix_Correlations.cc:683 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:163 D.158397 ] [163])
        (nil)))
(insn 737 736 738 30 (set (reg/v:SI 42 r13 [orig:281 ipt ] [281])
        (reg/v:SI 0 ax [orig:281 ipt ] [281])) Batch_Mix_Correlations.cc:683 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:281 ipt ] [281])
        (nil)))
(insn 738 737 739 30 (set (reg/v:DI 3 bx [orig:282 itrack ] [282])
        (reg/v:DI 3 bx [orig:282 itrack ] [282])) Batch_Mix_Correlations.cc:683 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v:DI 3 bx [orig:282 itrack ] [282])
        (nil)))
(insn 739 738 441 30 (set (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
        (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])) Batch_Mix_Correlations.cc:683 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
        (nil)))
;;  succ:       31 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 31, loop depth 0, count 0, freq 188, maybe hot
;;  prev block 30, next block 32, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       32 [91.0%] 
;;              30 [100.0%]  (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(code_label 441 739 424 31 67 "" [1 uses])
(note 424 441 425 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(debug_insn 425 424 426 31 (var_location:SI ipt (reg/v:SI 42 r13 [orig:281 ipt ] [281])) -1
     (nil))
(insn 426 425 427 31 (set (reg/f:DI 0 ax [orig:425 .omp_data_i_23(D)->cluster_pt ] [425])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 48 [0x30])) [0 .omp_data_i_23(D)->cluster_pt+0 S8 A64])) Batch_Mix_Correlations.cc:689 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 48 [0x30])) [0 .omp_data_i_23(D)->cluster_pt+0 S8 A64])
        (nil)))
(insn 427 426 428 31 (set (reg:DI 1 dx [orig:426 .omp_data_i_23(D)->n ] [426])
        (mem/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 208 [0xd0])) [0 .omp_data_i_23(D)->n+0 S8 A64])) Batch_Mix_Correlations.cc:689 87 {*movdi_internal_rex64}
     (expr_list:REG_EQUIV (mem/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 208 [0xd0])) [0 .omp_data_i_23(D)->n+0 S8 A64])
        (nil)))
(insn 428 427 429 31 (set (reg:SF 21 xmm0 [orig:220 D.158409 ] [220])
        (mem/j:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:426 .omp_data_i_23(D)->n ] [426])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [orig:425 .omp_data_i_23(D)->cluster_pt ] [425])) [0 *_210 S4 A32])) Batch_Mix_Correlations.cc:689 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [orig:426 .omp_data_i_23(D)->n ] [426])
        (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:425 .omp_data_i_23(D)->cluster_pt ] [425])
            (nil))))
(insn 429 428 430 31 (set (reg:DI 0 ax [orig:427 D.158398 ] [427])
        (sign_extend:DI (reg/v:SI 42 r13 [orig:281 ipt ] [281]))) Batch_Mix_Correlations.cc:689 149 {*extendsidi2_rex64}
     (nil))
(insn 430 429 431 31 (parallel [
            (set (reg:DI 2 cx [orig:222 D.158398 ] [222])
                (ashift:DI (reg:DI 0 ax [orig:427 D.158398 ] [427])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:689 522 {*ashldi3_1}
     (nil))
(insn 431 430 432 31 (set (reg/f:DI 1 dx [orig:223 D.158416 ] [223])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 32 [0x20])) [0 .omp_data_i_23(D)->ptbins+0 S8 A64])) Batch_Mix_Correlations.cc:689 87 {*movdi_internal_rex64}
     (nil))
(insn 432 431 433 31 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:220 D.158409 ] [220])
            (mem:SF (plus:DI (mult:DI (reg:DI 0 ax [orig:427 D.158398 ] [427])
                        (const_int 4 [0x4]))
                    (reg/f:DI 1 dx [orig:223 D.158416 ] [223])) [0 *_216+0 S4 A32]))) Batch_Mix_Correlations.cc:689 57 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:427 D.158398 ] [427])
        (nil)))
(jump_insn 433 432 446 31 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 444)
            (pc))) Batch_Mix_Correlations.cc:689 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 444)
;;  succ:       34 [50.0%] 
;;              32 [50.0%]  (FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 42 [r13] 43 [r14] 44 [r15]

;; basic block 32, loop depth 0, count 0, freq 188, maybe hot
;;  prev block 31, next block 33, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31 [50.0%]  (FALLTHRU)
;;              35 [9.0%] 
;;              34 [50.0%] 
;;              39 [100.0%]  (LOOP_EXIT)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 17 [flags] 42 [r13]
(code_label 446 433 434 32 68 "" [3 uses])
(note 434 446 435 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 435 434 437 32 (parallel [
            (set (reg/v:SI 42 r13 [orig:281 ipt ] [281])
                (plus:SI (reg/v:SI 42 r13 [orig:281 ipt ] [281])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:688 273 {*addsi_1}
     (nil))
(debug_insn 437 435 438 32 (var_location:SI ipt (reg/v:SI 42 r13 [orig:281 ipt ] [281])) -1
     (nil))
(insn 438 437 439 32 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 272 [0x110])) [0 .omp_data_i_23(D)->nptbins+0 S4 A64])
            (reg/v:SI 42 r13 [orig:281 ipt ] [281]))) Batch_Mix_Correlations.cc:688 7 {*cmpsi_1}
     (nil))
(jump_insn 439 438 707 32 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 441)
            (pc))) Batch_Mix_Correlations.cc:688 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 441)
;;  succ:       31 [91.0%] 
;;              33 [9.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 33, loop depth 0, count 0, freq 17, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32 [9.0%]  (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 43 [r14] 44 [r15]
;; lr  def 	 3 [bx] 42 [r13] 43 [r14] 44 [r15]
(note 707 439 740 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 740 707 741 33 (set (reg/f:DI 42 r13 [orig:101 track_data_out_private.64 ] [101])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [0 %sfp+-176 S8 A64])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 516 [orig:101 track_data_out_private.64 ] [101])
        (nil)))
(insn 741 740 742 33 (set (reg:DI 44 r15 [orig:163 D.158397 ] [163])
        (reg:DI 44 r15 [orig:163 D.158397 ] [163])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:163 D.158397 ] [163])
        (nil)))
(insn 742 741 743 33 (set (reg/v:DI 3 bx [orig:282 itrack ] [282])
        (reg/v:DI 3 bx [orig:282 itrack ] [282])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v:DI 3 bx [orig:282 itrack ] [282])
        (nil)))
(insn 743 742 708 33 (set (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
        (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
        (nil)))
(jump_insn 708 743 709 33 (set (pc)
        (label_ref 319)) 659 {jump}
     (nil)
 -> 319)
;;  succ:       18 [100.0%]  (LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

(barrier 709 708 444)
;; basic block 34, loop depth 0, count 0, freq 94, maybe hot
;;  prev block 33, next block 35, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31 [50.0%] 
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 2 [cx] 6 [bp] 7 [sp] 21 [xmm0]
;; lr  def 	 17 [flags] 22 [xmm1]
(code_label 444 709 445 34 66 "" [1 uses])
(note 445 444 447 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 447 445 448 34 (set (reg:SF 22 xmm1 [orig:428 *_220 ] [428])
        (mem:SF (plus:DI (plus:DI (reg/f:DI 1 dx [orig:223 D.158416 ] [223])
                    (reg:DI 2 cx [orig:222 D.158398 ] [222]))
                (const_int 4 [0x4])) [0 *_220+0 S4 A32])) Batch_Mix_Correlations.cc:689 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:223 D.158416 ] [223])
        (expr_list:REG_DEAD (reg:DI 2 cx [orig:222 D.158398 ] [222])
            (nil))))
(insn 448 447 449 34 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 22 xmm1 [orig:428 *_220 ] [428])
            (reg:SF 21 xmm0 [orig:220 D.158409 ] [220]))) Batch_Mix_Correlations.cc:689 57 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [orig:428 *_220 ] [428])
        (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:220 D.158409 ] [220])
            (nil))))
(jump_insn 449 448 453 34 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 446)
            (pc))) Batch_Mix_Correlations.cc:689 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 446)
;;  succ:       35 [50.0%]  (FALLTHRU)
;;              32 [50.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 35, loop depth 0, count 0, freq 47, maybe hot
;;  prev block 34, next block 36, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 [50.0%]  (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 2 [cx] 17 [flags]
(note 453 449 454 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(debug_insn 454 453 455 35 (var_location:SI izt (const_int 0 [0])) -1
     (nil))
(insn 455 454 456 35 (set (reg:SI 2 cx [orig:229 D.158400 ] [229])
        (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 268 [0x10c])) [0 .omp_data_i_23(D)->nztbins+0 S4 A32])) Batch_Mix_Correlations.cc:690 89 {*movsi_internal}
     (nil))
(insn 456 455 457 35 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 2 cx [orig:229 D.158400 ] [229])
            (const_int 0 [0]))) Batch_Mix_Correlations.cc:690 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 457 456 458 35 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 446)
            (pc))) Batch_Mix_Correlations.cc:690 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 446)
;;  succ:       36 [91.0%]  (FALLTHRU)
;;              32 [9.0%] 
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 36, loop depth 0, count 0, freq 43, maybe hot
;;  prev block 35, next block 37, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       35 [91.0%]  (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 2 [cx] 3 [bx] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
(note 458 457 9 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 9 458 744 36 (set (reg/v:SI 41 r12 [orig:280 izt ] [280])
        (const_int 0 [0])) Batch_Mix_Correlations.cc:690 89 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 744 9 745 36 (set (reg:DI 44 r15 [orig:163 D.158397 ] [163])
        (reg:DI 44 r15 [orig:163 D.158397 ] [163])) Batch_Mix_Correlations.cc:690 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:163 D.158397 ] [163])
        (nil)))
(insn 745 744 746 36 (set (reg:SI 2 cx [orig:229 D.158400 ] [229])
        (reg:SI 2 cx [orig:229 D.158400 ] [229])) Batch_Mix_Correlations.cc:690 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:229 D.158400 ] [229])
        (nil)))
(insn 746 745 747 36 (set (reg/v:SI 41 r12 [orig:280 izt ] [280])
        (reg/v:SI 41 r12 [orig:280 izt ] [280])) Batch_Mix_Correlations.cc:690 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 41 r12 [orig:280 izt ] [280])
        (nil)))
(insn 747 746 748 36 (set (reg/v:SI 42 r13 [orig:281 ipt ] [281])
        (reg/v:SI 42 r13 [orig:281 ipt ] [281])) Batch_Mix_Correlations.cc:690 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 r13 [orig:281 ipt ] [281])
        (nil)))
(insn 748 747 749 36 (set (reg/v:DI 3 bx [orig:282 itrack ] [282])
        (reg/v:DI 3 bx [orig:282 itrack ] [282])) Batch_Mix_Correlations.cc:690 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v:DI 3 bx [orig:282 itrack ] [282])
        (nil)))
(insn 749 748 475 36 (set (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
        (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])) Batch_Mix_Correlations.cc:690 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
        (nil)))
;;  succ:       37 [100.0%]  (FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 37, loop depth 0, count 0, freq 474, maybe hot
;;  prev block 36, next block 38, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       38 [91.0%] 
;;              36 [100.0%]  (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 25 [xmm4]
(code_label 475 749 459 37 71 "" [1 uses])
(note 459 475 460 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(debug_insn 460 459 461 37 (var_location:SI izt (reg/v:SI 41 r12 [orig:280 izt ] [280])) -1
     (nil))
(insn 461 460 462 37 (set (reg:DI 0 ax [orig:429 D.158398 ] [429])
        (sign_extend:DI (reg/v:SI 41 r12 [orig:280 izt ] [280]))) Batch_Mix_Correlations.cc:691 149 {*extendsidi2_rex64}
     (nil))
(insn 462 461 463 37 (parallel [
            (set (reg:DI 4 si [orig:231 D.158398 ] [231])
                (ashift:DI (reg:DI 0 ax [orig:429 D.158398 ] [429])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:691 522 {*ashldi3_1}
     (nil))
(insn 463 462 464 37 (set (reg/f:DI 1 dx [orig:232 D.158416 ] [232])
        (mem/f/j:DI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 24 [0x18])) [0 .omp_data_i_23(D)->ztbins+0 S8 A64])) Batch_Mix_Correlations.cc:691 87 {*movdi_internal_rex64}
     (nil))
(insn 464 463 796 37 (set (reg:DF 21 xmm0 [orig:430 D.158411 ] [430])
        (float_extend:DF (mem:SF (plus:DI (mult:DI (reg:DI 0 ax [orig:429 D.158398 ] [429])
                        (const_int 4 [0x4]))
                    (reg/f:DI 1 dx [orig:232 D.158416 ] [232])) [0 *_226+0 S4 A32]))) Batch_Mix_Correlations.cc:691 159 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:429 D.158398 ] [429])
        (nil)))
(insn 796 464 465 37 (set (reg/v:DF 25 xmm4 [orig:202 zt ] [202])
        (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 %sfp+-88 S8 A64])) Batch_Mix_Correlations.cc:691 133 {*movdf_internal_rex64}
     (nil))
(insn 465 796 466 37 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg/v:DF 25 xmm4 [orig:202 zt ] [202])
            (reg:DF 21 xmm0 [orig:430 D.158411 ] [430]))) Batch_Mix_Correlations.cc:691 58 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg/v:DF 25 xmm4 [orig:202 zt ] [202])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:430 D.158411 ] [430])
            (nil))))
(jump_insn 466 465 480 37 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 478)
            (pc))) Batch_Mix_Correlations.cc:691 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 478)
;;  succ:       40 [50.0%] 
;;              38 [50.0%]  (FALLTHRU)
;; lr  out 	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 38, loop depth 0, count 0, freq 474, maybe hot
;;  prev block 37, next block 39, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       37 [50.0%]  (FALLTHRU)
;;              43 [100.0%] 
;;              40 [50.0%] 
;;              44 [100.0%] 
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 2 [cx] 17 [flags] 41 [r12]
(code_label 480 466 467 38 72 "" [3 uses])
(note 467 480 468 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 470 38 (parallel [
            (set (reg/v:SI 41 r12 [orig:280 izt ] [280])
                (plus:SI (reg/v:SI 41 r12 [orig:280 izt ] [280])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:690 273 {*addsi_1}
     (nil))
(debug_insn 470 468 471 38 (var_location:SI izt (reg/v:SI 41 r12 [orig:280 izt ] [280])) -1
     (nil))
(insn 471 470 472 38 (set (reg:SI 2 cx [orig:229 D.158400 ] [229])
        (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 268 [0x10c])) [0 .omp_data_i_23(D)->nztbins+0 S4 A32])) Batch_Mix_Correlations.cc:690 89 {*movsi_internal}
     (nil))
(insn 472 471 473 38 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 2 cx [orig:229 D.158400 ] [229])
            (reg/v:SI 41 r12 [orig:280 izt ] [280]))) Batch_Mix_Correlations.cc:690 7 {*cmpsi_1}
     (nil))
(jump_insn 473 472 710 38 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 475)
            (pc))) Batch_Mix_Correlations.cc:690 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9100 [0x238c])
        (nil))
 -> 475)
;;  succ:       37 [91.0%] 
;;              39 [9.0%]  (FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 39, loop depth 0, count 0, freq 43, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38 [9.0%]  (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13] 43 [r14] 44 [r15]
;; lr  def 	 3 [bx] 42 [r13] 43 [r14] 44 [r15]
(note 710 473 750 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 750 710 751 39 (set (reg:DI 44 r15 [orig:163 D.158397 ] [163])
        (reg:DI 44 r15 [orig:163 D.158397 ] [163])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:163 D.158397 ] [163])
        (nil)))
(insn 751 750 752 39 (set (reg/v:SI 42 r13 [orig:281 ipt ] [281])
        (reg/v:SI 42 r13 [orig:281 ipt ] [281])) 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 42 r13 [orig:281 ipt ] [281])
        (nil)))
(insn 752 751 753 39 (set (reg/v:DI 3 bx [orig:282 itrack ] [282])
        (reg/v:DI 3 bx [orig:282 itrack ] [282])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v:DI 3 bx [orig:282 itrack ] [282])
        (nil)))
(insn 753 752 711 39 (set (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
        (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
        (nil)))
(jump_insn 711 753 712 39 (set (pc)
        (label_ref 446)) 659 {jump}
     (nil)
 -> 446)
;;  succ:       32 [100.0%]  (LOOP_EXIT)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

(barrier 712 711 478)
;; basic block 40, loop depth 0, count 0, freq 237, maybe hot
;;  prev block 39, next block 41, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       37 [50.0%] 
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 1 [dx] 4 [si] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 21 [xmm0]
(code_label 478 712 479 40 70 "" [1 uses])
(note 479 478 481 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 481 479 482 40 (set (reg:DF 21 xmm0 [orig:431 D.158411 ] [431])
        (float_extend:DF (mem:SF (plus:DI (plus:DI (reg/f:DI 1 dx [orig:232 D.158416 ] [232])
                        (reg:DI 4 si [orig:231 D.158398 ] [231]))
                    (const_int 4 [0x4])) [0 *_231+0 S4 A32]))) Batch_Mix_Correlations.cc:691 159 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:232 D.158416 ] [232])
        (expr_list:REG_DEAD (reg:DI 4 si [orig:231 D.158398 ] [231])
            (nil))))
(insn 482 481 483 40 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 21 xmm0 [orig:431 D.158411 ] [431])
            (mem/c:DF (plus:DI (reg/f:DI 6 bp)
                    (const_int -88 [0xffffffffffffffa8])) [0 %sfp+-88 S8 A64]))) Batch_Mix_Correlations.cc:691 58 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:431 D.158411 ] [431])
        (nil)))
(jump_insn 483 482 487 40 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 480)
            (pc))) Batch_Mix_Correlations.cc:691 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 480)
;;  succ:       41 [50.0%]  (FALLTHRU)
;;              38 [50.0%] 
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 41, loop depth 0, count 0, freq 119, maybe hot
;;  prev block 40, next block 42, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       40 [50.0%]  (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags] 21 [xmm0] 22 [xmm1]
(note 487 483 488 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 488 487 489 41 (set (reg:DF 21 xmm0 [orig:432 D.158411 ] [432])
        (float_extend:DF (mem/j:SF (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 304 [0x130])) [0 .omp_data_i_23(D)->isolation+0 S4 A64]))) Batch_Mix_Correlations.cc:693 159 {*extendsfdf2_sse}
     (nil))
(insn 489 488 490 41 (set (reg:DF 22 xmm1 [orig:433 .omp_data_i_23(D)->iso_max ] [433])
        (mem/j:DF (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 16 [0x10])) [0 .omp_data_i_23(D)->iso_max+0 S8 A64])) Batch_Mix_Correlations.cc:693 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUIV (mem/j:DF (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 16 [0x10])) [0 .omp_data_i_23(D)->iso_max+0 S8 A64])
        (nil)))
(insn 490 489 491 41 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 22 xmm1 [orig:433 .omp_data_i_23(D)->iso_max ] [433])
            (reg:DF 21 xmm0 [orig:432 D.158411 ] [432]))) Batch_Mix_Correlations.cc:693 58 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:433 .omp_data_i_23(D)->iso_max ] [433])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:432 D.158411 ] [432])
            (nil))))
(jump_insn 491 490 567 41 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 547)
            (pc))) Batch_Mix_Correlations.cc:693 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 5000 [0x1388])
        (nil))
 -> 547)
;;  succ:       47 [50.0%] 
;;              42 [50.0%]  (FALLTHRU)
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 42, loop depth 0, count 0, freq 77, maybe hot
;;  prev block 41, next block 43, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       41 [50.0%]  (FALLTHRU)
;;              48 [100.0%] 
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags] 21 [xmm0] 22 [xmm1]
(code_label 567 491 492 42 79 "" [1 uses])
(note 492 567 493 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 493 492 494 42 (set (reg:DF 21 xmm0 [orig:434 D.158411 ] [434])
        (float_extend:DF (mem/j:SF (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 304 [0x130])) [0 .omp_data_i_23(D)->isolation+0 S4 A64]))) Batch_Mix_Correlations.cc:699 159 {*extendsfdf2_sse}
     (nil))
(insn 494 493 495 42 (set (reg:DF 22 xmm1 [orig:435 .omp_data_i_23(D)->iso_max ] [435])
        (mem/j:DF (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 16 [0x10])) [0 .omp_data_i_23(D)->iso_max+0 S8 A64])) Batch_Mix_Correlations.cc:699 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUIV (mem/j:DF (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 16 [0x10])) [0 .omp_data_i_23(D)->iso_max+0 S8 A64])
        (nil)))
(insn 495 494 496 42 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 22 xmm1 [orig:435 .omp_data_i_23(D)->iso_max ] [435])
            (reg:DF 21 xmm0 [orig:434 D.158411 ] [434]))) Batch_Mix_Correlations.cc:699 58 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:435 .omp_data_i_23(D)->iso_max ] [435])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:434 D.158411 ] [434])
            (nil))))
(jump_insn 496 495 544 42 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 523)
            (pc))) Batch_Mix_Correlations.cc:699 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 2273 [0x8e1])
        (nil))
 -> 523)
;;  succ:       45 [22.7%] 
;;              43 [77.3%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 43, loop depth 0, count 0, freq 77, maybe hot
;;  prev block 42, next block 44, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       42 [77.3%]  (FALLTHRU)
;;              46 [100.0%] 
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags] 21 [xmm0] 22 [xmm1]
(code_label 544 496 497 43 78 "" [1 uses])
(note 497 544 498 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 498 497 499 43 (set (reg:DF 21 xmm0 [orig:436 D.158411 ] [436])
        (float_extend:DF (mem/j:SF (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 304 [0x130])) [0 .omp_data_i_23(D)->isolation+0 S4 A64]))) Batch_Mix_Correlations.cc:704 159 {*extendsfdf2_sse}
     (nil))
(insn 499 498 500 43 (set (reg:DF 22 xmm1 [orig:437 .omp_data_i_23(D)->iso_max ] [437])
        (mem/j:DF (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 16 [0x10])) [0 .omp_data_i_23(D)->iso_max+0 S8 A64])) Batch_Mix_Correlations.cc:704 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUIV (mem/j:DF (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                (const_int 16 [0x10])) [0 .omp_data_i_23(D)->iso_max+0 S8 A64])
        (nil)))
(insn 500 499 501 43 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 22 xmm1 [orig:437 .omp_data_i_23(D)->iso_max ] [437])
            (reg:DF 21 xmm0 [orig:436 D.158411 ] [436]))) Batch_Mix_Correlations.cc:704 58 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [orig:437 .omp_data_i_23(D)->iso_max ] [437])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:436 D.158411 ] [436])
            (nil))))
(jump_insn 501 500 525 43 (set (pc)
        (if_then_else (unle (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 480)
            (pc))) Batch_Mix_Correlations.cc:704 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
        (nil))
 -> 480)
;;  succ:       44 (FALLTHRU)
;;              38 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 44, loop depth 0, count 0, freq 34, maybe hot
;;  prev block 43, next block 45, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;;              45 [71.0%] 
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 525 501 505 44 77 "" [1 uses])
(note 505 525 797 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 797 505 506 44 (set (reg:SI 0 ax [orig:438 D.158400 ] [438])
        (reg/v:SI 42 r13 [orig:281 ipt ] [281])) Batch_Mix_Correlations.cc:706 89 {*movsi_internal}
     (nil))
(insn 506 797 798 44 (parallel [
            (set (reg:SI 0 ax [orig:438 D.158400 ] [438])
                (mult:SI (reg:SI 0 ax [orig:438 D.158400 ] [438])
                    (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                            (const_int 268 [0x10c])) [0 .omp_data_i_23(D)->nztbins+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:706 353 {*mulsi3_1}
     (nil))
(insn 798 506 507 44 (set (reg:SI 0 ax [orig:438 D.158400 ] [438])
        (reg:SI 0 ax [orig:438 D.158400 ] [438])) Batch_Mix_Correlations.cc:706 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:438 D.158400 ] [438])
        (nil)))
(insn 507 798 508 44 (parallel [
            (set (reg:SI 0 ax [orig:439 D.158400 ] [439])
                (plus:SI (reg:SI 0 ax [orig:438 D.158400 ] [438])
                    (reg/v:SI 41 r12 [orig:280 izt ] [280])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:706 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:438 D.158400 ] [438])
        (nil)))
(insn 508 507 510 44 (set (reg:DI 0 ax [orig:440 D.158400 ] [440])
        (sign_extend:DI (reg:SI 0 ax [orig:439 D.158400 ] [439]))) Batch_Mix_Correlations.cc:706 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:439 D.158400 ] [439])
        (nil)))
(insn 510 508 799 44 (parallel [
            (set (reg:DI 0 ax [442])
                (plus:DI (reg:DI 0 ax [orig:440 D.158400 ] [440])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -80 [0xffffffffffffffb0])) [0 %sfp+-80 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:706 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:440 D.158400 ] [440])
        (nil)))
(insn 799 510 511 44 (set (reg/f:DI 4 si [orig:68 MixCorr.36 ] [68])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [0 %sfp+-144 S8 A64])) Batch_Mix_Correlations.cc:706 87 {*movdi_internal_rex64}
     (nil))
(insn 511 799 513 44 (set (reg/f:DI 5 di [orig:274 D.158417 ] [274])
        (mem/f/j:DI (plus:DI (mult:DI (reg:DI 0 ax [442])
                    (const_int 8 [0x8]))
                (reg/f:DI 4 si [orig:68 MixCorr.36 ] [68])) [0 MEM[(struct TH2D *[0:<<< error >>>][0:<<< error >>>] *)MixCorr.36_28] S8 A64])) Batch_Mix_Correlations.cc:706 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:68 MixCorr.36 ] [68])
        (expr_list:REG_DEAD (reg:DI 0 ax [442])
            (nil))))
(insn 513 511 514 44 (set (reg/f:DI 0 ax [orig:443 _272->D.131796.D.130302.D.127613.D.78818._vptr.TObject ] [443])
        (mem/f/j:DI (reg/f:DI 5 di [orig:274 D.158417 ] [274]) [0 _272->D.131796.D.130302.D.127613.D.78818._vptr.TObject+0 S8 A64])) Batch_Mix_Correlations.cc:706 87 {*movdi_internal_rex64}
     (nil))
(note 514 513 515 44 NOTE_INSN_DELETED)
(insn 515 514 516 44 (set (reg:DF 21 xmm0 [orig:445 D.158411 ] [445])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -168 [0xffffffffffffff58])) [0 %sfp+-168 S4 A32]))) Batch_Mix_Correlations.cc:706 159 {*extendsfdf2_sse}
     (nil))
(note 516 515 517 44 NOTE_INSN_DELETED)
(insn 517 516 728 44 (set (reg:DF 22 xmm1)
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -164 [0xffffffffffffff5c])) [0 %sfp+-164 S4 A32]))) Batch_Mix_Correlations.cc:706 159 {*extendsfdf2_sse}
     (nil))
(insn 728 517 518 44 (set (reg:DF 21 xmm0 [orig:445 D.158411 ] [445])
        (reg:DF 21 xmm0 [orig:445 D.158411 ] [445])) Batch_Mix_Correlations.cc:706 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:445 D.158411 ] [445])
        (nil)))
(insn 518 728 519 44 (set (reg:DF 21 xmm0)
        (reg:DF 21 xmm0 [orig:445 D.158411 ] [445])) Batch_Mix_Correlations.cc:706 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:445 D.158411 ] [445])
        (nil)))
(insn 519 518 520 44 (set (reg:DI 5 di)
        (reg/f:DI 5 di [orig:274 D.158417 ] [274])) Batch_Mix_Correlations.cc:706 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:274 D.158417 ] [274])
        (nil)))
(call_insn 520 519 713 44 (set (reg:SI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:443 _272->D.131796.D.130302.D.127613.D.78818._vptr.TObject ] [443])
                        (const_int 728 [0x2d8])) [0 MEM[(int (*__vtbl_ptr_type) () *)_273 + 728B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_274;_278->91) S1 A8])
            (const_int 0 [0]))) Batch_Mix_Correlations.cc:706 672 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:443 _272->D.131796.D.130302.D.127613.D.78818._vptr.TObject ] [443])
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (nil)))))
(jump_insn 713 520 714 44 (set (pc)
        (label_ref 480)) 659 {jump}
     (nil)
 -> 480)
;;  succ:       38 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 714 713 523)
;; basic block 45, loop depth 0, count 0, freq 59, maybe hot
;;  prev block 44, next block 46, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       42 [22.7%] 
;;              47 [71.0%] 
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
(code_label 523 714 524 45 75 "" [2 uses])
(note 524 523 526 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 526 524 527 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/j:QI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 310 [0x136])) [0 .omp_data_i_23(D)->Background+0 S1 A16])
            (const_int 0 [0]))) Batch_Mix_Correlations.cc:700 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 527 526 528 45 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 525)
            (pc))) Batch_Mix_Correlations.cc:700 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 525)
;;  succ:       46 [29.0%]  (FALLTHRU)
;;              44 [71.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 46, loop depth 0, count 0, freq 17, maybe hot
;;  prev block 45, next block 47, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       45 [29.0%]  (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 528 527 800 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 800 528 529 46 (set (reg:SI 0 ax [orig:447 D.158400 ] [447])
        (reg/v:SI 42 r13 [orig:281 ipt ] [281])) Batch_Mix_Correlations.cc:702 89 {*movsi_internal}
     (nil))
(insn 529 800 801 46 (parallel [
            (set (reg:SI 0 ax [orig:447 D.158400 ] [447])
                (mult:SI (reg:SI 0 ax [orig:447 D.158400 ] [447])
                    (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                            (const_int 268 [0x10c])) [0 .omp_data_i_23(D)->nztbins+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:702 353 {*mulsi3_1}
     (nil))
(insn 801 529 530 46 (set (reg:SI 0 ax [orig:447 D.158400 ] [447])
        (reg:SI 0 ax [orig:447 D.158400 ] [447])) Batch_Mix_Correlations.cc:702 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:447 D.158400 ] [447])
        (nil)))
(insn 530 801 531 46 (parallel [
            (set (reg:SI 0 ax [orig:448 D.158400 ] [448])
                (plus:SI (reg:SI 0 ax [orig:447 D.158400 ] [447])
                    (reg/v:SI 41 r12 [orig:280 izt ] [280])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:702 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:447 D.158400 ] [447])
        (nil)))
(insn 531 530 533 46 (set (reg:DI 0 ax [orig:449 D.158400 ] [449])
        (sign_extend:DI (reg:SI 0 ax [orig:448 D.158400 ] [448]))) Batch_Mix_Correlations.cc:702 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:448 D.158400 ] [448])
        (nil)))
(insn 533 531 802 46 (parallel [
            (set (reg:DI 0 ax [451])
                (plus:DI (reg:DI 0 ax [orig:449 D.158400 ] [449])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -136 [0xffffffffffffff78])) [0 %sfp+-136 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:702 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:449 D.158400 ] [449])
        (nil)))
(insn 802 533 534 46 (set (reg/f:DI 4 si [orig:64 MixCorr_BKGD.38 ] [64])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [0 %sfp+-152 S8 A64])) Batch_Mix_Correlations.cc:702 87 {*movdi_internal_rex64}
     (nil))
(insn 534 802 536 46 (set (reg/f:DI 5 di [orig:261 D.158417 ] [261])
        (mem/f/j:DI (plus:DI (mult:DI (reg:DI 0 ax [451])
                    (const_int 8 [0x8]))
                (reg/f:DI 4 si [orig:64 MixCorr_BKGD.38 ] [64])) [0 MEM[(struct TH2D *[0:<<< error >>>][0:<<< error >>>] *)MixCorr_BKGD.38_24] S8 A64])) Batch_Mix_Correlations.cc:702 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:64 MixCorr_BKGD.38 ] [64])
        (expr_list:REG_DEAD (reg:DI 0 ax [451])
            (nil))))
(insn 536 534 537 46 (set (reg/f:DI 0 ax [orig:452 _257->D.131796.D.130302.D.127613.D.78818._vptr.TObject ] [452])
        (mem/f/j:DI (reg/f:DI 5 di [orig:261 D.158417 ] [261]) [0 _257->D.131796.D.130302.D.127613.D.78818._vptr.TObject+0 S8 A64])) Batch_Mix_Correlations.cc:702 87 {*movdi_internal_rex64}
     (nil))
(note 537 536 538 46 NOTE_INSN_DELETED)
(insn 538 537 539 46 (set (reg:DF 21 xmm0 [orig:454 D.158411 ] [454])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -168 [0xffffffffffffff58])) [0 %sfp+-168 S4 A32]))) Batch_Mix_Correlations.cc:702 159 {*extendsfdf2_sse}
     (nil))
(note 539 538 540 46 NOTE_INSN_DELETED)
(insn 540 539 729 46 (set (reg:DF 22 xmm1)
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -164 [0xffffffffffffff5c])) [0 %sfp+-164 S4 A32]))) Batch_Mix_Correlations.cc:702 159 {*extendsfdf2_sse}
     (nil))
(insn 729 540 541 46 (set (reg:DF 21 xmm0 [orig:454 D.158411 ] [454])
        (reg:DF 21 xmm0 [orig:454 D.158411 ] [454])) Batch_Mix_Correlations.cc:702 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:454 D.158411 ] [454])
        (nil)))
(insn 541 729 542 46 (set (reg:DF 21 xmm0)
        (reg:DF 21 xmm0 [orig:454 D.158411 ] [454])) Batch_Mix_Correlations.cc:702 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:454 D.158411 ] [454])
        (nil)))
(insn 542 541 543 46 (set (reg:DI 5 di)
        (reg/f:DI 5 di [orig:261 D.158417 ] [261])) Batch_Mix_Correlations.cc:702 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:261 D.158417 ] [261])
        (nil)))
(call_insn 543 542 715 46 (set (reg:SI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:452 _257->D.131796.D.130302.D.127613.D.78818._vptr.TObject ] [452])
                        (const_int 728 [0x2d8])) [0 MEM[(int (*__vtbl_ptr_type) () *)_258 + 728B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_259;_263->91) S1 A8])
            (const_int 0 [0]))) Batch_Mix_Correlations.cc:702 672 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:452 _257->D.131796.D.130302.D.127613.D.78818._vptr.TObject ] [452])
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (nil)))))
(jump_insn 715 543 716 46 (set (pc)
        (label_ref 544)) 659 {jump}
     (nil)
 -> 544)
;;  succ:       43 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 716 715 547)
;; basic block 47, loop depth 0, count 0, freq 59, maybe hot
;;  prev block 46, next block 48, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       41 [50.0%] 
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
(code_label 547 716 548 47 74 "" [1 uses])
(note 548 547 549 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 549 548 550 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/j:QI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 309 [0x135])) [0 .omp_data_i_23(D)->Signal+0 S1 A8])
            (const_int 0 [0]))) Batch_Mix_Correlations.cc:694 1 {*cmpqi_ccno_1}
     (nil))
(jump_insn 550 549 551 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 523)
            (pc))) Batch_Mix_Correlations.cc:694 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 7100 [0x1bbc])
        (nil))
 -> 523)
;;  succ:       48 [29.0%]  (FALLTHRU)
;;              45 [71.0%] 
;; lr  out 	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 48, loop depth 0, count 0, freq 17, maybe hot
;;  prev block 47, next block 49, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       47 [29.0%]  (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp] 41 [r12] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 551 550 803 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 803 551 552 48 (set (reg:SI 0 ax [orig:456 D.158400 ] [456])
        (reg:SI 2 cx [orig:229 D.158400 ] [229])) Batch_Mix_Correlations.cc:696 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 2 cx [orig:229 D.158400 ] [229])
        (nil)))
(insn 552 803 804 48 (parallel [
            (set (reg:SI 0 ax [orig:456 D.158400 ] [456])
                (mult:SI (reg:SI 0 ax [orig:456 D.158400 ] [456])
                    (reg/v:SI 42 r13 [orig:281 ipt ] [281])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:696 353 {*mulsi3_1}
     (nil))
(insn 804 552 553 48 (set (reg:SI 0 ax [orig:456 D.158400 ] [456])
        (reg:SI 0 ax [orig:456 D.158400 ] [456])) Batch_Mix_Correlations.cc:696 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:456 D.158400 ] [456])
        (nil)))
(insn 553 804 554 48 (parallel [
            (set (reg:SI 0 ax [orig:457 D.158400 ] [457])
                (plus:SI (reg:SI 0 ax [orig:456 D.158400 ] [456])
                    (reg/v:SI 41 r12 [orig:280 izt ] [280])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:696 273 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:456 D.158400 ] [456])
        (nil)))
(insn 554 553 556 48 (set (reg:DI 0 ax [orig:458 D.158400 ] [458])
        (sign_extend:DI (reg:SI 0 ax [orig:457 D.158400 ] [457]))) Batch_Mix_Correlations.cc:696 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:457 D.158400 ] [457])
        (nil)))
(insn 556 554 805 48 (parallel [
            (set (reg:DI 0 ax [460])
                (plus:DI (reg:DI 0 ax [orig:458 D.158400 ] [458])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -96 [0xffffffffffffffa0])) [0 %sfp+-96 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:696 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:458 D.158400 ] [458])
        (nil)))
(insn 805 556 557 48 (set (reg/f:DI 4 si [orig:66 MixCorr_Signal.37 ] [66])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [0 %sfp+-160 S8 A64])) Batch_Mix_Correlations.cc:696 87 {*movdi_internal_rex64}
     (nil))
(insn 557 805 559 48 (set (reg/f:DI 5 di [orig:247 D.158417 ] [247])
        (mem/f/j:DI (plus:DI (mult:DI (reg:DI 0 ax [460])
                    (const_int 8 [0x8]))
                (reg/f:DI 4 si [orig:66 MixCorr_Signal.37 ] [66])) [0 MEM[(struct TH2D *[0:<<< error >>>][0:<<< error >>>] *)MixCorr_Signal.37_26] S8 A64])) Batch_Mix_Correlations.cc:696 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 4 si [orig:66 MixCorr_Signal.37 ] [66])
        (expr_list:REG_DEAD (reg:DI 0 ax [460])
            (nil))))
(insn 559 557 560 48 (set (reg/f:DI 0 ax [orig:461 _241->D.131796.D.130302.D.127613.D.78818._vptr.TObject ] [461])
        (mem/f/j:DI (reg/f:DI 5 di [orig:247 D.158417 ] [247]) [0 _241->D.131796.D.130302.D.127613.D.78818._vptr.TObject+0 S8 A64])) Batch_Mix_Correlations.cc:696 87 {*movdi_internal_rex64}
     (nil))
(note 560 559 561 48 NOTE_INSN_DELETED)
(insn 561 560 562 48 (set (reg:DF 21 xmm0 [orig:463 D.158411 ] [463])
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -168 [0xffffffffffffff58])) [0 %sfp+-168 S4 A32]))) Batch_Mix_Correlations.cc:696 159 {*extendsfdf2_sse}
     (nil))
(note 562 561 563 48 NOTE_INSN_DELETED)
(insn 563 562 730 48 (set (reg:DF 22 xmm1)
        (float_extend:DF (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -164 [0xffffffffffffff5c])) [0 %sfp+-164 S4 A32]))) Batch_Mix_Correlations.cc:696 159 {*extendsfdf2_sse}
     (nil))
(insn 730 563 564 48 (set (reg:DF 21 xmm0 [orig:463 D.158411 ] [463])
        (reg:DF 21 xmm0 [orig:463 D.158411 ] [463])) Batch_Mix_Correlations.cc:696 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:463 D.158411 ] [463])
        (nil)))
(insn 564 730 565 48 (set (reg:DF 21 xmm0)
        (reg:DF 21 xmm0 [orig:463 D.158411 ] [463])) Batch_Mix_Correlations.cc:696 133 {*movdf_internal_rex64}
     (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:463 D.158411 ] [463])
        (nil)))
(insn 565 564 566 48 (set (reg:DI 5 di)
        (reg/f:DI 5 di [orig:247 D.158417 ] [247])) Batch_Mix_Correlations.cc:696 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 5 di [orig:247 D.158417 ] [247])
        (nil)))
(call_insn 566 565 717 48 (set (reg:SI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:461 _241->D.131796.D.130302.D.127613.D.78818._vptr.TObject ] [461])
                        (const_int 728 [0x2d8])) [0 MEM[(int (*__vtbl_ptr_type) () *)_242 + 728B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_243;_247->91) S1 A8])
            (const_int 0 [0]))) Batch_Mix_Correlations.cc:696 672 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:461 _241->D.131796.D.130302.D.127613.D.78818._vptr.TObject ] [461])
        (expr_list:REG_DEAD (reg:DF 22 xmm1)
            (expr_list:REG_DEAD (reg:DF 21 xmm0)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (expr_list:REG_UNUSED (reg:SI 0 ax)
                        (expr_list:REG_EH_REGION (const_int -1 [0xffffffffffffffff])
                            (nil)))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:DF (use (reg:DF 21 xmm0))
            (expr_list:DF (use (reg:DF 22 xmm1))
                (nil)))))
(jump_insn 717 566 718 48 (set (pc)
        (label_ref 567)) 659 {jump}
     (nil)
 -> 567)
;;  succ:       42 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 718 717 570)
;; basic block 49, loop depth 0, count 0, freq 19, maybe hot
;;  prev block 48, next block 50, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28 [50.0%] 
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 21 [xmm0] 22 [xmm1] 28 [xmm7]
(code_label 570 718 571 49 65 "" [1 uses])
(note 571 570 572 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(debug_insn 572 571 573 49 (var_location:SF d (mem/c:SF (plus:DI (reg/f:DI 6 bp)
            (const_int -164 [0xffffffffffffff5c])) [0 %sfp+-164 S4 A32])) -1
     (nil))
(debug_insn 573 572 574 49 (var_location:SF __x (mem/c:SF (plus:DI (reg/f:DI 6 bp)
            (const_int -164 [0xffffffffffffff5c])) [0 %sfp+-164 S4 A32])) -1
     (nil))
(insn 574 573 806 49 (set (reg:V4SF 21 xmm0 [466])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0 S16 A128])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/cmath:88 1157 {*movv4sf_internal}
     (expr_list:REG_EQUIV (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 806 574 575 49 (set (reg/v:SF 28 xmm7 [orig:214 DeltaEta ] [214])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -164 [0xffffffffffffff5c])) [0 %sfp+-164 S4 A32])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/cmath:88 135 {*movsf_internal}
     (nil))
(insn 575 806 576 49 (parallel [
            (set (reg:SF 21 xmm0 [orig:465 D.158409 ] [465])
                (abs:SF (reg/v:SF 28 xmm7 [orig:214 DeltaEta ] [214])))
            (use (reg:V4SF 21 xmm0 [466]))
            (clobber (reg:CC 17 flags))
        ]) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/cmath:88 479 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg/v:SF 28 xmm7 [orig:214 DeltaEta ] [214])
        (expr_list:REG_DEAD (reg:V4SF 21 xmm0 [466])
            (nil))))
(insn 576 575 577 49 (set (reg:DF 21 xmm0 [orig:467 D.158411 ] [467])
        (float_extend:DF (reg:SF 21 xmm0 [orig:465 D.158409 ] [465]))) Batch_Mix_Correlations.cc:686 159 {*extendsfdf2_sse}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:465 D.158409 ] [465])
        (nil)))
(insn 577 576 578 49 (set (reg:DF 22 xmm1 [468])
        (mem/u/c:DF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0 S8 A64])) Batch_Mix_Correlations.cc:686 133 {*movdf_internal_rex64}
     (expr_list:REG_EQUIV (const_double:DF 5.0000000000000001040834085586084256647154688835144043e-3 [0x0.a3d70a3d70a3d8p-7])
        (nil)))
(insn 578 577 579 49 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:DF 22 xmm1 [468])
            (reg:DF 21 xmm0 [orig:467 D.158411 ] [467]))) Batch_Mix_Correlations.cc:686 58 {*cmpiudf_sse}
     (expr_list:REG_DEAD (reg:DF 22 xmm1 [468])
        (expr_list:REG_DEAD (reg:DF 21 xmm0 [orig:467 D.158411 ] [467])
            (nil))))
(jump_insn 579 578 719 49 (set (pc)
        (if_then_else (gt (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) Batch_Mix_Correlations.cc:686 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 10000 [0x2710])
        (nil))
 -> 319)
;;  succ:       18 [100.0%] 
;;              50 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

;; basic block 50, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 719 579 720 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(jump_insn 720 719 721 50 (set (pc)
        (label_ref 580)) 659 {jump}
     (nil)
 -> 580)
;;  succ:       29 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

(barrier 721 720 584)
;; basic block 51, loop depth 0, count 0, freq 19, maybe hot
;;  prev block 50, next block 52, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 [50.0%] 
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 21 [xmm0]
(code_label 584 721 585 51 64 "" [1 uses])
(note 585 584 828 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 828 585 807 51 (set (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [0 %sfp+-104 S8 A64])) Batch_Mix_Correlations.cc:673 87 {*movdi_internal_rex64}
     (nil))
(insn 807 828 586 51 (set (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])
        (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])) Batch_Mix_Correlations.cc:673 87 {*movdi_internal_rex64}
     (nil))
(insn 586 807 587 51 (set (reg:SF 21 xmm0 [orig:186 D.158409 ] [186])
        (mem/j:SF (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115]) [0 *cluster_data_out_private.65_82+0 S4 A32])) Batch_Mix_Correlations.cc:673 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])
        (expr_list:REG_EQUIV (mem/j:SF (reg/f:DI 115 [ cluster_data_out_private.65 ]) [0 *cluster_data_out_private.65_82+0 S4 A32])
            (nil))))
(debug_insn 587 586 589 51 (var_location:SF __x (reg:SF 21 xmm0 [orig:186 D.158409 ] [186])) Batch_Mix_Correlations.cc:673 -1
     (nil))
(insn 589 587 590 51 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 21 xmm0 [orig:186 D.158409 ] [186])
            (reg:SF 21 xmm0 [orig:186 D.158409 ] [186]))) Batch_Mix_Correlations.cc:673 57 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:186 D.158409 ] [186])
        (nil)))
(jump_insn 590 589 591 51 (set (pc)
        (if_then_else (unordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref 588)
            (pc))) Batch_Mix_Correlations.cc:673 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 2139 [0x85b])
        (nil))
 -> 588)
;;  succ:       28 [21.4%] 
;;              52 [78.6%]  (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 52, loop depth 0, count 0, freq 15, maybe hot
;;  prev block 51, next block 53, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       51 [78.6%]  (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 0 [ax] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3]
(note 591 590 592 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(debug_insn 592 591 593 52 (var_location:SF d (minus:SF (mem/j:SF (plus:DI (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])
                (const_int 8 [0x8])) [0 *cluster_data_out_private.65_82+8 S4 A32])
        (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
                (const_int 20 [0x14])) [0 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 20B]+0 S4 A32]))) Batch_Mix_Correlations.cc:674 -1
     (nil))
(debug_insn 593 592 827 52 (var_location:SF __x (minus:SF (mem/j:SF (plus:DI (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])
                (const_int 8 [0x8])) [0 *cluster_data_out_private.65_82+8 S4 A32])
        (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
                (const_int 20 [0x14])) [0 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 20B]+0 S4 A32]))) -1
     (nil))
(insn 827 593 808 52 (set (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])
        (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])) Batch_Mix_Correlations.cc:674 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])
        (nil)))
(insn 808 827 594 52 (set (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])
        (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])) Batch_Mix_Correlations.cc:674 87 {*movdi_internal_rex64}
     (nil))
(insn 594 808 595 52 (set (reg:SF 22 xmm1 [orig:470 *cluster_data_out_private.65_82+8 ] [470])
        (mem/j:SF (plus:DI (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])
                (const_int 8 [0x8])) [0 *cluster_data_out_private.65_82+8 S4 A32])) Batch_Mix_Correlations.cc:674 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])
        (expr_list:REG_EQUIV (mem/j:SF (plus:DI (reg/f:DI 115 [ cluster_data_out_private.65 ])
                    (const_int 8 [0x8])) [0 *cluster_data_out_private.65_82+8 S4 A32])
            (nil))))
(insn 595 594 596 52 (set (reg:SF 22 xmm1 [orig:469 D.158409 ] [469])
        (minus:SF (reg:SF 22 xmm1 [orig:470 *cluster_data_out_private.65_82+8 ] [470])
            (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
                    (const_int 20 [0x14])) [0 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 20B]+0 S4 A32]))) Batch_Mix_Correlations.cc:674 793 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [orig:470 *cluster_data_out_private.65_82+8 ] [470])
        (nil)))
(insn 596 595 597 52 (set (reg:V4SF 21 xmm0 [471])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0 S16 A128])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/cmath:88 1157 {*movv4sf_internal}
     (expr_list:REG_EQUIV (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 597 596 598 52 (parallel [
            (set (reg:SF 22 xmm1 [orig:290 D.158409 ] [290])
                (abs:SF (reg:SF 22 xmm1 [orig:469 D.158409 ] [469])))
            (use (reg:V4SF 21 xmm0 [471]))
            (clobber (reg:CC 17 flags))
        ]) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/cmath:88 479 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [orig:469 D.158409 ] [469])
        (nil)))
(debug_insn 598 597 599 52 (var_location:SF dphi (clobber (const_int 0 [0]))) Batch_Mix_Correlations.cc:674 -1
     (nil))
(debug_insn 599 598 600 52 (var_location:SF d (minus:SF (mem/j:SF (plus:DI (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])
                (const_int 12 [0xc])) [0 *cluster_data_out_private.65_82+12 S4 A32])
        (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
                (const_int 24 [0x18])) [0 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 24B]+0 S4 A32]))) Batch_Mix_Correlations.cc:675 -1
     (nil))
(debug_insn 600 599 809 52 (var_location:SF __x (minus:SF (mem/j:SF (plus:DI (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])
                (const_int 12 [0xc])) [0 *cluster_data_out_private.65_82+12 S4 A32])
        (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
                (const_int 24 [0x18])) [0 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 24B]+0 S4 A32]))) -1
     (nil))
(insn 809 600 601 52 (set (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])
        (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])) Batch_Mix_Correlations.cc:675 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])
        (nil)))
(insn 601 809 602 52 (set (reg:SF 23 xmm2 [orig:473 *cluster_data_out_private.65_82+12 ] [473])
        (mem/j:SF (plus:DI (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])
                (const_int 12 [0xc])) [0 *cluster_data_out_private.65_82+12 S4 A32])) Batch_Mix_Correlations.cc:675 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:115 cluster_data_out_private.65 ] [115])
        (expr_list:REG_EQUIV (mem/j:SF (plus:DI (reg/f:DI 115 [ cluster_data_out_private.65 ])
                    (const_int 12 [0xc])) [0 *cluster_data_out_private.65_82+12 S4 A32])
            (nil))))
(insn 602 601 604 52 (set (reg:SF 23 xmm2 [orig:472 D.158409 ] [472])
        (minus:SF (reg:SF 23 xmm2 [orig:473 *cluster_data_out_private.65_82+12 ] [473])
            (mem:SF (plus:DI (reg/f:DI 41 r12 [orig:152 D.158412 ] [152])
                    (const_int 24 [0x18])) [0 MEM[(float[1][0:D.151645][0:D.151638] *)_131 + 24B]+0 S4 A32]))) Batch_Mix_Correlations.cc:675 793 {*fop_sf_1_sse}
     (expr_list:REG_DEAD (reg:SF 23 xmm2 [orig:473 *cluster_data_out_private.65_82+12 ] [473])
        (nil)))
(insn 604 602 605 52 (parallel [
            (set (reg:SF 21 xmm0 [orig:291 D.158409 ] [291])
                (abs:SF (reg:SF 23 xmm2 [orig:472 D.158409 ] [472])))
            (use (reg:V4SF 21 xmm0 [471]))
            (clobber (reg:CC 17 flags))
        ]) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/cmath:88 479 {*absnegsf2_sse}
     (expr_list:REG_DEAD (reg:SF 23 xmm2 [orig:472 D.158409 ] [472])
        (expr_list:REG_DEAD (reg:V4SF 21 xmm0 [471])
            (nil))))
(debug_insn 605 604 810 52 (var_location:SF deta (clobber (const_int 0 [0]))) Batch_Mix_Correlations.cc:675 -1
     (nil))
(insn 810 605 606 52 (set (reg:SF 24 xmm3 [orig:476 D.158409 ] [476])
        (reg:SF 22 xmm1 [orig:290 D.158409 ] [290])) Batch_Mix_Correlations.cc:676 135 {*movsf_internal}
     (nil))
(insn 606 810 811 52 (set (reg:SF 24 xmm3 [orig:476 D.158409 ] [476])
        (mult:SF (reg:SF 24 xmm3 [orig:476 D.158409 ] [476])
            (reg:SF 22 xmm1 [orig:290 D.158409 ] [290]))) Batch_Mix_Correlations.cc:676 786 {*fop_sf_comm_sse}
     (nil))
(insn 811 606 812 52 (set (reg:SF 24 xmm3 [orig:476 D.158409 ] [476])
        (reg:SF 24 xmm3 [orig:476 D.158409 ] [476])) Batch_Mix_Correlations.cc:676 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 24 xmm3 [orig:476 D.158409 ] [476])
        (nil)))
(insn 812 811 607 52 (set (reg:SF 23 xmm2 [orig:477 D.158409 ] [477])
        (reg:SF 21 xmm0 [orig:291 D.158409 ] [291])) Batch_Mix_Correlations.cc:676 135 {*movsf_internal}
     (nil))
(insn 607 812 813 52 (set (reg:SF 23 xmm2 [orig:477 D.158409 ] [477])
        (mult:SF (reg:SF 23 xmm2 [orig:477 D.158409 ] [477])
            (reg:SF 21 xmm0 [orig:291 D.158409 ] [291]))) Batch_Mix_Correlations.cc:676 786 {*fop_sf_comm_sse}
     (nil))
(insn 813 607 608 52 (set (reg:SF 23 xmm2 [orig:477 D.158409 ] [477])
        (reg:SF 23 xmm2 [orig:477 D.158409 ] [477])) Batch_Mix_Correlations.cc:676 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 23 xmm2 [orig:477 D.158409 ] [477])
        (nil)))
(insn 608 813 609 52 (set (reg:SF 23 xmm2 [orig:478 D.158409 ] [478])
        (plus:SF (reg:SF 23 xmm2 [orig:477 D.158409 ] [477])
            (reg:SF 24 xmm3 [orig:476 D.158409 ] [476]))) Batch_Mix_Correlations.cc:676 786 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 23 xmm2 [orig:477 D.158409 ] [477])
        (expr_list:REG_DEAD (reg:SF 24 xmm3 [orig:476 D.158409 ] [476])
            (nil))))
(insn 609 608 610 52 (set (reg:SF 23 xmm2 [475])
        (sqrt:SF (reg:SF 23 xmm2 [orig:478 D.158409 ] [478]))) Batch_Mix_Correlations.cc:676 826 {*sqrtsf2_sse}
     (expr_list:REG_DEAD (reg:SF 23 xmm2 [orig:478 D.158409 ] [478])
        (nil)))
(insn 610 609 611 52 (set (reg:CCFPU 17 flags)
        (compare:CCFPU (reg:SF 23 xmm2 [475])
            (reg:SF 23 xmm2 [475]))) Batch_Mix_Correlations.cc:676 57 {*cmpiusf_sse}
     (expr_list:REG_DEAD (reg:SF 23 xmm2 [475])
        (nil)))
(jump_insn 611 610 664 52 (set (pc)
        (if_then_else (ordered (reg:CCFPU 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 588)
            (pc))) Batch_Mix_Correlations.cc:676 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil))
 -> 588)
;;  succ:       53 [0.0%]  (FALLTHRU)
;;              28 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

;; basic block 53, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 52, next block 54, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       52 [0.0%]  (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 6 [bp] 7 [sp] 21 [xmm0] 22 [xmm1]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 664 611 615 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 615 664 616 53 (set (reg:SF 22 xmm1 [orig:479 D.158409 ] [479])
        (mult:SF (reg:SF 22 xmm1 [orig:290 D.158409 ] [290])
            (reg:SF 22 xmm1 [orig:290 D.158409 ] [290]))) Batch_Mix_Correlations.cc:676 786 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 22 xmm1 [orig:290 D.158409 ] [290])
        (nil)))
(insn 616 615 617 53 (set (reg:SF 21 xmm0 [orig:480 D.158409 ] [480])
        (mult:SF (reg:SF 21 xmm0 [orig:291 D.158409 ] [291])
            (reg:SF 21 xmm0 [orig:291 D.158409 ] [291]))) Batch_Mix_Correlations.cc:676 786 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:291 D.158409 ] [291])
        (nil)))
(insn 617 616 618 53 (set (reg:SF 21 xmm0 [orig:481 D.158409 ] [481])
        (plus:SF (reg:SF 21 xmm0 [orig:480 D.158409 ] [480])
            (reg:SF 22 xmm1 [orig:479 D.158409 ] [479]))) Batch_Mix_Correlations.cc:676 786 {*fop_sf_comm_sse}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:480 D.158409 ] [480])
        (expr_list:REG_DEAD (reg:SF 22 xmm1 [orig:479 D.158409 ] [479])
            (nil))))
(insn 618 617 619 53 (set (reg:SF 21 xmm0)
        (reg:SF 21 xmm0 [orig:481 D.158409 ] [481])) Batch_Mix_Correlations.cc:676 135 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0 [orig:481 D.158409 ] [481])
        (nil)))
(call_insn 619 618 622 53 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sqrtf") [flags 0x41]  <function_decl 0x2b94c3a76200 __builtin_sqrtf>) [0 __builtin_sqrtf S1 A8])
            (const_int 0 [0]))) Batch_Mix_Correlations.cc:676 672 {*call_value}
     (expr_list:REG_UNUSED (reg:SF 21 xmm0)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(debug_insn 622 619 722 53 (var_location:SF dR (clobber (const_int 0 [0]))) Batch_Mix_Correlations.cc:676 -1
     (nil))
(jump_insn 722 622 723 53 (set (pc)
        (label_ref 588)) 659 {jump}
     (nil)
 -> 588)
;;  succ:       28 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14] 44 [r15]

(barrier 723 722 625)
;; basic block 54, loop depth 0, count 0, freq 450, maybe hot
;;  prev block 53, next block 55, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 [50.0%] 
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
(code_label 625 723 626 54 57 "" [1 uses])
(note 626 625 627 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 627 626 628 54 (parallel [
            (set (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                        (const_int 300 [0x12c])) [0 .omp_data_i_23(D)->ME_pass_Counter+0 S4 A32])
                (plus:SI (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                            (const_int 300 [0x12c])) [0 .omp_data_i_23(D)->ME_pass_Counter+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:655 273 {*addsi_1}
     (nil))
;;  succ:       55 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]

;; basic block 55, loop depth 0, count 0, freq 900, maybe hot
;;  prev block 54, next block 56, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       54 [100.0%]  (FALLTHRU)
;;              15 [100.0%] 
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 43 [r14]
;; lr  def 	 17 [flags]
(code_label 628 627 629 55 58 "" [1 uses])
(note 629 628 630 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(debug_insn 630 629 631 55 (var_location:DI itrack (const_int 0 [0])) -1
     (nil))
(insn 631 630 632 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/j:SI (plus:DI (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
                    (const_int 276 [0x114])) [0 .omp_data_i_23(D)->ntrack_max+0 S4 A32])
            (const_int 0 [0]))) Batch_Mix_Correlations.cc:658 3 {*cmpsi_ccno_1}
     (nil))
(jump_insn 632 631 633 55 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 312)
            (pc))) Batch_Mix_Correlations.cc:658 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 900 [0x384])
        (nil))
 -> 312)
;;  succ:       56 [91.0%]  (FALLTHRU)
;;              16 [9.0%] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]

;; basic block 56, loop depth 0, count 0, freq 819, maybe hot
;;  prev block 55, next block 57, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       55 [91.0%]  (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 3 [bx] 17 [flags] 42 [r13] 43 [r14] 44 [r15]
(note 633 632 634 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(note 634 633 635 56 NOTE_INSN_DELETED)
(insn 635 634 7 56 (set (reg:DI 44 r15 [orig:163 D.158397 ] [163])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 %sfp+-96 S8 A64])) Batch_Mix_Correlations.cc:659 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 302 [ D.158403 ])
        (nil)))
(insn 7 635 814 56 (set (reg/v:DI 3 bx [orig:282 itrack ] [282])
        (const_int 0 [0])) Batch_Mix_Correlations.cc:673 87 {*movdi_internal_rex64}
     (nil))
(insn 814 7 555 56 (set (reg:DI 0 ax [498])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [0 %sfp+-112 S8 A64])) Batch_Mix_Correlations.cc:696 87 {*movdi_internal_rex64}
     (nil))
(insn 555 814 815 56 (parallel [
            (set (reg:DI 0 ax [498])
                (mult:DI (reg:DI 0 ax [498])
                    (reg/v:DI 42 r13 [orig:63 imix ] [63])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:696 354 {*muldi3_1}
     (nil))
(insn 815 555 816 56 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [0 %sfp+-96 S8 A64])
        (reg:DI 0 ax [498])) Batch_Mix_Correlations.cc:696 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [498])
        (nil)))
(insn 816 815 532 56 (set (reg:DI 0 ax [499])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [0 %sfp+-120 S8 A64])) Batch_Mix_Correlations.cc:702 87 {*movdi_internal_rex64}
     (nil))
(insn 532 816 817 56 (parallel [
            (set (reg:DI 0 ax [499])
                (mult:DI (reg:DI 0 ax [499])
                    (reg/v:DI 42 r13 [orig:63 imix ] [63])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:702 354 {*muldi3_1}
     (nil))
(insn 817 532 818 56 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 %sfp+-136 S8 A64])
        (reg:DI 0 ax [499])) Batch_Mix_Correlations.cc:702 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [499])
        (nil)))
(insn 818 817 509 56 (set (reg:DI 0 ax [500])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [0 %sfp+-128 S8 A64])) Batch_Mix_Correlations.cc:706 87 {*movdi_internal_rex64}
     (nil))
(insn 509 818 819 56 (parallel [
            (set (reg:DI 0 ax [500])
                (mult:DI (reg:DI 0 ax [500])
                    (reg/v:DI 42 r13 [orig:63 imix ] [63])))
            (clobber (reg:CC 17 flags))
        ]) Batch_Mix_Correlations.cc:706 354 {*muldi3_1}
     (nil))
(insn 819 509 754 56 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [0 %sfp+-80 S8 A64])
        (reg:DI 0 ax [500])) Batch_Mix_Correlations.cc:706 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [500])
        (nil)))
(insn 754 819 755 56 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [0 %sfp+-72 S8 A64])
        (reg/v:DI 42 r13 [orig:63 imix ] [63])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v:DI 42 r13 [orig:63 imix ] [63])
        (nil)))
(insn 755 754 756 56 (set (reg/f:DI 42 r13 [orig:101 track_data_out_private.64 ] [101])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 %sfp+-88 S8 A64])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 101 [ track_data_out_private.64 ])
        (nil)))
(insn 756 755 757 56 (set (reg:DI 44 r15 [orig:163 D.158397 ] [163])
        (reg:DI 44 r15 [orig:163 D.158397 ] [163])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 44 r15 [orig:163 D.158397 ] [163])
        (nil)))
(insn 757 756 758 56 (set (reg/v:DI 3 bx [orig:282 itrack ] [282])
        (reg/v:DI 3 bx [orig:282 itrack ] [282])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v:DI 3 bx [orig:282 itrack ] [282])
        (nil)))
(insn 758 757 724 56 (set (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
        (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])) 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 43 r14 [orig:292 .omp_data_i ] [292])
        (nil)))
(jump_insn 724 758 725 56 (set (pc)
        (label_ref 639)) 659 {jump}
     (nil)
 -> 639)
;;  succ:       17 [100.0%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

(barrier 725 724 646)
;; basic block 57, loop depth 0, count 0, freq 73, maybe hot
;;  prev block 56, next block 58, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [50.0%] 
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 4 [si] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 2 [cx] 5 [di] 17 [flags]
(code_label 646 725 647 57 51 "" [1 uses])
(note 647 646 648 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 648 647 6 57 (parallel [
            (set (reg:DI 2 cx [orig:61 q.1245 ] [61])
                (plus:DI (reg:DI 0 ax [295])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) 274 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 0 ax [295])
        (nil)))
(insn 6 648 726 57 (set (reg:DI 5 di [orig:62 tt.1246 ] [62])
        (const_int 0 [0])) Batch_Mix_Correlations.cc:613 87 {*movdi_internal_rex64}
     (nil))
(jump_insn 726 6 727 57 (set (pc)
        (label_ref 649)) 659 {jump}
     (nil)
 -> 649)
;;  succ:       3 [100.0%] 
;; lr  out 	 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 42 [r13] 43 [r14] 44 [r15]

(barrier 727 726 653)
;; basic block 58, loop depth 0, count 0, freq 146, maybe hot
;;  prev block 57, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 [39.0%] 
;;              8 [100.0%]  (LOOP_EXIT)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 653 727 654 58 50 "" [2 uses])
(note 654 653 0 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]


;; Function _Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}; std::size_t = long unsigned int] (_ZN9__gnu_cxx6__stoaIyycIiEEET0_PFT_PKT1_PPS3_DpT2_EPKcS5_PmS9_, funcdef_no=8665, decl_uid=27044, cgraph_uid=4828)


********** Local #1: **********

New elimination table:
Can eliminate 16 to 7 (offset=80, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)
Updating elimination of equiv for reg 73
Updating elimination of equiv for reg 74
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (1) rzw {*call_value}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 12:  (0) m  (1) re {*movsi_internal}
      Removing equiv init insn 13 (freq=10000)
   13: {r73:DI=frame:DI+0x8;clobber flags:CC;}
      REG_UNUSED flags:CC
      REG_EQUIV frame:DI-0x8
deleting insn with uid = 13.
Changing pseudo 73 in operand 1 of insn 15 on equiv frame:DI+0x8
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=11,losers=1 -- reject
          alt=4,overall=16,losers=2 -- reject
          alt=5,overall=16,losers=2 -- reject
          alt=6,overall=22,losers=2 -- reject
          alt=9,overall=16,losers=2 -- reject
          alt=10,overall=11,losers=1 -- reject
          alt=11,overall=16,losers=2 -- reject
          alt=12,overall=16,losers=2 -- reject
          alt=15,overall=22,losers=2 -- reject
	 Choosing alt 1 in insn 15:  (0) r  (1) rem {*movdi_internal_rex64}
      Creating newreg=76, assigning class GENERAL_REGS to r76
   15: si:DI=r76:DI
      REG_DEAD r73:DI
      REG_EQUAL frame:DI-0x8
    Inserting insn reload before:
   55: {r76:DI=frame:DI+0x8;clobber flags:CC;}

          alt=0,overall=17,losers=2,rld_nregs=2
          alt=1,overall=17,losers=2,rld_nregs=2
          alt=2,overall=18,losers=2 -- reject
          alt=3,overall=1,losers=0,rld_nregs=0
          alt=0,overall=18,losers=2 -- reject
          alt=1,overall=18,losers=2 -- reject
          alt=2,overall=10,losers=1 -- reject
          alt=3,overall=10,losers=1 -- reject
	 Choosing alt 3 in insn 55:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 20:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) rm  (1) re {*cmpdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) rzw {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 42:  (0) m  (1) re {*movdi_internal_rex64}

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4
EBB 5
EBB 6 7
EBB 8

********** Pseudo live ranges #1: **********

  BB 3
   Insn 25: point = 0
   Insn 24: point = 0
  BB 5
   Insn 33: point = 2
   Insn 32: point = 2
  BB 8
   Insn 52: point = 4
   Insn 49: point = 4
  BB 7
   Insn 42: point = 6
   Insn 41: point = 7
  BB 6
   Insn 39: point = 10
   Insn 38: point = 10
  BB 4
   Insn 30: point = 11
   Insn 29: point = 11
  BB 2
   Insn 22: point = 13
   Insn 21: point = 13
   Insn 20: point = 13
   Insn 18: point = 14
   Insn 17: point = 15
   Insn 16: point = 16
   Insn 15: point = 16
	Hard reg 4 is preferable by r76 with profit 1000
   Insn 55: point = 17
   Insn 14: point = 18
   Insn 12: point = 19
   Insn 11: point = 19
   Insn 10: point = 20
   Insn 6: point = 20
   Insn 5: point = 21
   Insn 4: point = 22
   Insn 3: point = 23
   Insn 2: point = 24
 r59: [11..19]
 r60: [4..14]
 r61: [8..13]
 r68: [15..24]
 r69: [11..23] [0..3]
 r70: [8..22]
 r71: [6..21]
 r72: [18..20]
 r74: [6..7]
 r76: [16..17]
Compressing live ranges: from 25 to 10 - 40%
Ranges after the compression:
 r59: [4..9]
 r60: [2..5]
 r61: [4..5]
 r68: [6..9]
 r69: [4..9] [0..1]
 r70: [4..9]
 r71: [2..9]
 r72: [8..9]
 r74: [2..3]
 r76: [6..7]
	 Assigning to 76 (cl=GENERAL_REGS, orig=76, freq=2000, tfirst=76, tfreq=2000)...
	   Assign 4 to reload r76 (freq=2000)

********** Undoing inheritance #1: **********


********** Local #2: **********

New elimination table:
Can eliminate 16 to 7 (offset=80, prev_offset=80)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=16)
Can eliminate 20 to 6 (offset=-56, prev_offset=0)
Updating elimination of equiv for reg 74
changing reg in insn 11
changing reg in insn 29
changing reg in insn 12
changing reg in insn 18
changing reg in insn 49
changing reg in insn 37
changing reg in insn 19
changing reg in insn 20
changing reg in insn 41
changing reg in insn 21
changing reg in insn 2
changing reg in insn 17
changing reg in insn 3
changing reg in insn 32
changing reg in insn 24
changing reg in insn 4
changing reg in insn 41
changing reg in insn 21
changing reg in insn 16
changing reg in insn 5
changing reg in insn 42
changing reg in insn 38
changing reg in insn 41
changing reg in insn 6
changing reg in insn 14
changing reg in insn 41
changing reg in insn 42


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 10.
rescanning insn with uid = 17.
deleting insn with uid = 17.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 33.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 9 n_edges 9 count 9 (    1)


_Ret __gnu_cxx::__stoa(_TRet (*)(const _CharT*, _CharT**, _Base ...), const char*, const _CharT*, std::size_t*, _Base ...) [with _TRet = long long unsigned int; _Ret = long long unsigned int; _CharT = char; _Base = {int}; std::size_t = long unsigned int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 41[r12] 42[r13] 43[r14] 44[r15]
;;  ref usage 	r0={7d,7u} r1={8d,5u} r2={5d,1u} r3={1d,3u} r4={7d,3u} r5={8d,4u} r6={1d,2u} r7={1d,14u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={9d,3u} r18={4d} r19={4d} r20={1e} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d} r39={4d} r40={4d} r41={1d,2u,1e} r42={1d,1u} r43={1d,2u} r44={1d,1u} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} 
;;    total ref usage 264{213d,49u,2e} in 31{27 regular + 4 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/v/f:DI 42 r13 [orig:68 __convf ] [68])
        (reg:DI 5 di [ __convf ])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:54 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ __convf ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 43 r14 [orig:69 __name ] [69])
        (reg:DI 4 si [ __name ])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:54 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ __name ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 3 bx [orig:70 __str ] [70])
        (reg:DI 1 dx [ __str ])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:54 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ __str ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 41 r12 [orig:71 __idx ] [71])
        (reg:DI 2 cx [ __idx ])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:54 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ __idx ])
        (nil)))
(insn 6 5 7 2 (set (reg/v:SI 44 r15 [orig:72 __base#0 ] [72])
        (reg:SI 37 r8 [ __base#0 ])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:54 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 37 r8 [ __base#0 ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(call_insn/u 10 7 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__errno_location") [flags 0x41]  <function_decl 0x2b94c6f04100 __errno_location>) [0 __errno_location S1 A8])
            (const_int 0 [0]))) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:61 672 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 11 10 12 2 (set (reg/f:DI 6 bp [orig:59 D.158427 ] [59])
        (reg:DI 0 ax)) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:61 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (mem:SI (reg/f:DI 6 bp [orig:59 D.158427 ] [59]) [0 *_2+0 S4 A32])
        (const_int 0 [0])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:61 89 {*movsi_internal}
     (nil))
(note 13 12 14 2 NOTE_INSN_DELETED)
(insn 14 13 55 2 (set (reg:SI 1 dx)
        (reg/v:SI 44 r15 [orig:72 __base#0 ] [72])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:62 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 44 r15 [orig:72 __base#0 ] [72])
        (nil)))
(insn 55 14 15 2 (parallel [
            (set (reg:DI 4 si [76])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:62 274 {*adddi_1}
     (nil))
(insn 15 55 16 2 (set (reg:DI 4 si)
        (reg:DI 4 si [76])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:62 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [76])
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8]))
            (nil))))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg/v/f:DI 3 bx [orig:70 __str ] [70])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:62 87 {*movdi_internal_rex64}
     (nil))
(call_insn 17 16 18 2 (set (reg:DI 0 ax)
        (call (mem:QI (reg/v/f:DI 42 r13 [orig:68 __convf ] [68]) [0 *__convf_5(D) S1 A8])
            (const_int 0 [0]))) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:62 672 {*call_value}
     (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:68 __convf ] [68])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (expr_list:REG_DEAD (reg:DI 4 si)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (nil)))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 18 17 19 2 (set (reg:DI 0 ax [orig:60 D.158428 ] [60])
        (reg:DI 0 ax)) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:62 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 19 18 20 2 (var_location:DI __tmp (reg:DI 0 ax [orig:60 D.158428 ] [60])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:62 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 1 dx [orig:61 __endptr.89 ] [61])
        (mem/f/c:DI (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])) [0 __endptr+0 S8 A64])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:64 87 {*movdi_internal_rex64}
     (nil))
(insn 21 20 22 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 1 dx [orig:61 __endptr.89 ] [61])
            (reg/v/f:DI 3 bx [orig:70 __str ] [70]))) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:64 8 {*cmpdi_1}
     (nil))
(jump_insn 22 21 23 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 27)
            (pc))) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:64 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil))
 -> 27)
;;  succ:       3 [0.0%]  (FALLTHRU)
;;              4 [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]

;; basic block 3, loop depth 0, count 0, freq 4
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [0.0%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 23 22 24 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 3 (set (reg:DI 5 di)
        (reg/v/f:DI 43 r14 [orig:69 __name ] [69])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:65 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:69 __name ] [69])
        (nil)))
(call_insn 25 24 26 3 (call (mem:QI (symbol_ref:DI ("_ZSt24__throw_invalid_argumentPKc") [flags 0x41]  <function_decl 0x2b94c6582a00 __throw_invalid_argument>) [0 __throw_invalid_argument S1 A8])
        (const_int 0 [0])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:65 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]

(barrier 26 25 27)
;; basic block 4, loop depth 0, count 0, freq 9996, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [100.0%] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 27 26 28 4 92 "" [1 uses])
(note 28 27 29 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem:SI (reg/f:DI 6 bp [orig:59 D.158427 ] [59]) [0 *_2+0 S4 A32])
            (const_int 34 [0x22]))) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:66 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg/f:DI 6 bp [orig:59 D.158427 ] [59])
        (nil)))
(jump_insn 30 29 31 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:66 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 9996 [0x270c])
        (nil))
 -> 35)
;;  succ:       5 [0.0%]  (FALLTHRU)
;;              6 [100.0%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 41 [r12] 43 [r14]

;; basic block 5, loop depth 0, count 0, freq 4
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [0.0%]  (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp] 43 [r14]
;; lr  use 	 7 [sp] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg:DI 5 di)
        (reg/v/f:DI 43 r14 [orig:69 __name ] [69])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:70 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:69 __name ] [69])
        (nil)))
(call_insn 33 32 34 5 (call (mem:QI (symbol_ref:DI ("_ZSt20__throw_out_of_rangePKc") [flags 0x41]  <function_decl 0x2b94c6582c00 __throw_out_of_range>) [0 __throw_out_of_range S1 A8])
        (const_int 0 [0])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:70 665 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_NORETURN (const_int 0 [0])
            (nil)))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp]

(barrier 34 33 35)
;; basic block 6, loop depth 0, count 0, freq 9992, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 [100.0%] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 41 [r12]
;; lr  use 	 7 [sp] 41 [r12]
;; lr  def 	 17 [flags]
(code_label 35 34 36 6 93 "" [1 uses])
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(debug_insn 37 36 38 6 (var_location:DI __ret (reg:DI 0 ax [orig:60 D.158428 ] [60])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:72 -1
     (nil))
(insn 38 37 39 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 41 r12 [orig:71 __idx ] [71])
            (const_int 0 [0]))) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:74 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 39 38 40 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 43)
            (pc))) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:74 621 {*jcc_1}
     (expr_list:REG_BR_PROB (const_int 1014 [0x3f6])
        (nil))
 -> 43)
;;  succ:       7 [89.9%]  (FALLTHRU)
;;              8 [10.1%] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 41 [r12]

;; basic block 7, loop depth 0, count 0, freq 8979, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [89.9%]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 7 [sp] 41 [r12]
;; lr  use 	 1 [dx] 3 [bx] 7 [sp] 41 [r12]
;; lr  def 	 1 [dx] 17 [flags]
(note 40 39 41 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 7 (parallel [
            (set (reg:DI 1 dx [74])
                (minus:DI (reg/f:DI 1 dx [orig:61 __endptr.89 ] [61])
                    (reg/v/f:DI 3 bx [orig:70 __str ] [70])))
            (clobber (reg:CC 17 flags))
        ]) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:75 310 {*subdi_1}
     (expr_list:REG_DEAD (reg/v/f:DI 3 bx [orig:70 __str ] [70])
        (expr_list:REG_DEAD (reg/f:DI 1 dx [orig:61 __endptr.89 ] [61])
            (expr_list:REG_EQUIV (mem:DI (reg/v/f:DI 41 r12 [orig:71 __idx ] [71]) [0 *__idx_13(D)+0 S8 A64])
                (nil)))))
(insn 42 41 43 7 (set (mem:DI (reg/v/f:DI 41 r12 [orig:71 __idx ] [71]) [0 *__idx_13(D)+0 S8 A64])
        (reg:DI 1 dx [74])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:75 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [74])
        (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:71 __idx ] [71])
            (nil))))
;;  succ:       8 [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]

;; basic block 8, loop depth 0, count 0, freq 9992, maybe hot
;;  prev block 7, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 [10.1%] 
;;              7 [100.0%]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 7 [sp]
;; lr  use 	 0 [ax] 7 [sp]
;; lr  def 	 0 [ax]
(code_label 43 42 44 8 94 "" [1 uses])
(note 44 43 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 44 52 8 (set (reg/i:DI 0 ax)
        (reg:DI 0 ax [orig:60 D.158428 ] [60])) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:78 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax [orig:60 D.158428 ] [60])
        (nil)))
(insn 52 49 0 8 (use (reg/i:DI 0 ax)) /global/common/pdsf_sl6/usg/software/gcc/4.8.1/include/c++/4.8.1/ext/string_conversions.h:78 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]


;; Function Int_t TTree::SetBranchAddress(const char*, T*, TBranch**) [with T = float; Int_t = int] (_ZN5TTree16SetBranchAddressIfEEiPKcPT_PP7TBranch, funcdef_no=8766, decl_uid=144192, cgraph_uid=4941)


********** Local #1: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (1) rzw {*call_value}
New elimination table:
Can eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-40, prev_offset=0)
changing reg in insn 7
changing reg in insn 22
changing reg in insn 30
changing reg in insn 26
changing reg in insn 23
changing reg in insn 14
changing reg in insn 31
changing reg in insn 17
changing reg in insn 15
changing reg in insn 37
changing reg in insn 42
changing reg in insn 2
changing reg in insn 35
changing reg in insn 27
changing reg in insn 3
changing reg in insn 34
changing reg in insn 4
changing reg in insn 33
changing reg in insn 5
changing reg in insn 32
changing reg in insn 27
changing reg in insn 36


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 21.
rescanning insn with uid = 36.
deleting insn with uid = 36.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


Int_t TTree::SetBranchAddress(const char*, T*, TBranch**) [with T = float; Int_t = int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9] 41[r12] 42[r13] 43[r14]
;;  ref usage 	r0={7d,7u} r1={6d,3u} r2={5d,2u} r3={1d,2u} r4={6d,3u} r5={7d,4u} r6={1d,3u} r7={1d,9u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={4d,1u} r18={3d} r19={3d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={5d,1u} r38={7d,4u} r39={3d} r40={3d} r41={1d,1u} r42={1d,1u} r43={1d,1u} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 211{169d,42u,0e} in 31{28 regular + 3 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/f:DI 3 bx [orig:65 this ] [65])
        (reg:DI 5 di [ this ])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:527 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 41 r12 [orig:66 bname ] [66])
        (reg:DI 4 si [ bname ])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:527 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ bname ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 42 r13 [orig:67 add ] [67])
        (reg:DI 1 dx [ add ])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:527 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ add ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 43 r14 [orig:68 ptr ] [68])
        (reg:DI 2 cx [ ptr ])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:527 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ ptr ])
        (nil)))
(note 6 5 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 6 11 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:528 89 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:528 89 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZTIf") [flags 0x40]  <var_decl 0x2b94cc144130 _ZTIf>)) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:528 87 {*movdi_internal_rex64}
     (nil))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN6TClass8GetClassERKSt9type_infobb") [flags 0x41]  <function_decl 0x2b94c9f9a100 GetClass>) [0 GetClass S1 A8])
            (const_int 0 [0]))) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:528 672 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 14 13 15 2 (set (reg/v/f:DI 6 bp [orig:60 cl ] [60])
        (reg:DI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:528 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 15 14 16 2 (var_location:DI cl (reg/v/f:DI 6 bp [orig:60 cl ] [60])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:528 -1
     (nil))
(debug_insn 16 15 7 2 (var_location:SI type (const_int -1 [0xffffffffffffffff])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:529 -1
     (nil))
(insn 7 16 17 2 (set (reg/v:SI 38 r9 [orig:59 type ] [59])
        (const_int -1 [0xffffffffffffffff])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:529 89 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))
(insn 17 7 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 6 bp [orig:60 cl ] [60])
            (const_int 0 [0]))) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:530 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 24)
            (pc))) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:530 621 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8987 [0x231b])
            (nil)))
 -> 24)
;;  succ:       3 [10.1%]  (FALLTHRU)
;;              4 [89.9%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

;; basic block 3, loop depth 0, count 0, freq 1013, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [10.1%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 3 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZTIf") [flags 0x40]  <var_decl 0x2b94cc144130 _ZTIf>)) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:530 87 {*movdi_internal_rex64}
     (nil))
(call_insn 21 20 22 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN9TDataType7GetTypeERKSt9type_info") [flags 0x41]  <function_decl 0x2b94c9541f00 GetType>) [0 GetType S1 A8])
            (const_int 0 [0]))) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:530 672 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 22 21 23 3 (set (reg/v:SI 38 r9 [orig:59 type ] [59])
        (reg:SI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:530 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(debug_insn 23 22 24 3 (var_location:SI type (reg/v:SI 38 r9 [orig:59 type ] [59])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:530 -1
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [89.9%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 24 23 25 4 97 "" [1 uses])
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 26 25 27 4 (var_location:SI type (reg/v:SI 38 r9 [orig:59 type ] [59])) -1
     (nil))
(insn 27 26 28 4 (set (reg/f:DI 0 ax [orig:69 this_8(D)->D.101461.D.78818._vptr.TObject ] [69])
        (mem/f/j:DI (reg/f:DI 3 bx [orig:65 this ] [65]) [0 this_8(D)->D.101461.D.78818._vptr.TObject+0 S8 A64])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 4 (set (mem:SI (reg/f:DI 7 sp) [0 S4 A64])
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 89 {*movsi_internal}
     (nil))
(note 29 28 30 4 NOTE_INSN_DELETED)
(insn 30 29 31 4 (set (reg:SI 38 r9)
        (reg/v:SI 38 r9 [orig:59 type ] [59])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 38 r9 [orig:59 type ] [59])
        (nil)))
(insn 31 30 32 4 (set (reg:DI 37 r8)
        (reg/v/f:DI 6 bp [orig:60 cl ] [60])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:60 cl ] [60])
        (nil)))
(insn 32 31 33 4 (set (reg:DI 2 cx)
        (reg/v/f:DI 43 r14 [orig:68 ptr ] [68])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:68 ptr ] [68])
        (nil)))
(insn 33 32 34 4 (set (reg:DI 1 dx)
        (reg/v/f:DI 42 r13 [orig:67 add ] [67])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:67 add ] [67])
        (nil)))
(insn 34 33 35 4 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:66 bname ] [66])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:66 bname ] [66])
        (nil)))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:65 this ] [65])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:65 this ] [65])
        (nil)))
(call_insn 36 35 37 4 (set (reg:SI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:69 this_8(D)->D.101461.D.78818._vptr.TObject ] [69])
                        (const_int 1584 [0x630])) [0 MEM[(int (*__vtbl_ptr_type) () *)_9 + 1584B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_10;this_8(D)->198) S1 A8])
            (const_int 8 [0x8]))) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 672 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:69 this_8(D)->D.101461.D.78818._vptr.TObject ] [69])
        (expr_list:REG_DEAD (reg:SI 38 r9)
            (expr_list:REG_DEAD (reg:DI 37 r8)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (expr_list:REG_DEAD (reg:DI 4 si)
                        (expr_list:REG_DEAD (reg:DI 2 cx)
                            (expr_list:REG_DEAD (reg:DI 1 dx)
                                (nil))))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                        (expr_list:REG_BR_PRED (use (reg:SI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0 S4 A64]))
                                (nil)))))))))
(insn 37 36 42 4 (set (reg:SI 0 ax [orig:63 D.158435 ] [63])
        (reg:SI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 42 37 45 4 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:63 D.158435 ] [63])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:532 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:63 D.158435 ] [63])
        (nil)))
(insn 45 42 0 4 (use (reg/i:SI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:532 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]


;; Function Int_t TTree::SetBranchAddress(const char*, T*, TBranch**) [with T = unsigned int; Int_t = int] (_ZN5TTree16SetBranchAddressIjEEiPKcPT_PP7TBranch, funcdef_no=8767, decl_uid=144197, cgraph_uid=4942)


********** Local #1: **********

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (1) rzw {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) Z {*movdi_internal_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (1) rzw {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) rem {*movdi_internal_rex64}
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (1) rzw {*call_value}
New elimination table:
Can eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 20 to 7 (offset=16, prev_offset=0)
Can eliminate 20 to 6 (offset=-40, prev_offset=0)
changing reg in insn 7
changing reg in insn 22
changing reg in insn 30
changing reg in insn 26
changing reg in insn 23
changing reg in insn 14
changing reg in insn 31
changing reg in insn 17
changing reg in insn 15
changing reg in insn 37
changing reg in insn 42
changing reg in insn 2
changing reg in insn 35
changing reg in insn 27
changing reg in insn 3
changing reg in insn 34
changing reg in insn 4
changing reg in insn 33
changing reg in insn 5
changing reg in insn 32
changing reg in insn 27
changing reg in insn 36


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 21.
rescanning insn with uid = 36.
deleting insn with uid = 36.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)


Int_t TTree::SetBranchAddress(const char*, T*, TBranch**) [with T = unsigned int; Int_t = int]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 3[bx] 4[si] 5[di] 6[bp] 7[sp] 17[flags] 37[r8] 38[r9] 41[r12] 42[r13] 43[r14]
;;  ref usage 	r0={7d,7u} r1={6d,3u} r2={5d,2u} r3={1d,2u} r4={6d,3u} r5={7d,4u} r6={1d,3u} r7={1d,9u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={4d,1u} r18={3d} r19={3d} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={5d,1u} r38={7d,4u} r39={3d} r40={3d} r41={1d,1u} r42={1d,1u} r43={1d,1u} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} 
;;    total ref usage 211{169d,42u,0e} in 31{28 regular + 3 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY [100.0%]  (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (reg/f:DI 3 bx [orig:65 this ] [65])
        (reg:DI 5 di [ this ])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:527 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (reg/v/f:DI 41 r12 [orig:66 bname ] [66])
        (reg:DI 4 si [ bname ])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:527 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 4 si [ bname ])
        (nil)))
(insn 4 3 5 2 (set (reg/v/f:DI 42 r13 [orig:67 add ] [67])
        (reg:DI 1 dx [ add ])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:527 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 1 dx [ add ])
        (nil)))
(insn 5 4 6 2 (set (reg/v/f:DI 43 r14 [orig:68 ptr ] [68])
        (reg:DI 2 cx [ ptr ])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:527 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 2 cx [ ptr ])
        (nil)))
(note 6 5 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 6 11 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:528 89 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:528 89 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZTIj") [flags 0x40]  <var_decl 0x2b94cc1442f8 _ZTIj>)) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:528 87 {*movdi_internal_rex64}
     (nil))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN6TClass8GetClassERKSt9type_infobb") [flags 0x41]  <function_decl 0x2b94c9f9a100 GetClass>) [0 GetClass S1 A8])
            (const_int 0 [0]))) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:528 672 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_BR_PRED (use (reg:SI 4 si))
            (expr_list:REG_BR_PRED (use (reg:SI 1 dx))
                (nil)))))
(insn 14 13 15 2 (set (reg/v/f:DI 6 bp [orig:60 cl ] [60])
        (reg:DI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:528 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(debug_insn 15 14 16 2 (var_location:DI cl (reg/v/f:DI 6 bp [orig:60 cl ] [60])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:528 -1
     (nil))
(debug_insn 16 15 7 2 (var_location:SI type (const_int -1 [0xffffffffffffffff])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:529 -1
     (nil))
(insn 7 16 17 2 (set (reg/v:SI 38 r9 [orig:59 type ] [59])
        (const_int -1 [0xffffffffffffffff])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:529 89 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int -1 [0xffffffffffffffff])
        (nil)))
(insn 17 7 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/v/f:DI 6 bp [orig:60 cl ] [60])
            (const_int 0 [0]))) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:530 4 {*cmpdi_ccno_1}
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 24)
            (pc))) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:530 621 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (expr_list:REG_BR_PROB (const_int 8987 [0x231b])
            (nil)))
 -> 24)
;;  succ:       3 [10.1%]  (FALLTHRU)
;;              4 [89.9%] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

;; basic block 3, loop depth 0, count 0, freq 1013, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [10.1%]  (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(note 19 18 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 3 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZTIj") [flags 0x40]  <var_decl 0x2b94cc1442f8 _ZTIj>)) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:530 87 {*movdi_internal_rex64}
     (nil))
(call_insn 21 20 22 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN9TDataType7GetTypeERKSt9type_info") [flags 0x41]  <function_decl 0x2b94c9541f00 GetType>) [0 GetType S1 A8])
            (const_int 0 [0]))) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:530 672 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (nil)))
(insn 22 21 23 3 (set (reg/v:SI 38 r9 [orig:59 type ] [59])
        (reg:SI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:530 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(debug_insn 23 22 24 3 (var_location:SI type (reg/v:SI 38 r9 [orig:59 type ] [59])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:530 -1
     (nil))
;;  succ:       4 [100.0%]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

;; basic block 4, loop depth 0, count 0, freq 10000, maybe hot
;;  prev block 3, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 [89.9%] 
;;              3 [100.0%]  (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15]
(code_label 24 23 25 4 101 "" [1 uses])
(note 25 24 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(debug_insn 26 25 27 4 (var_location:SI type (reg/v:SI 38 r9 [orig:59 type ] [59])) -1
     (nil))
(insn 27 26 28 4 (set (reg/f:DI 0 ax [orig:69 this_8(D)->D.101461.D.78818._vptr.TObject ] [69])
        (mem/f/j:DI (reg/f:DI 3 bx [orig:65 this ] [65]) [0 this_8(D)->D.101461.D.78818._vptr.TObject+0 S8 A64])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 87 {*movdi_internal_rex64}
     (nil))
(insn 28 27 29 4 (set (mem:SI (reg/f:DI 7 sp) [0 S4 A64])
        (const_int 0 [0])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 89 {*movsi_internal}
     (nil))
(note 29 28 30 4 NOTE_INSN_DELETED)
(insn 30 29 31 4 (set (reg:SI 38 r9)
        (reg/v:SI 38 r9 [orig:59 type ] [59])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 38 r9 [orig:59 type ] [59])
        (nil)))
(insn 31 30 32 4 (set (reg:DI 37 r8)
        (reg/v/f:DI 6 bp [orig:60 cl ] [60])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 6 bp [orig:60 cl ] [60])
        (nil)))
(insn 32 31 33 4 (set (reg:DI 2 cx)
        (reg/v/f:DI 43 r14 [orig:68 ptr ] [68])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 43 r14 [orig:68 ptr ] [68])
        (nil)))
(insn 33 32 34 4 (set (reg:DI 1 dx)
        (reg/v/f:DI 42 r13 [orig:67 add ] [67])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 42 r13 [orig:67 add ] [67])
        (nil)))
(insn 34 33 35 4 (set (reg:DI 4 si)
        (reg/v/f:DI 41 r12 [orig:66 bname ] [66])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/v/f:DI 41 r12 [orig:66 bname ] [66])
        (nil)))
(insn 35 34 36 4 (set (reg:DI 5 di)
        (reg/f:DI 3 bx [orig:65 this ] [65])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 87 {*movdi_internal_rex64}
     (expr_list:REG_DEAD (reg/f:DI 3 bx [orig:65 this ] [65])
        (nil)))
(call_insn 36 35 37 4 (set (reg:SI 0 ax)
        (call (mem:QI (mem/f:DI (plus:DI (reg/f:DI 0 ax [orig:69 this_8(D)->D.101461.D.78818._vptr.TObject ] [69])
                        (const_int 1584 [0x630])) [0 MEM[(int (*__vtbl_ptr_type) () *)_9 + 1584B]+0 S8 A64]) [0 *OBJ_TYPE_REF(_10;this_8(D)->198) S1 A8])
            (const_int 8 [0x8]))) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 672 {*call_value}
     (expr_list:REG_DEAD (reg/f:DI 0 ax [orig:69 this_8(D)->D.101461.D.78818._vptr.TObject ] [69])
        (expr_list:REG_DEAD (reg:SI 38 r9)
            (expr_list:REG_DEAD (reg:DI 37 r8)
                (expr_list:REG_DEAD (reg:DI 5 di)
                    (expr_list:REG_DEAD (reg:DI 4 si)
                        (expr_list:REG_DEAD (reg:DI 2 cx)
                            (expr_list:REG_DEAD (reg:DI 1 dx)
                                (nil))))))))
    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 5 di))
        (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 4 si))
            (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 1 dx))
                (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 2 cx))
                    (expr_list:REG_FRAME_RELATED_EXPR (use (reg:DI 37 r8))
                        (expr_list:REG_BR_PRED (use (reg:SI 38 r9))
                            (expr_list:REG_BR_PRED (use (mem:SI (reg/f:DI 7 sp) [0 S4 A64]))
                                (nil)))))))))
(insn 37 36 42 4 (set (reg:SI 0 ax [orig:63 D.158439 ] [63])
        (reg:SI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:531 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 42 37 45 4 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:63 D.158439 ] [63])) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:532 89 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax [orig:63 D.158439 ] [63])
        (nil)))
(insn 45 42 0 4 (use (reg/i:SI 0 ax)) /usr/common/usg/software/ROOT/6.08.00/include/root/TTree.h:532 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 7 [sp]

